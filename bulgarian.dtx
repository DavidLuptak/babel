% \iffalse meta-com

% Copyright 1989-2008 Johannes L. Braams and any individual aut
% listed elsewhere in this file.  All rights reser

% This file is part of the Babel sys
% ----------------------------------

% It may be distributed and/or modified under
% conditions of the LaTeX Project Public License, either version
% of this license or (at your option) any later vers
% The latest version of this license i
%   http://www.latex-project.org/lppl
% and version 1.3 or later is part of all distributions of L
% version 2003/12/01 or la

% This work has the LPPL maintenance status "maintain

% The Current Maintainer of this work is Johannes Bra

% The list of all files belonging to the Babel syste
% given in the file `manifest.bbl. See also `legal.bbl' for additi
% informat

% The list of derived (unpacked) files belonging to the distribu
% and covered by LPPL is defined by the unpacking scripts (
% extension .ins) which are part of the distribut
%
%    \CheckSum{1
%
%    \iff
%    Tell the \LaTeX\ system who we are and write an entry on
%    transcr
%<*
\ProvidesFile{bulgarian.
%</
%<code>\ProvidesLanguage{bulgar
          [2008/03/21 v1.0g Bulgarian support from the babel sys

%% File `bulgarian.
%% Babel package for LaTeX versio
%% Copyright (C) 1989-
%%               by Johannes Braams,TeX

%% Bulgarian Language Definition
%%               Copyright (C) 1995-
%%               by Georgi.Boshnakov <georgi.boshnakov at umist.ac
%%                  Johannes Braams,TeX

%% Adapted from russianb
%%               by Georgi.Boshnakov <georgi.boshnakov at umist.ac

%% Please report errors to:J.L.Br
%%               babel at braams.xs4al

%<*filedri
\documentclass{ltx
\newcommand\TeXhax{\TeX
\newcommand\babel{\textsf{bab
\newcommand\langvar{$\langle\it lang \rang
\newcommand\note[
\newcommand\Lopt[1]{\textsf{
\newcommand\file[1]{\texttt{
\newcommand\pkg[1]{\texttt{
\begin{docum
 \DocInput{bulgarian.
\end{docum
%</filedri

% \GetFileInfo{bulgarian.

%    \changes{bulgarian-0.99}{2000/06/1
%          This is a prerelease version of this f
%          Features needing further testing are remov
%
%    \section{The Bulgarian langu
%
%    The file \file{\filename}\footnote{The file described in
%    section has version number \fileversion\ and was last revise
%    \filedate. This file was initially derived from the August-
%    version of \file{russianb.dt
%
%    It is (reasonably) backward compatible with the 1994/
%    (non-babel) bulgarian style (bulgaria.sty) by Ge
%    Boshnakov---files prepared for that style should com
%    successfully (with vastly improved appearance due to usag
%    standard fonts).} provides the language-specific macros for
%    Bulgarian langua
%
%    Users should take note of the vaious ``cyrillic'' da
%    available now (see below). These should remove many cause
%    headache. Also, although by default the Bulgarian quotation m
%    will appear automatically when typesetting in Bulgarian, i
%    better to use the new commands \cs{"'} and \cs{"'} w
%    explicitly typeset t
%    Note: automatic switch to Bulgarian quotation is withd
%    for the moment and may not be reintroduced at
%
%    For this language the character |"| is made active
%    table~\ref{tab:bulgarian-quote} an overview is given of
%    purp
%
%    \begin{table}[
%      \begin{cen
%      \begin{tabular}{lp{8
%       \verb="|= & disable ligature at this position.
%       |"-| & an explicit hyphen sign, allowing hyphena
%                       in the rest of the word.
%       |"---| & Cyrillic emdash in plain text.
%       |"--~| & Cyrillic emdash in compound names (surnames).
%       |"--*| & Cyrillic emdash for denoting direct speech.
%       |""|  & like |"-|, but producing no hyphen
%                       (for compound words with hyphen, e.g.\ |x-
%                       or some other signs  as ``disable/enable'').
%       |"~|   & for a compound word mark without a breakpoint.
%       |"=|   & for a compound word mark with a breakpoint, allo
%                       hyphenation in the composing words.
%       |",|   & thinspace for initials with a breakp
%                       in following surname.
%       |"`|   & for German left double qu
%                       (looks like ,\kern-0.08em,).
%       |"'|   & for German right double quotes (looks like ``).      \\%^
%       |"<|   & for French left double quotes  (looks like $<\!\!<$
%       |">|   & for French right double quotes (looks like $>\!\!>$
%      \end{tabu
%      \caption{The extra definitions
%                by\file{bulgarian}}\label{tab:bulgarian-qu
%      \end{cen
%    \end{ta
%
%    The quotes in table~\ref{tab:bulgarian-quote} can also be typ
%    by using the commands in table~\ref{tab:bmore-quo
%
%    \begin{table}[
%      \begin{cen
%      \begin{tabular}{lp{8
%       |\cdash---| & Cyrillic emdash in plain text.
%       |\cdash--~| & Cyrillic emdash in compound names (surnames).
%       |\cdash--*| & Cyrillic emdash for denoting direct speech.
%       |\glqq|     & for German left double qu
%                         (looks like,\kern-0.08em,).
%       |\grqq|     & for German right double quotes (looks like ``).\\^^
%       |\flqq|     & for French left double quotes (looks like $<\!\!<$
%       |\frqq|     & for French right double quotes (looks like $>\!\!>$
%       |\dq|       & the original quotes character (|
%      \end{tabu
%      \caption{More commands which produce quotes, def
%                by \babel}\label{tab:bmore-qu
%      \end{cen
%    \end{ta
%
%    The French quotes are also available as ligatures `|<<|'
%    `|>>|' in 8-bit Cyrillic font encodings (\texttt{L
%    \texttt{X2}, \texttt{T2*}) and as `|<|' and `|>|' character
%    7-bit Cyrillic font encodings (\texttt{OT2} and \texttt{LW
%
%    The quotation marks traditionally used in Bulgarian were borr
%    from German o they keep their original names. French quota
%    marks may be seen as well in older boo

% \StopEventual

%    The macro |\LdfInit| takes care of preventing that this fil
%    loaded more than once, checking the category code of
%    \texttt{@} sign, e
%
%    \begin{macroc
%<*c
\LdfInit{bulgarian}{captionsbulgar
%    \end{macroc
%
%    When this file is read as an option, i.e., by the |\usepack
%    command, \texttt{bulgarian} will be an `unknown' language
%    which case we have to make it known. So we check for
%    existence of |\l@bulgarian| to see whether we have t
%    something he
%
%    \begin{macroc
\ifx\l@bulgarian\@undef
  \@nopatterns{Bulgar
  \adddialect\l@bulgar

%    \end{macroc
%
%
%
% \begin{macro}{\latinencod

%    We need to know the encoding for text that is supposed t
%    which is active at the end of the \babel\ package. If
%    \pkg{fontenc} package is loaded later, then \ldots too
%
%    \begin{macroc
\let\latinencoding\cf@enco
%    \end{macroc
%
% \end{ma

%    The user may choose between different available Cyri
%    encodings---e.g., \texttt{X2}, \texttt{LCY}, or \texttt{L
%    If the user wants to use a font encoding other than the def
%    (\texttt{T2A}), he has to load the corresponding
%    \emph{before} \file{bulgarian.st
%    This may be done in the following
%
%    \begin{verba
%      \usepackage[LCY,OT1]{fontenc}     %overwrite the default encod
%      \usepackage[english,bulgarian]{ba
%    \end{verba
%    \un
%
%    Note: most people would prefer the \texttt{T2A} to \texttt{
%    because \texttt{X2} does not contain Latin letters, and  u
%    should be very careful to switch the language every time t
%    want to typeset a Latin word inside a Bulgarian phrase or
%    versa. On the other hand, switching the language is a
%    practice anyway. With a decent text processing program it
%    not involve more work than switching between the Bulgarian
%    English keyboard. Moreover that the far most common disrup
%    occurs  as a result of forgetting to switch back to cyri
%    keyboa
%
%    We parse the |\cdp@list| containing the encodings know
%    \LaTeX\ in the order they were loaded. We set
%    |\cyrillicencoding| to the \emph{last} loaded encoding in
%    list of supported Cyrillic encodings: \texttt{OT2}, \texttt{L
%    \texttt{LCY}, \texttt{X2}, \texttt{T2C}, \texttt{T
%    \texttt{T2A}, if a
%
%
%    \begin{macroc
\def\reserved@a#1
   \edef\reserved@b{
   \edef\reserved@c{
   \ifx\reserved@b\reserv
     \let\cyrillicencoding\reserv

\def\cdp@elt#1#2#3
   \reserved@a{#1}{O
   \reserved@a{#1}{L
   \reserved@a{#1}{L
   \reserved@a{#1}{
   \reserved@a{#1}{T
   \reserved@a{#1}{T
   \reserved@a{#1}{T
\cdp@
%    \end{macroc
%
%    Now, if |\cyrillicencoding| is undefined, then the user did
%    load any of supported encodings. So, we have to
%    |\cyrillicencoding| to some default value. We test the pres
%    of the encoding definition files in the order from
%    preferable to more preferable encodings. We use the lower
%    names (i.e., \file{lcyenc.def} instead of \file{LCYenc.de
%
%    \begin{macroc
\ifx\cyrillicencoding\undef
  \IfFileExists{ot2enc.def}{\def\cyrillicencoding{OT2}}\r
  \IfFileExists{lwnenc.def}{\def\cyrillicencoding{LWN}}\r
  \IfFileExists{lcyenc.def}{\def\cyrillicencoding{LCY}}\r
  \IfFileExists{x2enc.def}{\def\cyrillicencoding{X2}}\r
  \IfFileExists{t2cenc.def}{\def\cyrillicencoding{T2C}}\r
  \IfFileExists{t2benc.def}{\def\cyrillicencoding{T2B}}\r
  \IfFileExists{t2aenc.def}{\def\cyrillicencoding{T2A}}\r
%    \end{macroc
%
%    If |\cyrillicencoding| is still undefined, then the user s
%    not to  have a properly installed distribution. A fatal er
%
%    \begin{macroc
\ifx\cyrillicencoding\undef
    \PackageError{bab
    {No Cyrillic encoding definition files were fou
    {Your installation is incomplete. \MessageB
    You need at least one of the following files: \MessageB
    \space\s
    x2enc.def, t2aenc.def, t2benc.def, t2cenc.def, \MessageB
    \space\s
    lcyenc.def, lwnenc.def, ot2enc.de
  \
%    \end{macroc
%
%    We avoid |\usepackage[\cyrillicencoding]{fontenc}| becaus
%    don't want to force the switch of |\encodingdefau
%
%    \begin{macroc
    \lower
      \expandafter{\expandafter\input\cyrillicencoding enc.def\rel


%    \end{macroc
%
%    \begin{verba
%      \PackageInfo{ba
%        {Using `\cyrillicencoding' as a default Cyrillic encodi
%    \end{verba
%    \un
%
%
%
%    \begin{macroc
\DeclareRobustCommand{\Bulgaria
  \fontencoding\cyrillicencoding\select
  \let\encodingdefault\cyrillicenco
  \expandafter\set@hyphenmins\bulgarianhyphen
  \language\l@bulgar
\DeclareRobustCommand{\Englis
  \fontencoding\latinencoding\select
  \let\encodingdefault\latinenco
  \expandafter\set@hyphenmins\englishhyphen
  \language\l@engl
\let\Bul\Bulga
\let\Bg\Bulga
\let\cyrillictext\Bulga
\let\cyr\Bulga
\let\Eng\Eng
\def\selectenglanguage{\selectlanguage{engli
\def\selectbglanguage{\selectlanguage{bulgari
%    \end{macroc
%
%    Since the \texttt{X2} encoding does not contain Latin letters
%    should make some redefinitions of \LaTeX\ macros which implici
%    produce Latin lett
%
%
%    \begin{macroc
\expandafter\ifx\csname T@X2\endcsname\relax\
%    \end{macroc
%
%    We put |\latinencoding| in braces to avoid problems with |\@a
%    inside minipages (e.g., footnotes inside minipages) w
%    |\@alph| is expanded and we get for example `|\fontencoding O
%    (|\fontencoding| is robu
%
% \changes{bulgarian-1.0c}{2003/06/14}{Added missing closing br
%    \begin{macroc
  \def\@Alph@eng#1{{\fontencoding{\latinencoding}\selectf
      \ifcase#1\or A\or B\or C\or D\or E\or F\or G\or H\or I\or
      K\or L\or M\or N\or O\or P\or Q\or R\or S\or T\or U\or V\or
      X\or Y\or Z\else \@ctrerr\f
  \def\@alph@eng#1{{\fontencoding{\latinencoding}\select
      \ifcase#1\or a\or b\or c\or d\or e\or f\or g\or h\or i\or
      k\or l\or m\or n\or o\or p\or q\or r\or s\or t\or u\or v\or
      x\or y\or z\else \@ctrerr\f
  \let\@Alph\@Alph
  \let\@alph\@alph
%    \end{macroc
%
%    Unfortunately, the commands |\AA| and |\aa| are not enco
%    dependent in \LaTeX\ (unlike e.g., |\oe| or |\DH|). They
%    defined as |\r{A}| and |\r{a}|. This leads to unpredict
%    results when the font encoding does not contain the Latin let
%    `A' and `a' (like \texttt{X2
%
%    \begin{macroc
  \DeclareTextSymbolDefault{\AA}{
  \DeclareTextSymbolDefault{\aa}{
  \DeclareTextCommand{\AA}{OT1}{\
  \DeclareTextCommand{\aa}{OT1}{\

%    \end{macroc
%
%    The following block redefines the character class of upper
%    Greek letters and some accents, if it is equal to 7 (vari
%    family), to avoid incorrect results if the font encoding in
%    math family does not contain these characters in places of
%    encoding. The code was taken from |amsmath.dtx|. See comments
%    further explanation the
%
%    \begin{macroc
\begingroup\catcode`\
% uppercase greek lett
\def\@tempa#1{\expandafter\@tempb\meaning#1\relax\relax\relax\r
 "0000\@ni
\def\@tempb#1"#2#3#4#5#6\@nil
\ifnum"#2=7 \count@"1#3#4#5\r
\ifnum\count@<"1000 \else \global\mathchardef#7="0#3#4#5\relax

\@tempa\Gamma\@tempa\Delta\@tempa\Theta\@tempa\Lambda\@temp
\@tempa\Pi\@tempa\Sigma\@tempa\Upsilon\@tempa\Phi\@tempa
\@tempa\O
% some acce
\def\@tempa#1#2\@nil{\def\@tempc{#1}}\def\@tempb{\mathacc
\expandafter\@tempa\hat\relax\relax\
\ifx\@tempb\@t
\def\@tempa#1\@nil{
\def\@tempb#1{\afterassignment\@tempa\mathchardef\@temp
\def\do#1"
\def\@tempd#1{\expandafter\@tempb#1\
 \ifnum\@tempc>
 \xdef#1{\mathaccent"\expandafter\do\meaning\@tempc\spa

\@tempd\hat\@tempd\check\@tempd\tilde\@tempd\acute\@tempd\g
\@tempd\dot\@tempd\ddot\@tempd\breve\@tempd

\endg
%    \end{macroc
%
%    The user should use the \pkg{inputenc} package when any 8
%    Cyrillic font encoding is used, selecting one of the Cyri
%    input encodings. We do not assume any default input encoding
%    the user should explicitly call the \pkg{inputenc} packag
%    |\usepackage{inputenc}|. We also removed |\AtBeginDocument|
%    \pkg{inputenc} should be used before \bab
%
%    \begin{macroc
\@ifpackageloaded{inputenc}
\def\reserved@a{L
\ifx\reserved@a\cyrillicencoding\
\def\reserved@a{O
\ifx\reserved@a\cyrillicencoding\
\PackageWarning{bab
{No input encoding specified for Bulgarian language}\fi
%    \end{macroc
%
%    Now we define two commands that offer the possibility to sw
%    between Cyrillic and Roman encodi
%
% \begin{macro}{\cyrillict
% \begin{macro}{\latint

%    The command |\cyrillictext| will switch from Latin font enco
%    to the Cyrillic font encoding, the command |\latintext| swit
%    back. This assumes that the `normal' font encoding is a L
%    one. These commands are \emph{declarations}, for shorter pe
%    of text the commands |\textlatin| and |\textcyrillic| ca
%    u
%
%    We comment out |\latintext| since it is defined in the cor
%    babel (babel.def). We add the shorthand |\lat| for |\latinte
%    Note that |\cyrillictext| has been defined ab
%
%    \begin{macroc
% \DeclareRobustCommand{\latintex
% \fontencoding{\latinencoding}\select
%   \def\encodingdefault{\latinencodi
\let\lat\latin
%    \end{macroc
%
% \end{ma
% \end{ma

% \begin{macro}{\textcyril
% \begin{macro}{\textla

%    These commands take an argument which is then typeset using
%    requested font encod
%    |\textlatin| is commented out since it is defined in the cor
%    babel. (It is defined there with |\DeclareRobustCommand| inste
%
%    \begin{macroc
\DeclareTextFontCommand{\textcyrillic}{\cyrillict
% \DeclareTextFontCommand{\textlatin}{\latint
%    \end{macroc
%
% \end{ma
% \end{ma

%    The next step consists of defining commands to switch to (
%    from) the Bulgarian langu
%
% \begin{macro}{\captionsbulgar

%    The macro |\captionsbulgarian| defines all strings used in
%    four standard document classes provided with \LaTeX. The
%    commands |\cyr| and |\lat| activate Cyrillic resp. Latin encod
%
%    \begin{macroc
\addto\captionsbulgari
  \def\prefacena
    {\cyr\CYRP\cyrr\cyre\cyrd\cyrg\cyro\cyrv\cyro\cyr
  \def\refna
    {\cyr\CYRL\cyri\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyr
  \def\abstractna
    {\cyr\CYRA\cyrb\cyrs\cyrt\cyrr\cyra\cyrk\cyr
  \def\bibna
    {\cyr\CYRB\cyri\cyrb\cyrl\cyri\cyro\cyrg\cyrr\cyra\cyrf\cyri\cyry
  \def\chapterna
    {\cyr\CYRG\cyrl\cyra\cyrv\cyr
  \def\appendixna
    {\cyr\CYRP\cyrr\cyri\cyrl\cyro\cyrzh\cyre\cyrn\cyri\cyr
  \def\contentsna
    {\cyr\CYRS\cyrhrdsn\cyrd\cyrhrdsn\cyrr\cyrzh\cyra\cyrn\cyri\cyr
  \def\listfigurena
    {\cyr\CYRS\cyrp\cyri\cyrs\cyrhrdsn\cyrk\ \cyrn\cyra\ \cyrf\cyri\cyrg\cyru\cyrr\cyri\cyrt\cyr
  \def\listtablena
    {\cyr\CYRS\cyrp\cyri\cyrs\cyrhrdsn\cyrk\ \cyrn\cyra\ \cyrt\cyra\cyrb\cyrl\cyri\cyrc\cyri\cyrt\cyr
  \def\indexna
    {\cyr\CYRA\cyrz\cyrb\cyru\cyrch\cyre\cyrn\ \cyru\cyrk\cyra\cyrz\cyra\cyrt\cyre\cyr
  \def\authorna
    {\cyr\CYRI\cyrm\cyre\cyrn\cyre\cyrn\ \cyru\cyrk\cyra\cyrz\cyra\cyrt\cyre\cyr
  \def\figurena
    {\cyr\CYRF\cyri\cyrg\cyru\cyrr\cyr
  \def\tablena
    {\cyr\CYRT\cyra\cyrb\cyrl\cyri\cyrc\cyr
  \def\partna
    {\cyr\CYRCH\cyra\cyrs\cyr
  \def\enclna
    {\cyr\CYRP\cyrr\cyri\cyrl\cyro\cyrzh\cyre\cyrn\cyri\cyry
  \def\ccna
    {\cyr\cyrk\cyro\cyrp\cyri\cyry
  \def\headtona
    {\cyr\CYRZ\cyr
  \def\pagena
    {\cyr\CYRS\cyrt\cyrr
  \def\seena
    {\cyr\cyrv\cyrzh
  \def\alsona
    {\cyr\cyrv\cyrzh.\ \cyrs\cyrhrdsn\cyrshch\cyro\ \cyr
  \def\proofname{Proof}% <-- Needs transla
  \def\glossaryname{Glossary}% <-- Needs transla

%    \end{macrocode}
% \end{ma
%%
% \begin{macro}{\datebulgar

%    The macro |\datebulgarian| redefines the command |\today
%    produce Bulgarian da
%    It also provides the command |\todayRoman| which produces
%    date with the month in capital roman numerals, a popular fo
%    for dates in Bulgari
%
%    \begin{macroc
\def\datebulgari
  \def\month@bulgarian{\ifcase\month
    \cyrya\cyrn\cyru\cyra\cyrr\cyri
    \cyrf\cyre\cyrv\cyrr\cyru\cyra\cyrr\cyri
    \cyrm\cyra\cyrr\cyrt
    \cyra\cyrp\cyrr\cyri\cyrl
    \cyrm\cyra\cyrishrt
    \cyryu\cyrn\cyri
    \cyryu\cyrl\cyri
    \cyra\cyrv\cyrg\cyru\cyrs\cyrt
    \cyrs\cyre\cyrp\cyrt\cyre\cyrm\cyrv\cyrr\cyri
    \cyro\cyrk\cyrt\cyro\cyrm\cyrv\cyrr\cyri
    \cyrn\cyro\cyre\cyrm\cyrv\cyrr\cyri
    \cyrd\cyre\cyrk\cyre\cyrm\cyrv\cyrr\cyri\
  \def\month@Roman{\expandafter\@Roman\mon
  \def\today{\number\day~\month@bulgarian\ \number\year~\cyr
  \def\todayRoman{\number\day.\,\month@Roman.\,\number\year~\cyr

%    \end{macroc
%
% \end{ma

%
%
% \begin{macro}{\todayRo

%    The month is often written with roman numbers in Bulgarian da
%    Here we define date in this for
%
%    \begin{macroc
\def\Romannumeral#1{\uppercase\expandafter{\romannumeral
\def\todayRoman{\number\day.\Romannumeral{\month}.\number\year~\cy
%    \end{macroc
%
% \end{ma

% \begin{macro}{\extrasbulgar

%    The macro |\extrasbulgarian| will perform all the e
%    definitions needed for the Bulgarian langu
%    The macro |\noextrasbulgarian| is used to cancel the action
%    |\extrasbulgaria
%
%    The first action we define is to switch on the selected Cyri
%    encoding whenever we enter `bulgari
%
%    \begin{macroc
\addto\extrasbulgarian{\cyrillict
%    \end{macroc
%
%    When the encoding definition file was processed by \LaTeX\
%    current font encoding is stored in |\latinencoding|, assu
%    that \LaTeX\ uses \texttt{T1} or \texttt{OT1
%    default. Therefore we switch back to |\latinencoding| when
%    the Bulgarian language is no longer `activ
%
%    \begin{macroc
\addto\noextrasbulgarian{\latint
%    \end{macroc
%
%    For Bulgarian the \texttt{"} character also is made act
%
%    \begin{macroc
\initiate@active@cha
%    \end{macroc
%
%    The code above is necessary because we need extra ac
%    characters. The character |"| is used as indicate
%    table~\ref{tab:bulgarian-quote}. We specify that the Bulga
%    group of shorthands should be us
%
%    \begin{macroc
\addto\extrasbulgarian{\languageshorthands{bulgari
%    \end{macroc
%
%    These characters are `turned on' once, later their definition
%    v
%
%    \begin{macroc
\addto\extrasbulgari
  \bbl@activate
\addto\noextrasbulgari
  \bbl@deactivate
%    \end{macroc
%
%    The \texttt{X2} and \texttt{T2*} encodings do not con
%    |spanish_shriek| and |spanish_query| symbols; as a conseque
%    the ligatures `|?`|' and `|!`|' do not work with them (t
%    characters are useless for Cyrillic texts anyway). But we de
%    the shorthands to emulate these ligatures (optional
%
%    We do not use |\latinencoding| here (but instead explicitly
%    \texttt{OT1}) because the user may choose \texttt{T2A} to be
%    primary encoding, but it does not contain these charact
%
%    \begin{macroc
%<*spanishl
\declare@shorthand{bulgarian}{?`}{\UseTextSymbol{OT1}\textquestiond
\declare@shorthand{bulgarian}{!`}{\UseTextSymbol{OT1}\textexclamd
%</spanishl
%    \end{macroc
%
%    To be able to define the function of `|"|', we first defi
%    couple of `support' mac
%
% \begin{macro}{

%    We save the original double quote character in |\dq| to keep
%    available, the math accent |\"|can now be typed as `|
% \changes{bulgarian-1.0c}{2003/04/10}{repaired t
%    \begin{macroc
\begingroup \catcode`
\def\reserved@a{\endg
  \def\@SS{\mathchar"7
  \def\dq
\reserv
%    \end{macroc
%
% \end{ma

%    Now we can define the doublequote macros: german and fr
%    quotes. We use definitions of these quotes made in babel.
%    The french quotes are contained in the \texttt{T2*} encodi
%
%    \begin{macroc
\declare@shorthand{bulgarian}{"`}{\g
\declare@shorthand{bulgarian}{"'}{\g
\declare@shorthand{bulgarian}{"<}{\f
\declare@shorthand{bulgarian}{">}{\f
%    \end{macroc
%
%    Some additional comma
%
%    \begin{macroc
\declare@shorthand{bulgarian}{""}{\hskip\z@s
\declare@shorthand{bulgarian}{"~}{\textormath{\leavevmode\hbox{-}}
\declare@shorthand{bulgarian}{"=}{\nobreak-\hskip\z@s
\declare@shorthand{bulgarian}{"
\textormath{\nobreak\discretionary{-}{}{\kern.03
\allowhyphens
%    \end{macroc
%
%    The next two macros for |"-| and |"---| are somewhat differ
%    We must check whether the second token is a hyphen charac
%
%    \begin{macroc
\declare@shorthand{bulgarian}{"
%    \end{macroc
%
%    If the next token is `|-|', we typeset an emdash, otherwi
%    hyphen s
%
%    \begin{macroc
  \def\bulgarian@sh@t
    \if\bulgarian@sh@next-\expandafter\bulgarian@sh@em
    \else\expandafter\bulgarian@sh@hyphe

%    \end{macroc
%
%    \TeX\ looks for the next token after the first `|-|': the mea
%    of this token is written to |\bulgarian@sh@next|
%    |\bulgarian@sh@tmp| is cal
%
%    \begin{macroc
  \futurelet\bulgarian@sh@next\bulgarian@sh@
%    \end{macroc
%
%    Here are the definitions of hyphen and emdash. First the hyp
%
%    \begin{macroc
\def\bulgarian@sh@hyphen{\nobreak\-\bbl@allowhyph
%    \end{macroc
%
%    For the emdash definition, there are the two parameters: we
%    `eat' two last hyphen signs of our emdash \do
%
%    \begin{macroc
\def\bulgarian@sh@emdash#1#2{\cdash-#
%    \end{macroc
%
% \begin{macro}{\cd

%    \dots\ these two parameters are useful for another ma
%    |\cda
%
% \changes{bulgarian-1.0e}{2006/03/31}{Two occurences of \cmd{t
%    were changed into tab followed by e
%    \begin{macroc
\ifx\cdash\undefined % should be defined ear
\def\cdash#1#2#3{\def\tempx@{
\def\tempa@{-}\def\tempb@{~}\def\tempc@
 \ifx\tempx@\tempa@\@Acdash\
  \ifx\tempx@\tempb@\@Bcdash\
   \ifx\tempx@\tempc@\@Ccdash\
    \errmessage{Wrong usage of cdash}\fi\fi
%    \end{macroc
%
%  second parameter (or third for |\cdash|) shows what kind of em
%  to create in next
%  \begin{cen
%  \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}
%   |"---| & ordinary (plain) Cyrillic emdash inside t
%   an unbreakable thinspace will be inserted before only in cas
%   a \textit{space} before the dash (it is necessary for dashes a
%   display maths formulae: there could be lists, enumerations et
%   started with ``---where $a$ is ...'' i.e., the dash starts a li
%   (Firstly there were planned rather soft rules for user:he may
%   a space before the dash or not. But it is difficult to place
%   thinspace automatically, i.e., by checking modes because a
%   display formulae \TeX{} uses horizontal mode. Maybe there i
%   misunderstanding? Maybe there is another way?) After a
%   a breakable thinspace is always placed
%  \end{tabu
%  \end{cen
%
%
%    \begin{macroc
% What is more grammatically: .2em or .2\fontdimen6\f
\def\@Acdash{\ifdim\lastskip>\z@\unskip\nobreak\hskip.2e
\cyrdash\hskip.2em\ignorespac
%    \end{macroc
%
%      \begin{cen
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}
%       |"--~| & emdash in compound names or surn
%       (like Mendeleev--Klapeiron); this dash has no space charac
%       around; after the dash some space is a
%       |\exhyphenalty
%      \end{tabu
%      \end{cen
%
%    \begin{macroc
\def\@Bcdash{\leavevmode\ifdim\lastskip>\z@\unski
 \nobreak\cyrdash\penalty\exhyphenpenalty\hskip\z@skip\ignorespac
%    \end{macroc
%
%    \begin{cen
%    \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}
%     |"--*| & for denoting direct speech (a space like |\ens
%     must follow the emdash)
%    \end{tabu
%    \end{cen
%
%    \begin{macroc
\def\@Ccdash{\leavev
 \nobreak\cyrdash\nobreak\hskip.35em\ignorespac

%    \end{macroc
%
% \end{ma

%
%
% \begin{macro}{\cyrd

%    Finally the macro for ``body'' of the Cyrillic emd
%    The |\cyrdash| macro will be defined in case this macro ha
%    been defined in a fontenc file. For T2*fonts, cyrdash wil
%    placed in the code of the English emdash thus it uses liga
%    |--
%
%    \begin{macroc
% Is there an IF necess
\ifx\cyrdash\undef
\def\cyrdash{\hbox to.8em{--\hss

%    \end{macroc
%
% \end{ma

%    Here a really new macro---to place thinspace between initi
%    This macro used instead of |\,| allows hyphenation in
%    following surn
%
%    \begin{macroc
\declare@shorthand{bulgarian}{",}{\nobreak\hskip.2em\ignorespa
%    \end{macroc
%
%    The Bulgarian hyphenation patterns can be used
%    |\lefthyphenmin| and |\righthyphenmin| set t
% \changes{bulgarian-1.0b}{2000/09/22}{Now use \cs{providehyphenmins
%    provide a default va
%    \begin{macroc
\providehyphenmins{\CurrentOption}{\tw@\

%    \end{macroc
%
%    Now the action |\extrasbulgarian| has to execute is to make
%    that the command |\frenchspacing| is in effect. If this is
%    the case the execution of |\noextrasbulgarian| will switch it
%    ag
%
%    \begin{macroc
\addto\extrasbulgarian{\bbl@frenchspac
\addto\noextrasbulgarian{\bbl@nonfrenchspac
%    \end{macroc
%
%    Make the double quotes produce the traditional qu
%    used in Bulgarian texts (these are the German quote
%
%    \begin{macroc
% \initiate@active@cha
%  \initiate@active@cha
% \addto\extrasbulgari
%   \bbl@activate
% \addto\extrasbulgari
%   \bbl@activate
% \addto\noextrasbulgari
%   \bbl@deactivate
% \addto\noextrasbulgari
%   \bbl@deactivate
% \def\mlron{\bbl@activate{`}\bbl@activate
% \def\mlroff{\bbl@deactivate{`}\bbl@deactivate
% \declare@shorthand{bulgarian}{``}{\g
% \declare@shorthand{bulgarian}{''}{\g
%    \end{macroc
%
% \end{ma

%    Next we add a new enumeration style for Bulgarian manuscripts
%    Cyrillic letters,and later on we define some math operator name
%    accordance with Bulgarian typesetting traditi
%
% \begin{macro}{\@Alph@

%    We begin by defining |\@Alph@bul| which works like |\@Alph|,
%    produces (uppercase) Cyrillic letters intead of Latin ones.
%    letters ISHRT, HRDSN and SFTSN are skipped, as usual for
%    enumerat
%
%    \begin{macroc
\def\enumBul{\let\@Alph\@Alph@bul \let\@alph\@alph@
\def\enumEng{\let\@Alph\@Alph@eng \let\@alph\@alph@
\def\enumLat{\let\@Alph\@Alph@eng \let\@alph\@alph@
\addto\extrasbulgarian{\enum
\addto\noextrasbulgarian{\enum
\def\@Alph@bul
  \ifcase#
  \CYRA\or \CYRB\or \CYRV\or \CYRG\or \CYRD\or \CYRE\or \CYRZ
  \CYRZ\or \CYRI\or \CYRK\or \CYRL\or \CYRM\or \CYRN\or \CYR
  \CYRP\or \CYRR\or \CYRS\or \CYRT\or \CYRU\or \CYRF\or \CYR
  \CYRC\or \CYRCH\or \CYRSH\or \CYRSHCH\or \CYRYU\or \CYRYA\
  \@ctrer

\def\@Alph@eng
  \ifcase#1
  A\or B\or C\or D\or E\or F\or G\or H\or I\or J\or K\or L\or M
  N\or O\or P\or Q\or R\or S\or T\or U\or V\or W\or X\or Y\or Z\
  \@ctrer

%    \end{macroc
%
% \end{ma

%
%
% \begin{macro}{\@alph@

%    The macro |\@alph@bul| is similar to |\@Alph@b
%    it produces lowercase Bulgarian lett
%
%    \begin{macroc
\def\@alph@bul
  \ifcase#1
  \cyra\or \cyrb\or \cyrv\or \cyrg\or \cyrd\or \cyre\or \cyrzh
  \cyrz\or \cyri\or \cyrk\or \cyrl\or \cyrm\or \cyrn\or \cyro
  \cyrp\or \cyrr\or \cyrs\or \cyrt\or \cyru\or \cyrf\or \cyrh
  \cyrc\or \cyrch\or \cyrsh\or \cyrshch\or \cyryu\or \cyrya\
  \@ctrer

\def\@alph@eng
  \ifcase#1
  a\or b\or c\or d\or e\or f\or g\or h\or i\or j\or k\or l\or m
  n\or o\or p\or q\or r\or s\or t\or u\or v\or w\or x\or y\or z\
  \@ctrer

%    \end{macroc
%
% \end{ma

%    Set up default Cyrillic math alphabets. To use Cyrillic let
%    in math mode user should load the |textmath| pac
%    \emph{before} loading fontenc package (or \babel). Note,tha
%    default Cyrillic letters are taken from upright font in math
%    (unlike Latin letter
%
%    \begin{macroc
%\RequirePackage{textm
\@ifundefined{sym\cyrillicencoding letters}
\SetSymbolFont{\cyrillicencoding letters}{bold}\cyrillicenco
  \rmdefault\bfdefault\updef
\DeclareSymbolFontAlphabet\cyrmathrm{\cyrillicencoding lett
%    \end{macroc
%
%    And we need a few commands to be able to switch to diffe
%    varia
%
%    \begin{macroc
\DeclareMathAlphabet\cyrmathbf\cyrillicenco
  \rmdefault\bfdefault\updef
\DeclareMathAlphabet\cyrmathsf\cyrillicenco
  \sfdefault\mddefault\updef
\DeclareMathAlphabet\cyrmathit\cyrillicenco
  \rmdefault\mddefault\itdef
\DeclareMathAlphabet\cyrmathtt\cyrillicenco
  \ttdefault\mddefault\updef
\SetMathAlphabet\cyrmathsf{bold}\cyrillicenco
  \sfdefault\bfdefault\updef
\SetMathAlphabet\cyrmathit{bold}\cyrillicenco
  \rmdefault\bfdefault\itdef

%    \end{macroc
%
%    Some math functions in Bulgarian math books have other na
%    e.g., \texttt{sinh} in Bulgarian is written as \texttt
%    etc. So we define a number of new math operat
%
%    |\si
%
%    \begin{macroc
\def\sh{\mathop{\operator@font sh}\nolim
%    \end{macroc
%
%    |\co
%
%    \begin{macroc
\def\ch{\mathop{\operator@font ch}\nolim
%    \end{macroc
%
%    |\t
%
%    \begin{macroc
\def\tg{\mathop{\operator@font tg}\nolim
%    \end{macroc
%
%    |\arct
%
%    \begin{macroc
\def\arctg{\mathop{\operator@font arctg}\nolim
%    \end{macroc
%
%    |\arcc
%
%    \begin{macroc
\def\arcctg{\mathop{\operator@font arcctg}\nolim
%    \end{macroc
%
%    The following macro conflicts with |\th| defined in Lat
%    encod
%    |\ta
% \changes{bulgarian-1.0d}{2004/05/21}{Change definition of \cs
%    only for this langu
%    \begin{macroc
\addto\extrasrussi
  \babel@save{\
  \let\ltx@t
  \def\th{\textormath{\ltx@
                     {\mathop{\operator@font th}\nolimit

%    \end{macroc
%
%    |\c
%
%    \begin{macroc
\def\ctg{\mathop{\operator@font ctg}\nolim
%    \end{macroc
%
%    |\co
%
%    \begin{macroc
\def\cth{\mathop{\operator@font cth}\nolim
%    \end{macroc
%
%    |\c
%
%    \begin{macroc
\def\cosec{\mathop{\operator@font cosec}\nolim
%    \end{macroc
%
%    This is for compatibility with older Bulgarian packa
%
%    \begin{macroc
\DeclareRobustCommand{\N
    \ifmmode{\nfss@text{\textnumero}}\else\textnumero
%    \end{macroc
%
%    The macro |\ldf@finish| takes care of looking for a configura
%    file, setting the main language to be switched o
%    |\begin{document}| and resetting the category code of \textt
%    to its original val
%
%    \begin{macroc
\ldf@finish{bulgar
%</c
%    \end{macroc
%
% \Fi

%% \CharacterT
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x
%%   Digits        \0\1\2\3\4\5\6\7
%%   Exclamation   \!     Double quote \"    Hash (number
%%   Dollar        \$     Percent      \%    Ampersand
%%   Acute accent  \'     Left paren   \(    Right paren
%%   Asterisk      \*     Plus         \+    Comma
%%   Minus         \-     Point        \.    Solidus
%%   Colon         \:     Semicolon    \;    Less than
%%   Equals        \=     Greater than \>    Question mar
%%   Commercial at \@     Left bracket \[    Backslash
%%   Right bracket \]     Circumflex   \^    Underscore
%%   Grave accent  \`     Left brace   \{    Vertical bar
%%   Right brace   \}     Tilde

\endi
