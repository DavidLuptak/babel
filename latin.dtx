% \iffalse meta-comme

% Copyright 1989-2008 Johannes L. Braams and any individual autho
% listed elsewhere in this file.  All rights reserve

% This file is part of the Babel syste
% ------------------------------------

% It may be distributed and/or modified under t
% conditions of the LaTeX Project Public License, either version 1
% of this license or (at your option) any later versio
% The latest version of this license is
%   http://www.latex-project.org/lppl.t
% and version 1.3 or later is part of all distributions of LaT
% version 2003/12/01 or late

% This work has the LPPL maintenance status "maintained

% The Current Maintainer of this work is Johannes Braam

% The list of all files belonging to the Babel system
% given in the file `manifest.bbl. See also `legal.bbl' for addition
% informatio

% The list of derived (unpacked) files belonging to the distributi
% and covered by LPPL is defined by the unpacking scripts (wi
% extension .ins) which are part of the distributio
% \
% \CheckSum{45
% \iffal
%    Tell the \LaTeX\ system who we are and write an entry on t
%    transcrip
%<*dt
\ProvidesFile{latin.dt
%</dt
%<code>\ProvidesFile{latin.ld
%\
%\ProvidesFile{latin.dtx
        [2008/07/06 v2.0l Latin support from the babel syste
%\iffal
%% File `latin.dt
%% Babel package for LaTeX version
%% Copyright (C) 1989 - 20
%%           by Johannes Braams, TeXni

%% Please report errors to: J.L. Braam
%%                          babel at braams.xs4all.
%%                          Claudio Beccar
%%                          claudio.beccari at gmail.

%    This file is part of the babel system, it provides the sour
%    code for the Latin language definition fil
%    The original version of this file was written
%    Claudio Beccari, (claudio.beccari@polito.it) and includes contributio
%    by Krzysztof Konrad \.Zelechowski, (\texttt{kkz@alfa.mimuw.edu.pl}
%<*filedrive
\documentclass{ltxdo
\newcommand*\TeXhax{\TeX ha
\newcommand*\babel{\textsf{babel
\newcommand*\langvar{$\langle \it lang \rangle
\newcommand*\note[1]
\newcommand*\Lopt[1]{\textsf{#1
\newcommand*\file[1]{\texttt{#1
\providecommand*\pkg[1]{\textsf{#1
\begin{documen
 \DocInput{latin.dt
\end{documen
%</filedrive
%\
% \GetFileInfo{latin.dt

% \changes{latin-0.99}{1999/12/06}{First version, from italian.dtx (CB
% \changes{latin-0.99}{1999/12/06}{Added shortcuts for breve, macro
%   and etymological hyphenation (CB
% \changes{latin-1.2}{2000/01/31}{Added suggestions from Krzyszto
%     Konrad \.Zelechowski (CB
% \changes{latin-2.0}{2000/02/10}{Completely new etymologic
%     hyphenation (CB
% \changes{latin-2.0a}{2000/10/15}{Revised by J
% \changes{latin-2.0b}{2000/12/13}{Simplified shortcuts f
%     etymological hyphenation; modified breve and macro shortcuts
%     language attribute medieval declare
% \changes{latin-2.0c}{2001/06/04}{Restored caret and equals si
%     category codes before exitin
% \changes{latin-2.0d}{2001/06/04}{Restored caret and equals si
%     category codes before exitin
% \changes{latin-2.0e}{2003/04/11}{Introduced the language attribut
%     `withprosodicmarks'; modified use of breve and macron shortcu
%      in order to avoid possible conflicts with other package
% \changes{latin-2.0i}{2008/02/17}{Corrected the \cs{@clubpenalt
%    proble
% \changes{latin-2.0j}{2008/03/17}{Added a missing comment char and
%    missing closing brac
% \changes{latin-2.0l}{2008/07/06}{Added two missing \cs{end} macro'

%  \section{The Latin languag

%    The file \file{\filename}\footnote{The file described in th
%    section has version number \fileversion\ and was last revised
%    \filedate. The original author is Claudio Beccari wi
%    contributions by Krzysztof Konrad \.Zelechowsk
%    (\texttt{kkz@alfa.mimuw.edu.pl})} defines all t
%    language-specific macros for the Latin language both in mode
%    and medieval spelling

%    For this language the |\clubpenalty|, |\widowpenalty| are set t
%    rather high values and |\finalhyphendemerits| is set to such
%    high value that hyphenation is prohibited between the last t
%    lines of a paragrap

%    For this language two ``styles'' of typesetting are implemented
%    ``regular''  or modern-spelling Latin, and medieval Lati
%    The medieval Latin specific commands can be activated by means o
%    the language attribute |medieval|; the medieval spelling differ
%    from the modern one by the systematic use of the lower case `u
%    also where in modern spelling the letter `v' is used; whe
%    typesetting with capital letters, on the opposite, the letter 'V
%    is used also in place of 'U
%    Medieval spelling also includes the ligatures |\ae| (\ae), |\o
%    (\oe), |\AE| (\AE), and |\OE| (\OE) that are not used in moder
%    spelling, nor were used in the classical time

%    Furthermore a third typesetting style |withprosodicmarks|
%    defined in order to use special shortcuts for inserting brev
%    and macrons when typesetting grammars, dictionaries, teachi
%    texts, and the like, where prosodic marks are important for t
%    complete information on the words or the verses. The shortcut
%    listed in table~\ref{t:lashrtct} and described
%    section~\ref{s:shrtcts}, may interfere with other package
%    therefore by default this third style is off and no interferen
%    is introduced. If this third style is used and interference
%    experienced, there are special commands for turning on and o
%    the specific short hand commands of this styl

%    For what concerns \textsf{babel} and typesetting with \LaTeX, t
%    differences between the two styles of spelling reveal themselv
%    in the strings used to name for example the ``Preface'' th
%    becomes ``Praefatio'' or ``Pr\ae fatio'' respectivel
%    Hyphenation rules are also different, but the hyphenation patte
%    file \file{lahyph.tex} takes care of both versions of th
%    language. Needless to say that such patterns must be loaded
%    the \LaTeX\ format by running |initex| (or whatever the na
%    if the initializer) on |latex.ltx

%    The name strings for chapters, figures, tables, etcetera, ar
%    suggested by prof. Raffaella Tabacco, a classicist of th
%    University of Turin, Italy, to whom we address our warmes
%    thanks. The names suggested by Krzysztof Konrad \.Zelechowsk
%    when different, are used as the names for the medieval variety
%    since he made a word and spelling choice more suited for thi
%    variet

%    For this language some shortcuts are defined according t
%    table~\ref{t:lashrtct}; all of them are supposed to work wi
%    both spelling styles, except where the opposite is explicit
%    state
%    \begin{table}[htb]\centeri
%    \begin{tabular}{cp{80mm
%    |^i|   & inserts the breve accent as \u{\i}; valid also for t
%             other lowercase vowels, but it does not operate on t
%             medieval ligatures \ae\ and \oe.
%    |=a|   & inserts the macron accent as \=a; valid also for t
%             other lowercase vowels, but it does not operate on t
%             medieval ligatures \ae\ and \oe.
%    |"|    & inserts a compound word mark where hyphenation is lega
%             the next character must not be a medieval ligature \a
%             or \oe, nor an accented letter (foreign names).
%    \texttt{\string"\string
%           & same as above, but operates also when the next charact
%             is a medieval ligature or an accented lette
%    \end{tabula
%    \caption[]{Shortcuts defined for the Latin language. Th
%               characters \texttt{\string^} and \texttt{\string=} a
%               active only when the language attribu
%               \texttt{withprosodicmarks} has been declare
%               otherwise they are disabled; se
%               section~\ref{s:shrtcts} for more details.
%    \label{t:lashrtc
%    \end{tabl
% \StopEventually

%    The macro |\LdfInit| takes care of preventing that this file
%    loaded more than once, checking the category code of t
%    \texttt{@} sign, et
%    \begin{macrocod
%<*cod
\LdfInit{latin}{captionslati
%    \end{macrocod

%    When this file is read as an option, i.e. by the |\usepackag
%    command, \texttt{latin} will be an `unknown' language in whi
%    case we have to make it known.  So we check for the existence
%    |\l@latin| to see whether we have to do something her

%    \begin{macrocod
\ifx\l@latin\@undefin
    \@nopatterns{Lati
    \adddialect\l@latin0\
%    \end{macrocod


%    Now we declare the |medieval| language attribut
%    \begin{macrocod
\bbl@declare@ttribute{latin}{medieval}
  \addto\captionslatin{\def\prefacename{Pr{\ae}fatio}
  \def\november{Nouembris
  \expandafter\addto\expandafter\extraslat
  \expandafter{\extrasmedievallatin

%    \end{macrocod

%    The third typesetting style |withprosodicmarks| is defined he
%    \begin{macrocod
\bbl@declare@ttribute{latin}{withprosodicmarks}
  \expandafter\addto\expandafter\extraslat
  \expandafter{\extraswithprosodicmarks

%    \end{macrocod
%    It must be remembered that the |medieval| and the |withprosodicmark
%    styles may be used togethe

%    The next step consists of defining commands to switch to (a
%    from) the Latin language\footnote{Most of these names we
%    kindly suggested by Raffaella Tabacco.

% \begin{macro}{\captionslati
%    The macro |\captionslatin| defines all strings us
%    in the four standard document classes provided with \LaTe
%    \begin{macrocod
\@namedef{captionslatin}
  \def\prefacename{Praefatio
  \def\refname{Conspectus librorum
  \def\abstractname{Summarium
  \def\bibname{Conspectus librorum
  \def\chaptername{Caput
  \def\appendixname{Additamentum
  \def\contentsname{Index
  \def\listfigurename{Conspectus descriptionum
  \def\listtablename{Conspectus tabularum
  \def\indexname{Index rerum notabilium
  \def\figurename{Descriptio
  \def\tablename{Tabula
  \def\partname{Pars
  \def\enclname{Adduntur}%   Or " Additur" ? Or simply Add
  \def\ccname{Exemplar}%     Use the recipient's dati
  \def\headtoname{\ignorespaces}% Use the recipient's dati
  \def\pagename{Charta
  \def\seename{cfr.
  \def\alsoname{cfr.}% R.Tabacco never saw "cfr. atque" or similar for
  \def\proofname{Demonstratio
  \def\glossaryname{Glossarium

%    \end{macrocod
% \end{macr
%    In the above definitions there are some points that might chang
%    in the future or that require a minimum of attention from t
%    typesette
%    \begin{enumerat
%    \item the \cs{enclname} is translated by a passive verb, tha
%      literally means ``(they) are being added''; if just on
%      enclosure is joined to the document, the plural passive is no
%      suited any more; nevertheless a generic plural passive might b
%      incorrect but suited for most circumstances. On the opposit
%      ``Additur'', the corresponding singular passive, might be mor
%      correct with one enclosure and less suited in general: wha
%      about the abbreviation ``Add.'' that works in both cases, b
%      certainly is less elegan
%    \item The \cs{headtoname} is empty and gobbles the possibl
%      following space; in practice the typesetter should use th
%      dative of the recipient's name; since nowadays not all suc
%      names can be translated into Latin, they might resul
%      indeclinable. The clever use of an appellative by th
%      typesetter such as ``Domino'' or ``Dominae'' might solve th
%      problem, but the header might get too impressive. The typesette
%      must make a decision on his ow
%    \item The same holds true for the copy recipient's name in th
%      ``Cc'' field of \cs{ccname
%    \end{enumerat

%  \begin{macro}{\datelati
%    The macro |\datelatin| redefines the command |\today| to produ
%    Latin dates; the choice of faked small caps  Latin numerals
%    arbitrary and may be changed in the future. For medieval lat
%    the spelling of `Novembris' should be \textit{Nouembris}. This
%    taken care of by using a control sequence which can be redefin
%    when the attribute `medieval' is selecte
% \changes{latin-2.0f}{2005/03/30}{Added a comment character
%    prevent unwanted space
%    \begin{macrocod
\def\datelatin
  \def\november{Novembris
  \def\today
    {\check@mathfonts\fontsize\sf@size\z@\math@fontsfalse\selectfo
      \uppercase\expandafter{\romannumeral\day}}~\ifcase\month\
    Ianuarii\or Februarii\or Martii\or Aprilis\or Maii\or Iunii\
    Iulii\or Augusti\or Septembris\or Octobris\or \november\
    Decembris\
    \space{\uppercase\expandafter{\romannumeral\year}}
%    \end{macrocod
%  \end{macr

% \begin{macro}{\romandat
%    Thomas Martin Widmann (\texttt{viralbus@daimi.au.dk}) developed
%    macro originally named |\latindate| (but to be rename
%    |\romandate| so as not to conflict with the standard \babel
%    conventions) that should compute and translate the current dat
%    into a date \textit{ab urbe condita} with days numbered accordin
%    to the kalendae and idus; for the moment this is a placeholde
%    for Thomas' macro, waiting for a self standing one that keep
%    local all the intermediate data, counters, etc. If he succeed
%    here is the place to add his macr
% \end{macr

%  \begin{macro}{\latinhyphenmin
%    The Latin hyphenation patterns can be used with bo
%    |\lefthyphenmin| and |\righthyphenmin| set to~
% \changes{latin-2.0a}{2000/10/15}{Now use \cs{providehyphenmins}
%    provide a default valu
%    \begin{macrocod
\providehyphenmins{\CurrentOption}{\tw@\tw
%    \end{macrocod
%  \end{macr

% \begin{macro}{\extraslati
% \begin{macro}{\noextraslati
%    Lower the chance that clubs or widows occu
%    \begin{macrocod
\addto\extraslatin
  \babel@savevariable\clubpenal
  \babel@savevariable\@clubpenal
  \babel@savevariable\widowpenal
  \clubpenalty3000\@clubpenalty3000\widowpenalty300
%    \end{macrocod
%    Never ever break a word between the last two lines of a paragra
%    in latin text
%    \begin{macrocod
\addto\extraslatin
  \babel@savevariable\finalhyphendemeri
  \finalhyphendemerits5000000
%    \end{macrocod
%  \end{macr
%  \end{macr

%    With medieval Latin we need the suitable correspondence betwe
%    upper case V and lower case u, since in that spelling there
%    only one sign, and the u shape is the (uncial) version of t
%    capital V. Everything else is identical with Lati
%    \begin{macrocod
\addto\extrasmedievallatin
  \babel@savevariable{\lccode`\V
  \babel@savevariable{\uccode`\u
  \lccode`\V=`\u \uccode`\u=`\
%    \end{macrocod

% \begin{macro}{\SetLatinLigature
%    We need also the lccodes for \ae\ and \oe; since they occu
%    different positions in the OT1 \TeX-fontencoding compared to t
%    T1 one, we must save the lc- and the uccodes for both encoding
%    but we specify the new lc- and uccodes separately as it appea
%    natural not to change encoding while typesetting the sa
%    language. The encoding is assumed to be set before starting
%    use the Latin language, so that if Latin is the default languag
%    the font encoding must be chosen before requiring the \pkg{babe
%    package with the |latin| option, in any case before a
%    |\selectlanguage| or |\foreignlanguage| comman

%    All this fuss is made in order to allow the use of the mediev
%    ligatures \ae\ and \oe\ while typesetting with the mediev
%    spelling; I have my doubts that the medieval spelling should
%    used at all in modern books, reports, and the like; the unci
%    `u' shape of the lower case `v' and the above ligatures we
%    fancy styles of the copyists who were able to write faster wi
%    those rounded glyphs; with typesetting there is no question
%    handling a quill penn\dots Since my (CB) opinion may be wrong,
%    managed to set up the instruments and it is up to the typesett
%    to use them or no

%    \begin{macrocod
\addto\extrasmedievallatin
  \babel@savevariable{\lccode`\^^e6}% T1   \
  \babel@savevariable{\uccode`\^^e6}% T1   \
  \babel@savevariable{\lccode`\^^c6}% T1   \
  \babel@savevariable{\lccode`\^^f7}% T1   \
  \babel@savevariable{\uccode`\^^f7}% T1   \
  \babel@savevariable{\lccode`\^^d7}% T1   \
  \babel@savevariable{\lccode`\^^1a}% OT1  \
  \babel@savevariable{\uccode`\^^1a}% OT1  \
  \babel@savevariable{\lccode`\^^1d}% OT1  \
  \babel@savevariable{\lccode`\^^1b}% OT1  \
  \babel@savevariable{\uccode`\^^1b}% OT1  \
  \babel@savevariable{\lccode`\^^1e}% OT1  \
  \SetLatinLigature
\providecommand\SetLatinLigatures
  \def\@tempA{T1}\ifx\@tempA\f@encodi
    \catcode`\^^e6=11 \lccode`\^^e6=`\^^e6 \uccode`\^^e6=`\^^c6 % \
    \catcode`\^^c6=11 \lccode`\^^c6=`\^^e6 % \
    \catcode`\^^f7=11 \lccode`\^^f7=`\^^f7 \uccode`\^^f7=`\^^d7 % \
    \catcode`\^^d7=11 \lccode`\^^d7=`\^^f7 % \
  \el
    \catcode`\^^1a=11 \lccode`\^^1a=`\^^1a \uccode`\^^1a=`\^^1d % \
    \catcode`\^^1d=11 \lccode`\^^1d=`\^^1a % \AE (^^
    \catcode`\^^1b=11 \lccode`\^^1b=`\^^1b \uccode`\^^1b=`\^^1e % \
    \catcode`\^^1e=11 \lccode`\^^1e=`\^^1b % \OE (^^
  \
  \let\@tempA\@undefin

%    \end{macrocod
%    With the above definitions we are sure that |\MakeUppercase
%    works properly and |\MakeUppercase{C{\ae}sar}| correctly `yiel
%    `C{\AE}SAR''; correspondingly |\MakeUppercase{Heluetia
%    correctly yields ``HELVETIA''
%    \end{macr

%    \section{Latin shortcuts}\label{s:shrtct
%    For writing dictionaries or didactic texts (in modern spelli
%    only) we defined a third language attribute, or a thi
%    typesetting style, a couple of other active characters a
%    defined: |^| for marking a vowel with the breve sign, and |=| f
%    marking a vowel with the macro sign. Please take notice th
%    neither the OT1 font encoding, nor the T1 one for most vowel
%    contain directly the marked vowels, therefore hyphenation
%    words containing these ``accents'' may become problematic; f
%    this reason the above active characters not only introduce t
%    required accent, but also an unbreakable zero skip that
%    practice does not introduce a discretionary break, but allo
%    breaks in the rest of the word

%    It must be remarked that the active characters |^| and |=| m
%    have other meanings in other contexts. For example the equa
%    sign is used by the graphic extensions for specifying keywo
%    options for handling the graphic elements to be included in t
%    document. At the same time, as mentioned in the previo
%    paragraph, diacritical marking in Latin is used only f
%    typesetting certain kind of documents, such as grammars a
%    dictionaries. It is reasonable that the breve and macron acti
%    characters are switched on and off at will, and in particul
%    that they are off by default if the attribute |withprosodicmark
%    has not been set

%    \begin{macro}{\ProsodicMarksO
%    \begin{macro}{\ProsodicMarksOf
%    We begin by adding to the normal typesetting style t
%    definitions of the new commands |\ProsodicMarksOn| a
%    |\ProsodicMarksOff| that should produce error messages when t
%    third style is not declared
%    \begin{macrocod
\addto\extraslatin{\def\ProsodicMarksOn
    \GenericError{(latin)\@spaces\@spaces\@spaces\@spaces
            {Latin language error: \string\ProsodicMarksOn\spa
            is defined by setting the\MessageBre
            language attribute to `withprosodicmarks'\MessageBre
            If you continue you are likely to encounter\MessageBre
            fatal errors that I can't recover
            {See the Latin language description in the bab
            documentation for explanation}{\@ehd}
\addto\extraslatin{\let\ProsodicMarksOff\rela
%    \end{macrocod

%    Then we temporarily set the caret and the equals sign to acti
%    characters so that they can receive their definitions. But fir
%    we store their current category codes to restore them later o
% \changes{latin-2.0k}{2008/03/21}{Save current category codes
%    equals sign and caret in order to restore them later
%    \begin{macrocod
\@tempcnta=\catcode`
\@tempcntb=\catcode`
\catcode`\= \acti
\catcode`\^ \acti
%    \end{macrocod
%    Now we can add the necessary declarations to the macros that a
%    being activated when the Latin language and its typesetti
%    styles are declare
%    \begin{macrocod
\addto\extraslatin{\languageshorthands{latin}
\addto\extraswithprosodicmarks{\bbl@activate{^}
\addto\extraswithprosodicmarks{\bbl@activate{=}
\addto\noextraswithprosodicmarks{\bbl@deactivate{^}
\addto\noextraswithprosodicmarks{\bbl@deactivate{=}
\addto\extraswithprosodicmarks{\ProsodicMark
%    \end{macrocod
%  \end{macr
%  \end{macr

%    \begin{macro}{\ProsodicMark
%    Next we define the defining macro for the active characte
% \changes{latin-2.0k}{2008/03/21}{Use \cs{active} instead of 1
%    \begin{macrocod
\def\ProsodicMarks
  \def\ProsodicMarksOn{\catcode`\^ \active\catcode`\= \active
  \def\ProsodicMarksOff{\catcode`\^ 7\catcode`\= 12\relax
%    \end{macrocod
%    Notice that with the above redefinitions of the comman
%    |\ProsodicMarksOn| and |\ProsodicMarksOff|, the operation of t
%    newly defined shortcuts may be switched on and off at will,
%    that even if a picture has to be inserted in the document
%    means of the commands and keyword options of the |graphic
%    package, it suffices to switch them off before invoking t
%    picture including command, and switched on again afterwards; o
%    even better, since the picture very likely is being insert
%    within a |figure| environment, it suffices to switch them o
%    within the environment, being conscious that their deactivati
%    remains local to the environmen
% \changes{latin-2.0g}{2005/11/17}{changed \cs{allowhyphens}
%    \cs{bbl@allowhyphens}
%    \begin{macrocod
  \initiate@active@char{^
  \initiate@active@char{=
  \declare@shorthand{latin}{^a}
    \textormath{\u{a}\bbl@allowhyphens}{\hat{a}}
  \declare@shorthand{latin}{^e}
    \textormath{\u{e}\bbl@allowhyphens}{\hat{e}}
  \declare@shorthand{latin}{^i}
    \textormath{\u{\i}\bbl@allowhyphens}{\hat{\imath}}
  \declare@shorthand{latin}{^o}
    \textormath{\u{o}\bbl@allowhyphens}{\hat{o}}
  \declare@shorthand{latin}{^u}
    \textormath{\u{u}\bbl@allowhyphens}{\hat{u}}

  \declare@shorthand{latin}{=a}
    \textormath{\={a}\bbl@allowhyphens}{\bar{a}}
  \declare@shorthand{latin}{=e}
    \textormath{\={e}\bbl@allowhyphens}{\bar{e}}
  \declare@shorthand{latin}{=i}
    \textormath{\={\i}\bbl@allowhyphens}{\bar{\imath}}
  \declare@shorthand{latin}{=o}
    \textormath{\={o}\bbl@allowhyphens}{\bar{o}}
  \declare@shorthand{latin}{=u}
    \textormath{\={u}\bbl@allowhyphens}{\bar{u}}

%    \end{macrocod
%    Notice that the short hand definitions are given only for low
%    case letters; it would not be difficult to extend the set
%    definitions to upper case letters, but it appears of very litt
%    use in view of the kind of documents where prosodic marks a
%    supposed to be used. Nevertheless in those rare cases when it
%    required to set some uppercase letters with their prosod
%    marks, it is always possible to use the standard \LaTeX\ comman
%    such as  |\u{I}| for typesetting \u{I}, or |\={A}| f
%    typesetting~\=

%    Finally we restore the caret and equals sign initial defau
%    category code
% \changes{latin-2.0k}{2008/03/21}{Restore category codes rather th
%    return them to their \TeX\ default values. \emph{And} do th
%    outside of the command definitio
%    \begin{macrocod
\catcode`\= \@tempcn
\catcode`\^ \@tempcn
%    \end{macrocod
%    so as to avoid conflicts with other packages or other \babe
%    option
%    \end{macr

%    \begin{macro}{\LatinMarksO
%    \begin{macro}{\LatinMarksOf
% \changes{latin-2.0g}{2005/11/17}{Added two command
% \changes{latin-2.0h}{2007/10/19}{Added missing backslas
%    We define two new commands so as to switch on and off the brev
%    and macron shortcut
% \changes{latin-2.0h}{2007/10/20}{Removed the setting
%    \cs{LatinMarksOff} from \cs{extraslatin
% \changes{latin-2.0k}{2008/03/21}{Set the \cs{LatinMarks...} comman
%    equal to the \cs{ProsodicMarks..} commands for compatibility
%    \begin{macrocod
\addto\extraswithprosodicmarks{\let\LatinMarksOn\ProsodicMarksO
\addto\extraswithprosodicmarks{\let\LatinMarksOff\ProsodicMarksOf
%    \end{macrocod
%    \end{macr
%    \end{macr

%    It must be understood that by using the above prosodic mark
%    line breaking is somewhat impeached; since such prosodic mar
%    are used almost exclusively in dictionaries, grammars, and poe
%    (only in school textbooks), this shouldn't be of any importan
%    for what concerns the quality of typesettin

%    \section{Etymological hyphenatio
%    In order to deal in a clean way with prefixes and compound wor
%    to be divided etymologically, the active character |"| is give
%    a special definition so as to behave as a discretionary bre
%    with hyphenation allowed after it
%    Most of the code for dealing with the active |"| is alrea
%    contained in the core of \babel, but we are going to use it as
%    single character shorthand for Latin
%    \begin{macrocod
\initiate@active@char{"
\addto\extraslatin{\bbl@activate{"

%    \end{macrocod

%    A temporary macro is defined so as to take different actions in ma
%    mode and text mode: specifically in the former case the macro inserts
%    double quote as it should in math mode, otherwise another delayed mac
%    comes into actio
%    \begin{macrocod
\declare@shorthand{latin}{"}
  \ifmmo
    \def\lt@@next{''
  \el
    \def\lt@@next{\futurelet\lt@temp\lt@cwm
  \
  \lt@@ne

%    \end{macrocod
%    In text mode the \cs{lt@next} control sequence is such that up
%    its execution a temporary variable \cs{lt@temp} is ma
%    equivalent to the next token in the input list without actual
%    removing it. Such temporary token is then tested by the mac
%    \cs{lt@cwm} and if it is found to be a letter token, then
%    introduces a compound word separator control sequen
%    \cs{lt@allowhyphens} whose expansion introduces a discretiona
%    hyphen and an unbreakable space; in case the token is not
%    letter, the token is tested again to find if it is the charact
%    \texttt{\string|}, in which case it is gobbled and
%    discretionary break is introduced
% \changes{latin-2.0g}{2005/11/17}{Added a \cs{nobreak
%    \begin{macrocod
\def\lt@allowhyphens{\nobreak\discretionary{-}{}{}\nobreak\hskip\z@ski
\newcommand*{\lt@cwm}{\let\lt@n@xt\rel
  \ifcat\noexpand\lt@temp
    \let\lt@n@xt\lt@allowhyphe
  \el
    \if\noexpand\lt@temp\string
        \def\lt@n@xt{\lt@allowhyphens\@gobble
    \
  \
  \lt@n@xt
%    \end{macrocod

%    Attention: the category code comparison does not work if t
%    temporary control sequence \cs{lt@temp} has been let equal to
%    implicit character, such as |\ae|; therefore this etymologic
%    hyphenation facility does not work with medieval Latin spelli
%    when |"| immediately precedes a ligature. In order to overco
%    this drawback the shorthand \verb!"|! may be used in such case
%    it behaves exactly as |"|, but it does not test the implic
%    character control sequence. An input such
%    \verb!super"|{\ae}quitas!\footnote{This word does not exist
%    ``regular'' Latin, and it is used just as an example.} ge
%    hyphenated as \texttt{su-per-{\ae}qui-tas} instead
%    \texttt{su-pe-r\ae-qui-tas}

%    The macro |\ldf@finish| takes care of looking for
%    configuration file, setting the main language to be switched
%    at |\begin{document}| and resetting the category code
%    \texttt{@} to its original valu
%    \begin{macrocod
\ldf@finish{lati
%</cod
%    \end{macrocod

% \Fina

%% \CharacterTab
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y
%%   Digits        \0\1\2\3\4\5\6\7\8
%%   Exclamation   \!     Double quote  \"     Hash (number)
%%   Dollar        \$     Percent       \%     Ampersand
%%   Acute accent  \'     Left paren    \(     Right paren
%%   Asterisk      \*     Plus          \+     Comma
%%   Minus         \-     Point         \.     Solidus
%%   Colon         \:     Semicolon     \;     Less than
%%   Equals        \=     Greater than  \>     Question mark
%%   Commercial at \@     Left bracket  \[     Backslash
%%   Right bracket \]     Circumflex    \^     Underscore
%%   Grave accent  \`     Left brace    \{     Vertical bar
%%   Right brace   \}     Tilde         \

\endinp
