% -*- coding: raw-text -*- 
% Emacs: raw-text for multiple encodings
% Use revert-buffer-with-coding-system to see the file with the
% selected encoding: utf-8, cp1251 (which in many slots is similar
% to T2*), cp1252 (same for T1).

% PLEASE, note the definitions below are NOT intended to show a real
% case. They just test if the correct string is loaded and used. In
% most cases, the only branches will be *generic (for 8-bit engines
% with LICR, including OT1, T1, T2*, and the like) and *utf8 (for
% xetex/luatex).

\LdfInit{multienc}{datemultienc}

\ifx\l@nohyphenation\@undefined
   \@nopatterns{multienc}
   \adddialect\l@multienc0
\else
   \let\l@multienc\l@nohyphenation
\fi

\providehyphenmins{multienc}{\z@\z@}

\let\captionsmultienc\@empty
\let\datemultienc\@empty

% ==============
%
% CODE
% For the moment, 'string=' is required in these tests

\def\StartBabelCommands{%
  % Do only if #1 is the current option, or not?
  % Error if #3#1 is empty or undefined
  % Reset #3#1
  \begingroup
  \let\StartBabelCommands\bbl@startcmds
  \StartBabelCommands}

% =auto con \LastDeclaredEncoding ???

\def\bbl@startcmds#1#2#3{%
   % TODO: If there is no string=, do nothing, and perserve #3#1
   % if there is string=, reset #3#1
   % if there is neither string= nor #3#1, do *generic (= LICR)
  \@tempcnta="7F
    % For the moment:
  \def\bbl@tempa{%
    \ifnum\@tempcnta>"FF\else
      \catcode\@tempcnta=11
      \advance\@tempcnta\@ne
      \expandafter\bbl@tempa
    \fi}%
  % Select the behaviour: encoded, ENC, or nothing
  \ifx\bbl@opt@strings\relax % set by DeclOpt string=encoded
    \let\SetBabelString\bbl@setstring
    \def\bbl@strdef##1##2{%
      \@for\bbl@tempa:=#2\do{%
        \@ifundefined{T@\bbl@tempa}%
          {\def\bbl@tempb{*generic}%
           \ifx\bbl@tempa\bbl@tempb
             \@dec@text@cmd\gdef##1?{##2}%
             \global\let##1##1
           \fi}%
          {\@dec@text@cmd\gdef##1\bbl@tempa{##2}%
           \global\let##1##1}}}%
  \else
  %   zapspaces !!!
    \@expandtwoargs\in@
      {,\@ifundefined{T@\bbl@opt@strings}*\@empty\bbl@opt@strings,}%
      {,#2,}%
    \ifin@
      \let\SetBabelString\bbl@setstring
      \let\bbl@strdef\gdef
    \else
      \let\SetBabelString\@gobbletwo
    \fi
  \fi
  \in@{,*utf8,}{,#2,}%
  \ifin@
    \csname bbl@input@utf8\endcsname
  \else
    \bbl@input@bytes
  \fi
  \edef\bbl@the@lang{#1}%
  \edef\bbl@the@group{\expandafter\noexpand\csname#3#1\endcsname}}

\def\EndBabelCommands{\csname bbl@input@utf8\endcsname\endgroup}

% set strdef = \gdef or \DeclareTextCommand{com}{enc} or gobbletwo

\def\bbl@setstring#1#2{%
  \edef\bbl@tempa{\expandafter\@gobble\string#1}%
  \@ifundefined{\bbl@the@lang\bbl@tempa}%
    {\toks@\expandafter\expandafter\expandafter{\bbl@the@group}%
     \expandafter\xdef\bbl@the@group{%
       \the\toks@
       \def\noexpand#1{%
         \expandafter\noexpand\csname\bbl@the@lang\bbl@tempa\endcsname}}}%
    {}%
  \expandafter\bbl@strdef\csname\bbl@the@lang\bbl@tempa\endcsname{#2}}

%% And with lua??:

\ifx\XeTeXinputencoding\@undefined
  \let\bbl@input@bytes\relax
  \expandafter\let\csname bbl@input@utf8\endcsname\relax
\else
  \def\bbl@input@bytes{\XeTeXinputencoding"bytes"} % <<<<<<<<<<<
  \@namedef{bbl@input@utf8}{\XeTeXinputencoding"utf8"}
\fi


% ===========================
% EXAMPLE
%

\StartBabelCommands{multienc}{*generic,OT1}{captions}

\SetBabelString{\chaptername}{ChapOT1 \"y/Ã¿}

\StartBabelCommands{multienc}{*utf8,EU1}{captions}

\SetBabelString{\chaptername}{ChapEU1 \"y/Ã¿} 
\SetBabelString{\pagename}{à¤ªà¥ƒà¤·à¤ }

\StartBabelCommands{multienc}{T2A}{captions}

\SetBabelString{\chaptername}{ãëàâà \"y}

\StartBabelCommands{multienc}{T1}{captions}

\SetBabelString{\chaptername}{CapítuloT1 \"y/Ã¿}

\EndBabelCommands

% Also months - \monthiname, \monthiiname, etc. - see babel/4058

\ldf@finish{multienc}
%%
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
\endinput
%%
%% End of file `nil.ldf'.
