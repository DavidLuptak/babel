% \iffalse meta-comme

% Copyright 1989-2008 Johannes L. Braams and any individual autho
% listed elsewhere in this file.  All rights reserve

% This file is part of the Babel syste
% ------------------------------------

% It may be distributed and/or modified under t
% conditions of the LaTeX Project Public License, either version 1
% of this license or (at your option) any later versio
% The latest version of this license is
%   http://www.latex-project.org/lppl.t
% and version 1.3 or later is part of all distributions of LaT
% version 2003/12/01 or late

% This work has the LPPL maintenance status "maintained

% The Current Maintainer of this work is Johannes Braam

% The list of all files belonging to the Babel system
% given in the file `manifest.bbl. See also `legal.bbl' for addition
% informatio

% The list of derived (unpacked) files belonging to the distributi
% and covered by LPPL is defined by the unpacking scripts (wi
% extension .ins) which are part of the distributio
% \
% \CheckSum{42
% \iffal
%    Tell the \LaTeX\ system who we are and write an entry on t
%    transcrip
%<*dt
\ProvidesFile{italian.dt
%</dt
%<code>\ProvidesLanguage{italia
%\
%\ProvidesFile{italian.dt
        [2008/03/14 v1.2t Italian support from the babel syste
%\iffal
%% File `italian.dt
%% Babel package for LaTeX version
%% Copyright (C) 1989 - 20
%%           by Johannes Braams, TeXni

%% Please report errors to: J.L. Braa
%%                          babel at braams.xs4all.
%%                          Claudio Beccar
%%                          claudio.beccari at gmail.

%    This file is part of the babel system, it provides the sour
%    code for the Italian language definition fil
%    The original version of this file was written by Mauriz
%    Codogno, (mau@beatles.cselt.stet.it). Several features were add
%    by Claudio Beccari, (beccari@polito.it
%<*filedrive
\documentclass{ltxdo
\newcommand*\TeXhax{\TeX ha
\newcommand*\babel{\textsf{babel
\newcommand*\langvar{$\langle \it lang \rangle
\newcommand*\note[1]
\newcommand*\Lopt[1]{\textsf{#1
\newcommand*\file[1]{\texttt{#1
\begin{documen
 \DocInput{italian.dt
\end{documen
%</filedrive
%\
% \GetFileInfo{italian.dt

% \changes{italian-0.99}{1990/07/11}{First version, from english.do
% \changes{italian-1.0}{1991/04/23}{Modified for babel 3.
% \changes{italian-1.0a}{1991/05/23}{removed typ
% \changes{italian-1.0b}{1991/05/29}{Removed bug found by van der Mee
% \changes{italian-1.0e}{1991/07/15}{Renamed \file{babel.sty}
%    \file{babel.com
% \changes{italian-1.1}{1992/02/16}{Brought up-to-date with babel 3.2
% \changes{italian-1.2}{1994/02/09}{Update for\ LaTeX
% \changes{italian-1.2e}{1994/06/26}{Removed the use of \cs{filedat
%    and moved identification after the loading of \file{babel.def
% \changes{italian-1.2f}{1995/05/28}{Updated for babel 3.
% \changes{italian-1.2i}{1996/10/10}{Replaced \cs{undefined} wi
%    \cs{@undefined} and \cs{empty} with \cs{@empty} for consisten
%    with \LaTeX, moved the definition of \cs{atcatcode} right to t
%    beginning
% \changes{italian-1.2l}{1999/04/24}{Added \cs{unit}, \cs{ap}, a
%    \cs{ped} macro
% \changes{italian-1.2m}{2000/01/05}{Added support for etymologic
%    hyphenatio
% \changes{italian-1.2n}{2000/02/02}{Completely modified etymologic
%    hyphenation facilit
% \changes{italian-1.2n}{2000/05/28}{Added several commands for t
%   caporali double quotes and for simplifying the accented vowel inpu
% \changes{italian-1.2o}{2000/12/12}{Added \cs{glossaryname
% \changes{italian-1.2p}{2002/07/10}{Removed redefinition
%    \cs{add@acc} since its functionality has been introduced into t
%    kernel of LaTeX 2001/06/0
% \changes{italian-1.2q}{2005/02/05}{Added test for avoiding confli
%    with package units.sty; adjusted caporali functionality, sin
%    the previous one did not work with the standard (although obsolet
%    slides class fil
% \changes{italian-1.2s}{2007/01/12}{Corrected email of C
%  \section{The Italian languag

%    The file \file{\filename}\footnote{The file described in th
%    section has version number \fileversion\ and was last revised
%    \filedate. The original author is Maurizio Codogn
%    (\texttt{mau@beatles.cselt.stet.it}). It has been largely revis
%    by Johannes Braams and Claudio Beccari} defines all t
%    language-specific macros for the Italian languag

%    The features of this language definition file are the followin
%    \begin{enumerat
%    \item The Italian hyphenation is invoked, provided that fi
%      \texttt{ithyph.tex} was loaded when the \LaTeXe\ format w
%      built; in case it was not, read the information coming with yo
%      distribution of the \TeX\ software, and the \babe
%      documentatio
%    \item The language dependent fixed words to be inserted by su
%      commands as |\chapter|, |\caption|, |\tableofcontents
%      etc. are redefined in accordance with the Itali
%      typographical practic
%    \item Since Italian can be easily hyphenated and Italian practi
%      allows to break a word before the last two letters, hyphenati
%      parameters have been set accordingly, but a very high demer
%      value has been set in order to avoid word breaks in t
%      penultimate line of a paragraph. Specifically the |\clubpenalty
%      and the |\widowpenalty| are set to rather high values a
%      |\finalhyphendemerits| is set to such a high value th
%      hyphenation is prohibited between the last two lines of
%      paragraph. In orer to make it consistent, also |\@clubpenalt
%      is set to the same value; actualy the latter value is t
%      reset value after every sectioning command, so that after t
%      first section, |\clubpenalty| is reset to the low default valu
%      Thanks to Enrico Gregorio for spotting this serious bu
%    \item Some language specific shortcuts have been defined so as
%      allow etymological hyphenation, specifically |"| inserts
%      break point in any word boundary that the typesetter choose
%      provided it is not followed by and accented letter (very unlike
%      in Italian, where compulsory accents fall only on the last a
%      ending vowel of a word, but may take place with compound wor
%      that include foreign roots), and \verb="|= when the desired bre
%      point falls before an accented lette
%    \item The shortcut |""| introduces the raised (English) openi
%      double quotes; this shortcut proves its usefulness when o
%      reminds that the Italian keyboard misses the backtick key, a
%      the backtick on a Windows based platform may be obtained only
%      pressing the \texttt{Alt} key while inputting the numerical co
%      0096; very, very annoyin
%    \item The shortcuts |"<| and |">| insert the French guillemot
%      sometimes used in Italian typography; with the T1 font encodi
%      the ligatures |<<| and |>>| should insert such signs directl
%      but not all the  virtual fonts that claim to follow the T1 fo
%      encoding actually contain the guillemots; with the OT1 encodi
%      the guillemots are not available and must be faked in so
%      way. By using the |"<| and |">| shortcuts (even with the
%      encoding) the necessary tests are performed and in case t
%      suitable glyphs are taken from other fonts normally availab
%      with any good, modern \LaTeX\ distributio
%    \item Three new specific commands |\unit|, |\ped|, and |\ap| a
%      introduced so as to  enable the correct composition of technic
%      mathematics according to the ISO~31/XI recommendations. |\uni
%      does not get redefined if the \babel\ package is loaded \emph{afte
%      the package \texttt{units.sty} whose homonymous command pla
%      a different role and follows a different synta
%    \end{enumerat

%    For this language a limited number of shortcuts has been define
%    table~\ref{t:itshrtct}, some of which are used to overco
%    certain limitations of the Italian keyboard;
%    section~\ref{s:itkbd} there are other comments and hints in ord
%    to overcome some other keyboard limitation

%    \begin{table}[htb]\centeri
%    \begin{tabular}{cp{80mm
%    |"|    & inserts a compound word mark where hyphenation is lega
%             it allows etymological hyphenation which is recommend
%             for technical terms, chemical names and the like;
%             does not work if the next character is represented wi
%             a control sequence or is an accented character.
%    \texttt{\string"\string
%           & the same as the above without the limitation
%            characters represented with control sequences or accent
%            ones.
%    |""|   & inserts open quotes ``.\\ %^^A'' emacs matchi
%    |"<|   & inserts open guillemots.
%    |">|   & inserts closed guillemots.
%    |"/|   & equivalent to |\slas
%    \end{tabula
%    \caption{Shortcuts for the Italian language}\label{t:itshrtc
%    \end{tabl

% \StopEventually
%    \begin{thebibliography}{
%    \bibitem{CBec} Beccari C., ``Computer Aided Hyphenation f
%    Italian and Modern Latin'', \textsf{TUGboat} vol.~13, n.~
%    pp.~23-33 (1992
%    \bibitem{Becc2} Beccari C., ``Typesetting mathematics for scien
%    and technology according to ISO\,31/XI'', \textsf{TUGboa
%    vol.~18, n.~1, pp.~39-48 (1997
%    \end{thebibliography

%    The macro |\LdfInit| takes care of preventing that this file
%    loaded more than once, checking the category code of t
%    \texttt{@} sign, et
% \changes{italian-1.2i}{1996/11/03}{Now use \cs{LdfInit} to perfo
%    initial check
% \changes{italian-1.2j}{1996/12/29}{Added braces around second arg
%    \cs{LdfInit
%    \begin{macrocod
%<*cod
\LdfInit{italian}{captionsitalian
%    \end{macrocod

%    When this file is read as an option, i.e. by the |\usepackag
%    command, \texttt{italian} will be an `unknown' language in whi
%    case we have to make it known.  So we check for the existence
%    |\l@italian| to see whether we have to do something her

% \changes{italian-1.0}{1991/04/23}{Now use \cs{adddialect}
%    language undefine
% \changes{italian-1.0h}{1991/10/08}{Removed use of \cs{@ifundefined
% \changes{italian-1.1}{1992/02/16}{Added a warning when
%    hyphenation patterns were loaded
% \changes{italian-1.2e}{1994/06/26}{Now use \cs{@nopatterns}
%    produce the warnin
%    \begin{macrocod
\ifx\l@italian\@undefin
    \@nopatterns{Italian
    \adddialect\l@italian0\
%    \end{macrocod

%    The next step consists of defining commands to switch to (a
%    from) the Italian languag

% \begin{macro}{\captionsitalia
%    The macro |\captionsitalian| defines all strings us
%    in the four standard document classes provided with \LaTe
% \changes{italian-1.0c}{1991/06/06}{Removed \cs{global} definition
% \changes{italian-1.0c}{1991/06/06}{\cs{pagename} should
%    \cs{headpagename
% \changes{italian-1.0d}{1991/07/01}{`contiene' substitued by `Allegat
%    as suggested by Marco Bozzo (\texttt{BOZZO@CERNVM})
% \changes{italian-1.1}{1992/02/16}{Added \cs{seename}, \cs{alsonam
%    and \cs{prefacename
% \changes{italian-1.1}{1993/07/15}{\cs{headpagename} should
%    \cs{pagename
% \changes{italian-1.2b}{1994/05/19}{Changed some of the wor
%    following suggestions from Claudio Beccar
% \changes{italian-1.2g}{1995/07/04}{Added \cs{proofname} f
%    AMS-\LaTe
% \changes{italian-1.2h}{1995/07/27}{Added translation of `Proof
%    \begin{macrocod
\addto\captionsitalian
  \def\prefacename{Prefazione
  \def\refname{Riferimenti bibliografici
  \def\abstractname{Sommario
  \def\bibname{Bibliografia
  \def\chaptername{Capitolo
  \def\appendixname{Appendice
  \def\contentsname{Indice
  \def\listfigurename{Elenco delle figure
  \def\listtablename{Elenco delle tabelle
  \def\indexname{Indice analitico
  \def\figurename{Figura
  \def\tablename{Tabella
  \def\partname{Parte
  \def\enclname{Allegati
  \def\ccname{e~p.~c.
  \def\headtoname{Per
  \def\pagename{Pag.}%    % in Italian the abbreviation is preferr
  \def\seename{vedi
  \def\alsoname{vedi anche
  \def\proofname{Dimostrazione
  \def\glossaryname{Glossario

%    \end{macrocod
% \end{macr

% \begin{macro}{\dateitalia
%    The macro |\dateitalian| redefines the comma
%    |\today| to produce Italian date
% \changes{italian-1.0c}{1991/06/06}{Removed \cs{global} definition
%    \begin{macrocod
\def\dateitalian
  \def\today{\number\day~\ifcase\month\
    gennaio\or febbraio\or marzo\or aprile\or maggio\or giugno\
    luglio\or agosto\or settembre\or ottobre\or novembre\
    dicembre\fi\space \number\year}
%    \end{macrocod
% \end{macr

% \begin{macro}{\italianhyphenmin
% \changes{italian-1.2b}{1994/05/19}{Added setting of left a
%    righthyphenmin according to Claudio Beccari's suggestio

%    The italian hyphenation patterns can be used with bo
%    |\lefthyphenmin| and |\righthyphenmin| set to~
% \changes{italian-1.2m}{2000/09/22}{Now use \cs{providehyphenmins}
%    provide a default valu
%    \begin{macrocod
\providehyphenmins{\CurrentOption}{\tw@\tw
%    \end{macrocod
% \end{macr

% \begin{macro}{\extrasitalia
% \begin{macro}{\noextrasitalia

% \changes{italian-1.2b}{1994/05/19}{Added setting of club- a
%    widowpenalt
%    Lower the chance that clubs or widows occu
% \changes{italian-1.2t}{2007/12/10}{Added \cs{@clubpenalty} to t
%    italian specific settings, otherwise any sectioning command restor
%    it to the default value valid for english and most other language
%    \begin{macrocod
\addto\extrasitalian
  \babel@savevariable\clubpenal
  \babel@savevariable\widowpenal
  \babel@savevariable\@clubpenal
  \clubpenalty3000\widowpenalty3000\@clubpenalty\clubpenalty
%    \end{macrocod

% \changes{italian-1.2b}{1994/05/19}{Added setting
%    finalhyphendemerit

%    Never ever break a word between the last two lines of a paragra
%    in italian text
%    \begin{macrocod
\addto\extrasitalian
  \babel@savevariable\finalhyphendemeri
  \finalhyphendemerits50000000
%    \end{macrocod

% \changes{italian-1.2h}{1995/11/10}{Now give the apostrophe
%    lowercase cod
% \changes{italian-1.2l}{1999/04/5}{Changed example ``begl'italiani
%    (obsolete spelling) with another, ``nell'altezza'', that behav
%    the same wa
%    In order to enable the hyphenation of words such
%    ``nell'altezza'' we give the \texttt{'} a non-zero lower ca
%    code. When we do that \TeX\ finds the following hyphenati
%    points |nel-l'al-tez-za| instead of non
%    \begin{macrocod
\addto\extrasitalian
  \lccode`'=`'
\addto\noextrasitalian
  \lccode`'=0
%    \end{macrocod
% \end{macr
% \end{macr

% \changes{italian-1.2m}{2000/01/05}{Support for etymologic
%    hyphenatio

%   \subsection{Support for etymological hyphenatio

%    In his article on Italian hyphenation \cite{CBec} Beccari point
%    out that the Italian language gets hyphenated on a phonet
%    basis, although etymological hyphenation is allowed; this is
%    contrast with what happens in Latin, for example, whe
%    etymological hyphenation is always used. Since the patterns f
%    both languages would become too complicated in order to cope wi
%    etymological hyphenation, in his paper Beccari proposed t
%    definition of an active character `|_|' such that it could inse
%    a ``soft'' discretionary hyphen at the compound wo
%    boundary. For several reasons that idea and the specific acti
%    character proved to be unpractical and was abandone

%    This problem is so important with the majority of the Europe
%    languages, that \babel\ from the very beginning develop
%    the tradition of making the |"| character active so as to perfo
%    several actions that turned useful with every languag
%    One of these actions consisted in defining the shortcut \verb="
%    that was extensively used in German and in many other languag
%    in order to insert a discretionary hyphen such that hyphenati
%    would not be precluded in the rest of the word as it happens wi
%    the standard \TeX\ command |\-

%    Meanwhile the \texttt{ec} fonts with the double Cork encodi
%    (thus formerly called the \texttt{dc} fonts) have become more
%    less standard and are widely used by virtually all Europeans th
%    write languages with many special national characters; by
%    doing they avoid the use of the |\accent| primitive which wou
%    be required with the standard \texttt{cm} fonts; with the latt
%    fonts the primitive command |\accent| is such that hyphenati
%    becomes almost impossible, in any case strongly impeache

%    The \texttt{ec} fonts contain a special character, nam
%    ``compound word mark'', that occupies position 23 in the fo
%    scheme and may be input with the sequence |^^W|. Up to no
%    apparently, this special character has never been used in
%    practical way for the typesetting of languages rich of compou
%    words; also it has never been inserted in the hyphenation patte
%    files of any language. Beccari modified his pattern fi
%    \file{ithyph.tex v4.8b} for Italian so as to contain five n
%    patterns that involve |^^W|, and he tried to give t
%    \babel\ active character |"|  a new shortcut definitio
%    so as to allow the insertion of the ``compound word mark'' in t
%    proper place within any word where two semantic fragments jo
%    up. With such facility for marking the compound word boundarie
%    etymological hyphenation becomes possible even if the patter
%    know nothing about etymology (but the typesetter hopeful
%    does!
%    In Italian such etymological hyphenation is desirable wi
%    technical terms, chemical names, and the lik

%    Even this solution proved to be inconvenient on certain UN
%    platforms, so Beccari resorted to another approach that uses t
%    \babel\ active character |"| and relies on the catego
%    code of the character that follows |"

%    \changes{italian-1.2n}{2000/02/02}{Completely new etymologic
%    hyphenation facilit

%    \begin{macrocod
\initiate@active@char{"
\addto\extrasitalian{\bbl@activate{"}\languageshorthands{italian}
%    \end{macrocod
%    \begin{macro}{\it@cw
%    The active character |"| is now defined for language |italian|
%    as to perform different actions in math mode compared to te
%    mode; specifically in math mode a double quote is inserted so
%    to produce a double prime sign, while in text mode the tempora
%    macro |\it@next| is defined so as to defer any further acti
%    until the next token category code has been teste
%    \begin{macrocod
\declare@shorthand{italian}{"}
\ifmmo
    \def\it@next{''
\el
    \def\it@next{\futurelet\it@temp\it@cwm
\
\it@ne

%    \end{macrocod
%    \begin{macro}{\it@cw
%    The \cs{it@next} service control sequence is such that upon i
%    execution a temporary variable \cs{it@temp} is made equivalent
%    the next token in the input list without actually removi
%    it. Such temporary token is then tested by the macro \cs{it@cw
%    and if it is found to be a letter token, then it introduces
%    compound word separator control sequence \cs{it@allowhyphen
%    whose expansion introduces a discretionary hyphen and
%    unbreakable space; in case the token is not a letter, then it
%    tested against \verb=|=$_{12}$: if so a compound word separat
%    is inserted and the \verb=|= token is removed, otherwise anoth
%    test is performed so as to see if another double quote si
%    follows: in this case a double open quote mark is inserte
%    otherwise two other tests are performed so as to see
%    guillemets have to be inserted, otherwise nothing is don
%    The double quote shortcut for inserting a double open quote si
%    is useful for people who are inputting Italian text by means
%    an Italian keyboard that unfortunately misses the grave
%    backtick ke
%    By this shortcut |""| becomes equivalent to |``| for inserti
%    raised open high double quote
% \changes{italian-1.2r}{2005/11/17}{Added \cs{nobreak}
%    \cs{it@@cwm} and corrected \cs{it@next
%    \begin{macrocod
\def\it@@cwm{\nobreak\discretionary{-}{}{}\nobreak\hskip\z@skip
\def\it@@ocap#1{\it@ocap}\def\it@@ccap#1{\it@ccap
\DeclareRobustCommand*{\it@cwm}{\let\it@@next\rel
\ifcat\noexpand\it@temp
    \def\it@@next{\it@@cwm
\el
    \if\noexpand\it@temp \string
        \def\it@@next{\it@@cwm\@gobble
    \el
        \if\noexpand\it@temp \string
            \def\it@@next{\it@@ocap
        \el
            \if\noexpand\it@temp \string
                \def\it@@next{\it@@ccap
            \el
                \if\noexpand\it@temp\string
                    \def\it@@next{\slash\@gobble
                \el
                    \ifx\it@temp
                        \def\it@@next{``\@gobble
                    \
                \
            \
        \
    \
\
\it@@next
%    \end{macrocod
%    \end{macr
%    \end{macr


%   \begin{sloppypa
%    By this definition of |"| if one types |macro"istruzione| t
%    possible break points become \textsf{ma-cro-istru-zio-ne}, whi
%    without  the |"| mark they would be \textsf{ma-croi-stru-zio-ne
%    according to the phonetic rules such that the |macro| prefix
%    not taken as a uni
%    A chemical name such as \texttt{des"clor"fenir"amina"cloridrat
%    is breakable as \textsf{des-clor-fe-nir-ami-na-clo-ri-dra-t
%    instead of \textsf{de-sclor-fe-ni-ra-mi-na-..

%    In other language description files a shortcut is defined so
%    to allow a break point without actually inserting any hyph
%    sign; examples are given such as \mbox{entrada/salida}; actual
%    if one wants to allow a breakpoint after the slash, it is mu
%    clearer to type |\slash| instead of |/| and \LaTeX\ do
%    everything by itself; here the shortcut |"/| was introduced
%    stand for |\slash| so that one can type |input"/output| and all
%    a line break after the slas
%    This shortcut works only for the slash, since in Italian su
%    constructs are extremely rar
%   \end{sloppypa

%    Attention: the expansion of |"| takes place before the actu
%    expansion of OT1 or T1 accented sequences such as |\`{a}
%    therefore this etymological hyphenation facility works as
%    should only when the semantic word fragments \textit{do n
%    start} with an accented letter; this in Italian is alwa
%    avoidable, because compulsory accents fall only on the la
%    vowel, but it may be necessary to mark a compound word where o
%    or more components come from a foreign language and conta
%    diacritical marks according to the spelling rules of th
%    language. In this case the special shorthand \verb!"|! may
%    used that performs exactly as |"| normally does, except that t
%    \verb!|! sign is removed from the token input lis
%    \verb!kilo"|{\"o}rsted! gets hyphenated
%    \texttt{ki-lo-\"or-sted

%    \changes{italian-1.2l}{1999/04/05}{Added useful macros f
%    fulfilling ISO 31/XI regulation

%   \subsection{Facilities required by the ISO 31/XI regulation
%    The ISO 31/XI regulations require that units of measure a
%    typeset in upright font in any circumstance, math or text, a
%    that in text mode they are separated from the  numeric
%    indication of the measure with an unbreakable (thin) spac
%    The command |\unit| that was defined for achieving th
%    goal happened to conflict with the homonymous command defined
%    the package \texttt{units.sty}; we therefore need to test if th
%    package has already been loaded so as to avoid conflicts; we assu
%    that if the user loads that package, s/he wants to use that packa
%    facilities and command synta

%    The same regulations require also that super and subscrip
%    (apices and pedices) are in upright font, \emph{not in ma
%    italics}, when they represent ``adjectives'' or appositions
%    mathematical or physical variables that do not represe
%    countable or measurable entities such as, for exampl
%    $V_{\mathrm{max}}$ or $V_{\mathrm{rms}}$ for a maximum or a ro
%    mean square voltage, compared to $V_i$  or $V_T$ as the $i$-
%    voltage in a set, or a voltage that depends on the thermodynam
%    temperature $T$. See \cite{Becc2} for a complete description
%    the ISO regulations in connection with typesettin

%    More rarely it happens to use superscripts that are n
%    mathematical variables, such as the notati
%    $\mathbf{A}^{\!\mathrm{T}}$ to denote the transpose of matr
%    $\mathbf{A}$; text superscripts are useful also as ordinals
%    in old fashioned abbreviations in text mode; for example t
%    feminine ordinal $1^{\mathrm{a}}$ or the  old fashioned obsole
%    abbreviation F$^{\mathrm{lli}}$ for \mbox{Fratelli} in compa
%    names (compare with ``Bros.'' for \underline{bro}ther\underline{
%    in American English); text subscripts are mostly used in logo

%    \begin{macro}{\uni
%    \begin{macro}{\a
%    \begin{macro}{\pe
%    First we define the new (internal) commands |\bbl@unit|, |\bbl@ap
%    and |\bbl@ped| as robust one
% \changes{italian-1.2q}{2005/02/05}{Added testing for avoiding conflic
%     with the units.sty packag
%    \begin{macrocod
\@ifpackageloaded{units}{}
  \DeclareRobustCommand*{\bbl@unit}[1]
    \textormath{\,\mbox{#1}}{\,\mathrm{#1}}

\DeclareRobustCommand*{\bbl@ap}[1]
  \textormath{\textsuperscript{#1}}{^{\mathrm{#1}}}
\DeclareRobustCommand*{\bbl@ped}[1]
  \textormath{$_{\mbox{\fontsize\sf@size\
        \selectfont#1}}$}{_\mathrm{#1}}
%    \end{macrocod
%    Then we can use |\let| to define the user level commands, but
%    case the macros already have a different meaning before enteri
%    in Italian mode typesetting, we first memorize their meaning
%    as to restore them on exi
%    \begin{macrocod
\@ifpackageloaded{units}{}
  \addto\extrasitalian
    \babel@save\unit\let\unit\bbl@unit

\addto\extrasitalian
  \babel@save\ap\let\ap\bbl@
  \babel@save\ped\let\ped\bbl@p

%    \end{macrocod
%    \end{macr
%    \end{macr
%    \end{macr

% \subsection{Accents}\label{s:itkb
%    Most of the other language description files introduce a numb
%    of shortcuts for inserting accents and other language specif
%    diacritical marks in a more comfortable way compared with t
%    lengthy standard \TeX\ conventions. When an Italian keyboard
%    being used on a Windows based platform, it exhibits su
%    limitations that up to now no convenient shortcuts have be
%    developed; the reason lies in the fact that the Italian keyboa
%    lacks the grave accent (also known as ``backtick''), which
%    compulsory on all accented vowels except the `e',  but, on t
%    opposite, it carries the keys with all the accented lowerca
%    vowels; the keyboard lacks also the tie |~| (tilde) key, whi
%    the curly braces require pressing three keys simultaneousl

%    The best solution Italians have found so far is to use a sma
%    editor that accepts shortcut definitions such that, for exampl
%    by striking |"(| one gets directly |{| on the screen and the sa
%    sign is saved into the \file{.tex} file; the same smart edit
%    should be capable of translating the accented characters into t
%    standard \TeX\ sequences when writing a file to disk (for t
%    sake of file portability), and to transform the standard \Te
%    sequences into the corresponding signs when loading a \file{.te
%    file from disk to memory. Such smart editors do exist and can
%    downloaded from the \textsc{ctan} archive

% \changes{italian-1.2p}{2002/07/10}{Removed redefinition of \cs{add@acc} since i
%    functionality has been introduced into the kernel of LaTeX 2001/06/0

%    For what concerns the missing backtick ke
%    which is used also for inputting the open quotes, it must
%    noticed that the shortcut |""| described above completely solv
%    the problem for \textit{double} raised open quotes; according
%    the traditions of particular publishing houses, since there a
%    no  compulsory regulations on the matter, the French guilleme
%    may be used; in this case the T1 font encoding solves the probl
%    by means of its built in ligatures |<<| and |>>|. But\do

%    \subsection{\emph{Caporali} or French double quote
%    Although the T1 font encoding ligatures solve the problem, the
%    are some circumstances where even the T1 font encoding cannot
%    used, either because the author\slash typesetter wants to use t
%    OT1 encoding, or because s/he uses a font set that do
%    not comply completely with the T1 font encoding; some virtu
%    fonts, for example, are supposed to implement the double Co
%    font encoding  but actually miss some glyphs; one such virtu
%    font set is given by the \texttt{ae} virtual fonts, because th
%    are supposed to implement such double font encoding simply usi
%    the \texttt{cm} fonts, of which the type~1 PostScript versi
%    exists  and is freely available. Since guillemets (in Itali
%    \emph{caporali}) do not exist in any \texttt{cm} latin fon
%    their glyphs must be substituted with something else th
%    approaches the

% \changes{italian-1.2q}{2005/02/05}{Redefined the caporali machine
%     so as to avoid incompatibilities with the slides class, as the
%     are no Cyrillic slides fonts as there are for Latins scrip

%    Since in French typesetting guillemets are compulsory, the Fren
%    language definition file resorts to a clever font substitutio
%    such file exploits the \LaTeXe\ font selection machinery so as
%    get the guillemets from the Cyrillic fonts, because it suffic
%    to locally change the default encoding. There are several sets
%    Cyrillic fonts, but the ones that obey the OT2 font encoding a
%    generally distributed with  all recent implementations of t
%    \TeX\ software; they are part of the American Mathematic
%    Society fonts and come both as \textsf{METAFONT} source files a
%    Type~1 PostScript \texttt{.pfb} files. The availability of su
%    fonts should be guaranteed by the presence of t
%    \texttt{OT2cmr.fd} font description file. Actually the presen
%    of this file does not guarantee the completeness of your \Te
%    implementation; should \LaTeX\ complain about a missing Cyrill
%    \texttt{.tfm} file (that kind of file that contains the fo
%    metric parameters) and/or about missing Cyrillic \texttt(.m
%    files, then your \TeX\ system is \emph{incomplete} and you shou
%    download such fonts from the \textsc{ctan} archives. Temporari
%    you may issue the command |\LtxSymbCaporali| so as to approxima
%    the missing glyphs with the \LaTeX\ symbol fonts. In some ca
%    warning messages are issued so as to inform the typesetter abo
%    the necessity of resorting to some \emph{poor man} solutio

%     In spite of these alternate fonts, we must avoid invoking unusu
%     fonts if the available encoding allows to use built in caporal
%     As far as I know (CB) the only T1-encoded font families that mi
%     the guillemets are the AE ones; we therefore first test if t
%     default encoding id the T1 one and in this case if the AE famili
%     are the default ones; in order for this to work properly it
%     necessary to load these optional packages \emph{before} \babe
%     If the T1 encoding is not the default one when the Italian langua
%     is specified, then some substitutions must be don

%    \begin{macro}{\LtxSymbCaporal
%    \begin{macro}{\it@oca
%    \begin{macro}{\it@cca
%     We define some macros for substituting the default guillemets; first t
%     emulation by means of the \LaTeX\ symbols; each one of these macro se
%     actually redefines the control sequences |\it@ocap| and |\it@ccap| th
%     are the ones effectively activated by the shortcuts |"<| and |">
%    \begin{macrocod
\def\LtxSymbCaporali
     \DeclareRobustCommand*{\it@ocap}{\mbox
        \fontencoding{U}\fontfamily{lasy}\selectfont(\kern-0.20em(
        \ignorespaces
     \DeclareRobustCommand*{\it@ccap}{\ifdim\lastskip>\z@\unskip\
     \mbox
        \fontencoding{U}\fontfamily{lasy}\selectfont)\kern-0.20em)}

%    \end{macrocod
%    Then the substitution with any specific font that contains su
%    glyphs; it might be the CBgreek fonts, the Cyrillic one, t
%    super-cm ones, the lm ones, or any other the user might pref
%    (the code is adapted from the one that appears in t
%    \texttt{frenchb.ld} file; thanks to Daniel Flipo)
%    By default if the user did not select the T1 encoding, t
%    existence of the CBgreek fonts is tested; if they exist t
%    guillemets are taken from this font, and since its families are
%    superset of the default CM ones and they apply also to types
%    slides with the standard class \texttt{slides}. If the CBgre
%    fonts are not found, then the existence of the Cyrillic ones
%    tested, although this choice is not suited for typesetti
%    slides; otherwise the poor man solution of the \LaTeX\ speci
%    symbols is used. In any case the user can force the use of t
%    Cyrillic guillemets substitution by issuing the declarati
%    |\CyrillicCaporali| just before the |\begin{document}| statemen
%    in alternative the user can specify wi
%    \begin{flushlef
%    |\CaporaliFrom|\marg{encoding}\marg{family}\marg{opening number}\marg{closing numbe
%    \end{flushlef
%    the encoding and family of the font s/he prefers, and the sl
%    numbers of the opening and closing guillemets respectively. F
%    example if the T1-encoded Latin Modern fonts are desired t
%    specific command should b
%    \begin {flushlef
%    |\CaporaliFrom{T1}{lmr}{19}{20
%    \end{flushlef
%    These user choices might be necessary for assuring the corre
%    typesetting with fonts that contain the required glyphs and a
%    available also in PostScript form so as to use them directly wi
%    \texttt{pdflatex}, for example
%    \begin{macrocod
\def\CaporaliFrom#1#2#3#4
  \DeclareFontEncoding{#1}{}{
  \DeclareTextCommand{\it@ocap}{T1}
    {\fontencoding{#1}\fontfamily{#2}\selectfont\char#3\ignorespaces}
  \DeclareTextCommand{\it@ccap}{T1}{\ifdim\lastskip>\z@\unskip\f
    {\fontencoding{#1}\fontfamily{#2}\selectfont\char#4}
  \DeclareTextCommand{\it@ocap}{OT1}
    {\fontencoding{#1}\fontfamily{#2}\selectfont\char#3\ignorespaces}
  \DeclareTextCommand{\it@ccap}{OT1}{\ifdim\lastskip>\z@\unskip\f
    {\fontencoding{#1}\fontfamily{#2}\selectfont\char#4}
%    \end{macrocod
%    Then we set a boolean variable and test the default famil
%    if such family has a name that starts with the letters ``ae
%    then we have no built in guillemets; of course if the AE fo
%    family is chosen after the \babel\ package is loaded, the te
%    does not perform as required
%    \begin{macrocod
\def\get@ae#1#2#3!{\def\bbl@ae{#1#2}
\def\@ifT@one@noCap{\expandafter\get@ae\f@family
\def\bbl@temp{ae}\ifx\bbl@ae\bbl@temp\expandafter\@firstoftwo\el
    \expandafter\@secondoftwo\fi
%    \end{macrocod
%    We set another couple of boolean variables for testing t
%    existence of the CBgreek or the Cyrillic fon
%    \begin{macrocod
\newif\if@CBgreekEncKno
\IfFileExists{lgrcmr.fd
      {\@CBgreekEncKnowntrue}{\@CBgreekEncKnownfals
\newif\if@CyrEncKno
\IfFileExists{ot2cmr.fd
    {\@CyrEncKnowntrue}{\@CyrEncKnownfalse
%    \end{macrocod
%    \begin {macro}{\CBgreekCaporal
%    \begin {macro}{\CyrillicCaporal
%    \begin {macro}{\T@unoCaporal
%    Next we define the macros |\CBgreekCaporali|, |\T@unoCaporali
%    and |\CyrillicCaporali|; with the latter one we test the load
%    class, and if it's \texttt{slides} nothing gets done. In any ca
%    each one of these declarations, if used, must be specified in t
%    preambl
%    \begin{macrocod
\def\CBgreekCaporali{\@ifclassloaded{slides}
      \IfFileExists{lgrlcmss.fd}{\DeclareFontEncoding{LGR}{}{
            \DeclareRobustCommand*{\it@ccap
                  {\ifdim\lastskip>\z@\unskip\
                        {\fontencoding{LGR}\selectfont))}
            \DeclareRobustCommand*{\it@ocap
                  {{\fontencoding{LGR}\selectfont((}\ignorespaces}
            {\LtxSymbCaporali}
      {\DeclareFontEncoding{LGR}{}{
      \DeclareRobustCommand*{\it@ccap
            {\ifdim\lastskip>\z@\unsk
            \fi{\fontencoding{LGR}\selectfont))}
      \DeclareRobustCommand*{\it@ocap
            {{\fontencoding{LGR}\selectfont((}\ignorespaces}

\def\CyrillicCaporali{\@ifclassloaded{slides}{\relax
      {\DeclareFontEncoding{OT2}{}{
      \DeclareRobustCommand*{\it@ccap
            {\ifdim\lastskip>\z@\unskip\
            {\fontencoding{OT2}\selectfont\char62\relax}
      \DeclareRobustCommand*{\it@ocap
            {{\fontencoding{OT2}\selectfont\char60\relax}\ignorespaces}}
\@onlypreamble{\CBgreekCaporali}\@onlypreamble{\CyrillicCaporali
\def\T@unoCaporali{\DeclareRobustCommand*{\it@ocap}{<<\ignorespaces
     \DeclareRobustCommand*{\it@ccap}{\ifdim\lastskip>\z@\unskip\fi>>}
%    \end{macrocod
%    \end{macr
%    \end{macr
%    \end{macr
%    Now we can do some real setting; first we start testing the encodin
%    if the encoding is T1 we test if the font family is the AE one; if s
%    we further test for other possibiliti
%    \begin{macrocod
\ifx\cf@encoding\bbl@t@o
  \@ifT@one@noCap
     \if@CBgreekEncKno
        \CBgreekCapora
     \el
        \if@CyrEncKno
           \CyrilicCapora
        \el
           \LtxSymbCapora
        \
     \fi
     {\T@unoCaporali
%    \end{macrocod
%     But if the default encoding is not the T1 one, then t
%     substitutions must be performe
%    \begin{macrocod
\el
     \if@CBgreekEncKno
        \CBgreekCapora
     \el
        \if@CyrEncKno
           \CyrilicCapora
        \el
           \LtxSymbCapora
        \
     \
\
%    \end{macrocod
%    \end{macr
%    \end{macr
%    \end{macr

%    \subsection{Finishing command
%    The macro |\ldf@finish| takes care of looking for
%    configuration file, setting the main language to be switched
%    at |\begin{document}| and resetting the category code
%    \texttt{@} to its original valu
% \changes{italian-1.2i}{1996/11/03}{Now use \cs{ldf@finish} to wr
%    u
%    \begin{macrocod
\ldf@finish{italian
%</cod
%    \end{macrocod

% \Fina

%% \CharacterTab
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y
%%   Digits        \0\1\2\3\4\5\6\7\8
%%   Exclamation   \!     Double quote  \"     Hash (number)
%%   Dollar        \$     Percent       \%     Ampersand
%%   Acute accent  \'     Left paren    \(     Right paren
%%   Asterisk      \*     Plus          \+     Comma
%%   Minus         \-     Point         \.     Solidus
%%   Colon         \:     Semicolon     \;     Less than
%%   Equals        \=     Greater than  \>     Question mark
%%   Commercial at \@     Left bracket  \[     Backslash
%%   Right bracket \]     Circumflex    \^     Underscore
%%   Grave accent  \`     Left brace    \{     Vertical bar
%%   Right brace   \}     Tilde         \

\endinp
