% \iffalse meta-comme

% Copyright 1989-2008 Johannes L. Braams and any individual autho
% listed elsewhere in this file.  All rights reserve

% This file is part of the Babel syste
% ------------------------------------

% It may be distributed and/or modified under t
% conditions of the LaTeX Project Public License, either version 1
% of this license or (at your option) any later versio
% The latest version of this license is
%   http://www.latex-project.org/lppl.t
% and version 1.3 or later is part of all distributions of LaT
% version 2003/12/01 or late

% This work has the LPPL maintenance status "maintained

% The Current Maintainer of this work is Johannes Braam

% The list of all files belonging to the Babel system
% given in the file `manifest.bbl. See also `legal.bbl' for addition
% informatio

% The list of derived (unpacked) files belonging to the distributi
% and covered by LPPL is defined by the unpacking scripts (wi
% extension .ins) which are part of the distributio
% \
% \CheckSum{146

% \iffal
%    Tell the \LaTeX\ system who we are and write an entry on t
%    transcrip
%<*dt
\ProvidesFile{russianb.dt
%</dt
%<code>\ProvidesLanguage{russian
        [2008/03/21 v1.1r Russian support from the babel syste

%% File `russianb.dt
%% Babel package for LaTeX version
%% Copyright (C) 1989 - 20
%%           by Johannes Braams, TeXni

%% Russianb Language Definition Fi
%% Copyright (C) 1995 - 20
%%           by Olga Lapko cyrtug at mir.msk.
%%              Johannes Braams, TeXni

%% Adapted to the new T2 and X2 Cyrillic encodin
%%           by Vladimir Volovich TeX at vvv.vsu.
%%              Werner Lemberg wl at gnu.o

%% Please report errors to: J.L. Braa
%%                          babel at braams dot xs4all dot

%<*filedrive
\documentclass{ltxdo
\newcommand\TeXhax{\TeX ha
\newcommand\babel{\textsf{babel
\newcommand\langvar{$\langle \it lang \rangle
\newcommand\note[1]
\newcommand\Lopt[1]{\textsf{#1
\newcommand\file[1]{\texttt{#1
\newcommand\pkg[1]{\texttt{#1
\begin{documen
 \DocInput{russianb.dt
\end{documen
%</filedrive
%\
% \GetFileInfo{russianb.dt

% \changes{russianb-1.1c}{1996/07/11}{Replaced \cs{undefined} wi
%    \cs{@undefined} and \cs{empty} with \cs{@empty} for consisten
%    with \LaTe
% \changes{russianb-1.1d}{1996/10/10}{Moved the definition
%    \cs{atcatcode} right to the beginning
% \changes{russianb-1.1k}{1999/08/19}{replaced all \cs{penalty}\cs{@
%    with \cs{nobreak

%  \section{The Russian languag

%    The file \file{\filename}\footnote{The file described in this secti
%    has version number \fileversion\ and was last revised on \filedat
%    This file was initially derived from the original version
%    \file{german.sty}, which has some definitions for Russian. Later t
%    definitions from \file{russian.sty} version 1.0b (for \LaTeX\ 2.09
%    \file{russian.sty} version v2.5c (for \LaTeXe) and \file{francais.st
%    version 4.5c and \file{germanb.sty} version 2.5c were added.} defin
%    all the language-specific macros for the Russian language. It needs t
%    file \file{cyrcod} for success documentation with Russian encodin
%    (see below

%    For this language the character |"| is made active.
%    table~\ref{tab:russian-quote} an overview is given of its purpos

% \changes{russianb-1.1f}{1998/06/26}
%    Added definitions of Cyrillic emdash stuff and thinspac

%    \begin{table}[ht
%      \begin{cente
%      \begin{tabular}{lp{8cm
%       \verb="|= & disable ligature at this position.
%       |"-| & an explicit hyphen sign, allowing hyphenati
%                   in the rest of the word.
%       |"---| & Cyrillic emdash in plain text.
%       |"--~| & Cyrillic emdash in compound names (surnames).
%       |"--*| & Cyrillic emdash for denoting direct speech.
%       |""| & like |"-|, but producing no hyphen si
%                   (for compund words with hyphen, e.g.\ |x-""
%                   or some other signs  as ``disable/enable'').
%       |"~| & for a compound word mark without a breakpoint.
%       |"=| & for a compound word mark with a breakpoint, allowi
%              hyphenation in the composing words.
%       |",| & thinspace for initials with a breakpoi
%               in following surname.
%       |"`| & for German left double quot
%                   (looks like ,\kern-0.08em,).
%       |"'| & for German right double quotes (looks like ``).       \\%^^A
%       |"<| & for French left double quotes (looks like $<\!\!<$).
%       |">| & for French right double quotes (looks like $>\!\!>$).
%      \end{tabula
%      \caption{The extra definitions ma
%               by \file{russianb}}\label{tab:russian-quot
%      \end{cente
%    \end{tabl

%    The quotes in table~\ref{tab:russian-quote} can also be typeset
%    using the commands in table~\ref{tab:rmore-quote

%    \begin{table}[ht
%      \begin{cente
%      \begin{tabular}{lp{8cm
%       |\cdash---| & Cyrillic emdash in plain text.
%       |\cdash--~| & Cyrillic emdash in compound names (surnames).
%       |\cdash--*| & Cyrillic emdash for denoting direct speech.
%       |\glqq| & for German left double quot
%                    (looks like ,\kern-0.08em,).
%       |\grqq| & for German right double quotes (looks like ``).       \\%^^A
%       |\flqq| & for French left double quotes (looks like $<\!\!<$).
%       |\frqq| & for French right double quotes (looks like $>\!\!>$).
%       |\dq|   & the original quotes character (|"|).
%      \end{tabula
%      \caption{More commands which produce quotes, defin
%               by \babel}\label{tab:rmore-quot
%      \end{cente
%    \end{tabl

%    The French quotes are also available as ligatures `|<<|' and `|>>|'
%    8-bit Cyrillic font encodings (\texttt{LCY}, \texttt{X2}, \texttt{T2*
%    and as `|<|' and `|>|' characters in 7-bit Cyrillic font encodin
%    (\texttt{OT2} and \texttt{LWN}

%    The quotation marks traditionally used in Russian were borrowed fr
%    other languages (e.g., French and German) so they keep their origin
%    name

% \StopEventually

%    The macro |\LdfInit| takes care of preventing that this file is load
%    more than once, checking the category code of the \texttt{@} sign, et

% \changes{russianb-1.1d}{1996/11/03}{Now use \cs{LdfInit} to perfo
%    initial check
% \changes{russianb-1.1e}{1996/12/29}{Added closing brace to seco
%    argument of \cs{LdfInit
%    \begin{macrocod
%<*cod
\LdfInit{russian}{captionsrussia
%    \end{macrocod

%    When this file is read as an option, i.e., by the |\usepackag
%    command, \texttt{russianb} will be an `unknown' language, in which ca
%    we have to make it known. So we check for the existence of |\l@russia
%    to see whether we have to do something her

%    \begin{macrocod
\ifx\l@russian\@undefin
  \@nopatterns{Russia
  \adddialect\l@russia
\
%    \end{macrocod

%  \begin{macro}{\latinencodin

%    We need to know the encoding for text that is supposed to be which
%    active at the end of the \babel\ package. If the \pkg{fontenc} packa
%    is loaded later, then\ldots too ba

%    \begin{macrocod
\let\latinencoding\cf@encodi
%    \end{macrocod

%  \end{macr

%    The user may choose between different available Cyrill
%    encodings---e.g., \texttt{X2}, \texttt{LCY}, or \texttt{LWN}.
%    Hopefully, \texttt{X2} will eventually replace the two latter encodin
%    (\texttt{LCY} and \texttt{LWN}).\@ If the user wants to use anoth
%    font encoding than the default (\texttt{T2A}), he has to load t
%    corresponding file \emph{before} \file{russianb.sty}. This may be do
%    in the following wa

%    \begin{verbati
%      % override the default X2 encoding used in Bab
%      \usepackage[LCY,OT1]{fonten
%      \usepackage[english,russian]{babe
%    \end{verbati
%    \unsk

%    Note: for the Russian language, the \texttt{T2A} encoding is better th
%    \texttt{X2}, because \texttt{X2} does not contain Latin letters, a
%    users should be very careful to switch the language every time th
%    want to typeset a Latin word inside a Russian phrase or vice vers

%    We parse the |\cdp@list| containing the encodings known to \LaTeX\
%    the order they were loaded. We set the |\cyrillicencoding| to t
%    \emph{last} loaded encoding in the list of supported Cyrill
%    encodings: \texttt{OT2}, \texttt{LWN}, \texttt{LCY}, \texttt{X2
%    \texttt{T2C}, \texttt{T2B}, \texttt{T2A}, if an

%    \begin{macrocod
\def\reserved@a#1#2
   \edef\reserved@b{#1
   \edef\reserved@c{#2
   \ifx\reserved@b\reserved
     \let\cyrillicencoding\reserved
   \f
\def\cdp@elt#1#2#3#4
   \reserved@a{#1}{OT2
   \reserved@a{#1}{LWN
   \reserved@a{#1}{LCY
   \reserved@a{#1}{X2
   \reserved@a{#1}{T2C
   \reserved@a{#1}{T2B
   \reserved@a{#1}{T2A
\cdp@li
%    \end{macrocod

%    Now, if |\cyrillicencoding| is undefined, then the user did not lo
%    any of supported encodings. So, we have to set |\cyrillicencoding|
%    some default value. We test the presence of the encoding definiti
%    files in the order from less preferable to more preferable encoding
%    We use the lowercase names (i.e., \file{lcyenc.def} instead
%    \file{LCYenc.def}

%    \begin{macrocod
\ifx\cyrillicencoding\undefin
  \IfFileExists{ot2enc.def}{\def\cyrillicencoding{OT2}}\rel
  \IfFileExists{lwnenc.def}{\def\cyrillicencoding{LWN}}\rel
  \IfFileExists{lcyenc.def}{\def\cyrillicencoding{LCY}}\rel
  \IfFileExists{x2enc.def}{\def\cyrillicencoding{X2}}\rel
  \IfFileExists{t2cenc.def}{\def\cyrillicencoding{T2C}}\rel
  \IfFileExists{t2benc.def}{\def\cyrillicencoding{T2B}}\rel
  \IfFileExists{t2aenc.def}{\def\cyrillicencoding{T2A}}\rel
%    \end{macrocod

%    If |\cyrillicencoding| is still undefined, then the user seems not
%    have a properly installed distribution. A fatal erro

%    \begin{macrocod
  \ifx\cyrillicencoding\undefin
    \PackageError{babel
      {No Cyrillic encoding definition files were found
      {Your installation is incomplete.\MessageBre
       You need at least one of the following files:\MessageBre
       \space\spa
       x2enc.def, t2aenc.def, t2benc.def, t2cenc.def,\MessageBre
       \space\spa
       lcyenc.def, lwnenc.def, ot2enc.def.
  \el
%    \end{macrocod

%    We avoid |\usepackage[\cyrillicencoding]{fontenc}| because we don
%    want to force the switch of |\encodingdefault

%    \begin{macrocod
    \lowerca
      \expandafter{\expandafter\input\cyrillicencoding enc.def\relax
  \
\
%    \end{macrocod

%    \begin{verbati
%      \PackageInfo{babe
%        {Using `\cyrillicencoding' as a default Cyrillic encoding
%    \end{verbati
%    \unsk

%    \begin{macrocod
\DeclareRobustCommand{\Russian}
  \fontencoding\cyrillicencoding\selectfo
  \let\encodingdefault\cyrillicencodi
  \expandafter\set@hyphenmins\russianhyphenmi
  \language\l@russian
\DeclareRobustCommand{\English}
  \fontencoding\latinencoding\selectfo
  \let\encodingdefault\latinencodi
  \expandafter\set@hyphenmins\englishhyphenmi
  \language\l@english
\let\Rus\Russi
\let\Eng\Engli
\let\cyrillictext\Russi
\let\cyr\Russi
%    \end{macrocod

%    Since the \texttt{X2} encoding does not contain Latin letters,
%    should make some redefinitions of \LaTeX\ macros which implicit
%    produce Latin letter

%    \begin{macrocod
\expandafter\ifx\csname T@X2\endcsname\relax\el
%    \end{macrocod

%    We put |\latinencoding| in braces to avoid problems wi
%    |\@alph| inside minipages (e.g., footnotes inside minipages) whe
%    |\@alph| is expanded and we get for example `|\fontencoding OT1
%    (|\fontencoding| is robust

%    \begin{macrocod
  \def\@alph#1{{\fontencoding{\latinencoding}\selectfo
    \ifcase#1\
      a\or b\or c\or d\or e\or f\or g\or h\
      i\or j\or k\or l\or m\or n\or o\or p\
      q\or r\or s\or t\or u\or v\or w\or x\
      y\or z\else\@ctrerr\fi}
  \def\@Alph#1{{\fontencoding{\latinencoding}\selectfo
    \ifcase#1\
      A\or B\or C\or D\or E\or F\or G\or H\
      I\or J\or K\or L\or M\or N\or O\or P\
      Q\or R\or S\or T\or U\or V\or W\or X\
      Y\or Z\else\@ctrerr\fi}
%    \end{macrocod

%    Unfortunately, the commands |\AA| and |\aa| are not encoding depende
%    in \LaTeX\ (unlike e.g., |\oe| or |\DH|). They are defined as |\r{A}| a
%    |\r{a}|. This leads to unpredictable results when the font encodi
%    does not contain the Latin letters `A' and `a' (like \texttt{X2}

%    \begin{macrocod
  \DeclareTextSymbolDefault{\AA}{OT
  \DeclareTextSymbolDefault{\aa}{OT
  \DeclareTextCommand{\aa}{OT1}{\r
  \DeclareTextCommand{\AA}{OT1}{\r
\
%    \end{macrocod

%    The following block redefines the character class of uppercase Gre
%    letters and some accents, if it is equal to 7 (variable family),
%    avoid incorrect results if the font encoding in some math family do
%    not contain these characters in places of OT1 encoding. The code w
%    taken from |amsmath.dtx|. See comments and further explanation ther

% \changes{russianb-1.1n}{2001/02/21}{As this code generates
%    textfont 7 error it is commented out for now
%    \begin{macrocod
% \begingroup\catcode`\"=
% % uppercase greek letter
% \def\@tempa#1{\expandafter\@tempb\meaning#1\relax\relax\relax\rel
%   "0000\@nil#
% \def\@tempb#1"#2#3#4#5#6\@nil#7
%   \ifnum"#2=7 \count@"1#3#4#5\rel
%     \ifnum\count@<"1000 \else \global\mathchardef#7="0#3#4#5\relax \
%   \f
% \@tempa\Gamma\@tempa\Delta\@tempa\Theta\@tempa\Lambda\@tempa\
% \@tempa\Pi\@tempa\Sigma\@tempa\Upsilon\@tempa\Phi\@tempa\P
% \@tempa\Ome
% % some accent
% \def\@tempa#1#2\@nil{\def\@tempc{#1}}\def\@tempb{\mathaccen
% \expandafter\@tempa\hat\relax\relax\@n
% \ifx\@tempb\@tem
%   \def\@tempa#1\@nil{#1
%   \def\@tempb#1{\afterassignment\@tempa\mathchardef\@tempc=
%   \def\do#1"#2
%   \def\@tempd#1{\expandafter\@tempb#1\@n
%     \ifnum\@tempc>"F
%       \xdef#1{\mathaccent"\expandafter\do\meaning\@tempc\space
%     \f
%   \@tempd\hat\@tempd\check\@tempd\tilde\@tempd\acute\@tempd\gra
%   \@tempd\dot\@tempd\ddot\@tempd\breve\@tempd\b
% \
% \endgro
%    \end{macrocod

%    The user should use the \pkg{inputenc} package when any 8-bit Cyrill
%    font encoding is used, selecting one of the Cyrillic input encoding
%    We do not assume any default input encoding, so the user shou
%    explicitly call the \pkg{inputenc} package by |\usepackage{inputenc}
%    We also removed |\AtBeginDocument|, so \pkg{inputenc} should be us
%    before \babe

% \changes{russianb-1.1l}{1999/08/27}{Made not using inputenc
%    warning instead of an error
%    \begin{macrocod
\@ifpackageloaded{inputenc}{}
  \def\reserved@a{LWN
  \ifx\reserved@a\cyrillicencoding\el
    \def\reserved@a{OT2
    \ifx\reserved@a\cyrillicencoding\el
      \PackageWarning{babel
        {No input encoding specified for Russian languag
  \fi\f
%    \end{macrocod

%    Now we define two commands that offer the possibility to switch betwe
%    Cyrillic and Roman encoding

%  \begin{macro}{\cyrillictex
%  \begin{macro}{\latintex

%    The command |\cyrillictext| will switch from Latin font encoding to t
%    Cyrillic font encoding, the command |\latintext| switches back. Th
%    assumes that the `normal' font encoding is a Latin one. These comman
%    are \emph{declarations}, for shorter peaces of text the comman
%    |\textlatin| and |\textcyrillic| can be use

% \changes{russianb-1.1o}{2003/10/12}{\cs{latintext} is alrea
%    defined by the core of \babe
%    \begin{macrocod
%\DeclareRobustCommand{\latintext}
%  \fontencoding{\latinencoding}\selectfo
%  \def\encodingdefault{\latinencoding
\let\lat\latinte
%    \end{macrocod

%  \end{macr
%  \end{macr

%  \begin{macro}{\textcyrilli
%  \begin{macro}{\textlati

%    These commands take an argument which is then typeset using t
%    requested font encodin
% \changes{russianb-1.1o}{2003/10/12}{\cs{textlatin} already defin
%    by the core of \babe
%    \begin{macrocod
\DeclareTextFontCommand{\textcyrillic}{\cyrillictex
%\DeclareTextFontCommand{\textlatin}{\latintex
%    \end{macrocod

%  \end{macr
%  \end{macr

%    We make the \T
%    \begin{macrocod
%\ifx\ltxTeX\undefined\let\ltxTeX\TeX\
%\ProvideTextCommandDefault{\TeX}{\textlatin{\ltxTeX
%    \end{macrocod
%    and \LaTeX\ logos encoding independen
%    \begin{macrocod
%\ifx\ltxLaTeX\undefined\let\ltxLaTeX\LaTeX\
%\ProvideTextCommandDefault{\LaTeX}{\textlatin{\ltxLaTeX
%    \end{macrocod

%    The next step consists of defining commands to switch to (a
%    from) the Russian languag

% \begin{macro}{\captionsrussia

%    The macro |\captionsrussian| defines all strings used in the fo
%    standard document classes provided with \LaTeX. The two commands |\cy
%    and |\lat| activate Cyrillic resp.\ Latin encodin

%    \begin{macrocod
\addto\captionsrussian
%   FIXME: Where is the \prefacename use
  \def\prefacename
    {\cyr\CYRP\cyrr\cyre\cyrd\cyri\cyrs\cyrl\cyro\cyrv\cyri\cyre}
%   {\cyr\CYRV\cyrv\cyre\cyrd\cyre\cyrn\cyri\cyre}
  \def\refname
    {\cyr\CYRS\cyrp\cyri\cyrs\cyro\cy
      \ \cyrl\cyri\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyrery}
% \def\refname
%   {\cyr\CYRL\cyri\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyra}
  \def\abstractname
    {\cyr\CYRA\cyrn\cyrn\cyro\cyrt\cyra\cyrc\cyri\cyrya}
  \def\bibname
    {\cyr\CYRL\cyri\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyra}
% \def\bibname
%   {\cyr\CYRB\cyri\cyrb\cyrl\cyri\cy
%    \cyrg\cyrr\cyra\cyrf\cyri\cyrya}
% for reports according to GOS
% \def\bibname
%   {\cyr\CYRS\cyrp\cyri\cyrs\cyro\cy
%     \ \cyri\cyrs\cyrp\cyro\cyrl\cyrsftsn\cyrz\cyro\cyrv\cyra\cy
%     \cyrn\cyrery\cyrh\ \cyri\cyrs\cyrt\cyro\cyrch\cyrn\cy
%     \cyrk\cyro\cyrv}
  \def\chaptername{{\cyr\CYRG\cyrl\cyra\cyrv\cyra}
% \@ifundefined{chapter}{}
%   \def\chaptername{{\cyr\CYRG\cyrl\cyra\cyrv\cyra}}
  \def\appendixname
    {\cyr\CYRP\cyrr\cyri\cyrl\cyro\cyrzh\cyre\cyrn\cyri\cyre}
%    \end{macrocod

%    There are two names for the Table of Contents that are used in Russi
%    publications. For books (and reports) the second variant
%    appropriate, but for proceedings the first variant is preferre

%    \begin{macrocod
  \@ifundefined{thechapter
    {\def\contentsname
      {\cyr\CYRS\cyro\cyrd\cyre\cyrr\cyrzh\cyra\cyrn\cyri\cyre}}
    {\def\contentsname
      {\cyr\CYRO\cyrg\cyrl\cyra\cyrv\cyrl\cyre\cyrn\cyri\cyre}}
  \def\listfigurename
    {\cyr\CYRS\cyrp\cyri\cyrs\cyro\cy
      \ \cyri\cyrl\cyrl\cyryu\cyrs\cyrt\cyrr\cyra\cyrc\cyri\cyrishrt}
% \def\listfigurename
%   {\cyr\CYRS\cyrp\cyri\cyrs\cyro\cy
%     \ \cyrr\cyri\cyrs\cyru\cyrn\cyrk\cyro\cyrv}
  \def\listtablename
    {\cyr\CYRS\cyrp\cyri\cyrs\cyro\cy
      \ \cyrt\cyra\cyrb\cyrl\cyri\cyrc}
  \def\indexname
    {\cyr\CYRP\cyrr\cyre\cyrd\cyrm\cyre\cyrt\cyrn\cyrery\cyrish
      \ \cyru\cyrk\cyra\cyrz\cyra\cyrt\cyre\cyrl\cyrsftsn}
  \def\authorname
    {\cyr\CYRI\cyrm\cyre\cyrn\cyrn\cyro\cyrish
      \ \cyru\cyrk\cyra\cyrz\cyra\cyrt\cyre\cyrl\cyrsftsn}
  \def\figurename{{\cyr\CYRR\cyri\cyrs.}
  \def\tablename{{\cyr\CYRT\cyra\cyrb\cyrl\cyri\cyrc\cyra}
  \def\partname{{\cyr\CYRCH\cyra\cyrs\cyrt\cyrsftsn}
  \def\enclname{{\cyr\cyrv\cyrk\cyrl.}
  \def\ccname{{\cyr\cyri\cyrs\cyrh.}
% \def\ccname{{\cyr\cyri\cyrz}
  \def\headtoname{{\cyr\cyrv\cyrh.}
% \def\headtoname{{\cyr\cyrv}
  \def\pagename{{\cyr\cyrs.}
% \def\pagename{{\cyr\cyrs\cyrt\cyrr.}
  \def\seename{{\cyr\cyrs\cyrm.}
  \def\alsoname{{\cyr\cyrs\cyrm.\ \cyrt\cyra\cyrk\cyrzh\cyre}
%    \end{macrocod
% \changes{russianb-1.1m}{2000/09/20}{Added \cs{glossaryname
%    \begin{macrocod
  \def\proofname{{\cyr\CYRD\cyro\cyrk\cyra\cyrz\cyra\cy
      \cyre\cyrl\cyrsftsn\cyrs\cyrt\cyrv\cyro}
  \def\glossaryname{Glossary}% <-- Needs translati

%    \end{macrocod

% \end{macr

% \begin{macro}{\daterussia

%    The macro |\daterussian| redefines the command |\today| to produ
%    Russian date

%    \begin{macrocod
\def\daterussian
  \def\today{\number\day~\ifcase\month\
    \cyrya\cyrn\cyrv\cyra\cyrr\cyrya\
    \cyrf\cyre\cyrv\cyrr\cyra\cyrl\cyrya\
    \cyrm\cyra\cyrr\cyrt\cyra\
    \cyra\cyrp\cyrr\cyre\cyrl\cyrya\
    \cyrm\cyra\cyrya\
    \cyri\cyryu\cyrn\cyrya\
    \cyri\cyryu\cyrl\cyrya\
    \cyra\cyrv\cyrg\cyru\cyrs\cyrt\cyra\
    \cyrs\cyre\cyrn\cyrt\cyrya\cyrb\cyrr\cyrya\
    \cyro\cyrk\cyrt\cyrya\cyrb\cyrr\cyrya\
    \cyrn\cyro\cyrya\cyrb\cyrr\cyrya\
    \cyrd\cyre\cyrk\cyra\cyrb\cyrr\cyrya\
    \ \number\year~\cyrg.
%    \end{macrocod

% \end{macr

% \begin{macro}{\extrasrussia

%    The macro |\extrasrussian| will perform all the extra definitio
%    needed for the Russian language. The macro |\noextrasrussian| is us
%    to cancel the actions of |\extrasrussian

% \changes{russianb-1.1b}{1996/02/20}{Added switch to \texttt{LW
%    encodin

%    The first action we define is to switch on the selected Cyrill
%    encoding whenever we enter `russian

%    \begin{macrocod
\addto\extrasrussian{\cyrillictex
%    \end{macrocod

%    When the encoding definition file was processed by \LaTeX\ the curre
%    font encoding is stored in |\latinencoding|, assuming that \LaTeX\ us
%    \texttt{T1} or \texttt{OT1} as default. Therefore we switch back
%    |\latinencoding| whenever the Russian language is no longer `active

%    \begin{macrocod
\addto\noextrasrussian{\latintex
%    \end{macrocod

%  \begin{macro}{\verbatim@fon

% \changes{russianb-1.1b}{1996/02/20}{Added changing
%    \cs{verbatim@font

%    In order to get both Latin and Cyrillic letters in verbatim text
%    need to change the definition of an internal \LaTeX\ command somewha

%    \begin{macrocod
%\def\verbatim@font
%  \let\encodingdefault\latinencodi
%  \normalfont\ttfami
%  \expandafter\def\csname\cyrillicencoding-cmd\endcsname##1##2
%    \ifx\protect\@typeset@prote
%      \begingroup\UseTextSymbol\cyrillicencoding##1\endgro
%    \else\noexpand##1\fi
%    \end{macrocod

%  \end{macr

%    The category code of the characters `\texttt{:}', `\texttt{;}
%    `\texttt{!}', and `\texttt{?}' is made |\active| to insert a litt
%    white spac

%    For Russian (as well as for German) the \texttt{"} character also
%    made activ

%    Note: It is \emph{very} questionable whether the Russian typesetti
%    tradition requires additional spacing before those punctuation sign
%    Therefore, we make the corresponding code optional. If you need i
%    then define the \texttt{frenchpunct} docstrip option
%    \file{babel.ins

% \changes{russianb-1.1f}{1998/06/26}
%    Added a hook to insert spa
%    or not before `double punctuation' (from frenchb)

%    Borrowed from frenc
%    Some users dislike automatic insertion of a space befo
%    `double punctuation', and prefer to decide themselves whether
%    space should be added or not; so a hook |\NoAutoSpaceBeforeFD
%    is provided: if this command is added (in file |russianb.cfg|,
%    anywhere in a document) |russianb| will respect your typing, a
%    introduce a suitable space before `double punctuation' \emph{
%    and only if} a space is typed in the source file before tho
%    sign

%    The command |\AutoSpaceBeforeFDP| switches back to t
%    default behavior of |russianb

% \changes{russianb-1.1a}{1995/03/07}{Use the new mechanism for deali
%    with active character

%    \begin{macrocod
%<*frenchpunc
\initiate@active@char{
\initiate@active@char{
%</frenchpunc
%<*frenchpunct|spanishlig
\initiate@active@char{
\initiate@active@char{
%</frenchpunct|spanishlig
\initiate@active@char{
%    \end{macrocod

%    The code above is necessary because we need extra active character
%    The character |"| is used as indicated
%    table~\ref{tab:russian-quote

%    We specify that the Russian group of shorthands should be use

%    \begin{macrocod
\addto\extrasrussian{\languageshorthands{russian
%    \end{macrocod

%    These characters are `turned on' once, later their definition m
%    var

%    \begin{macrocod
\addto\extrasrussian
%<frenchpunct>  \bbl@activate{:}\bbl@activate{;
%<frenchpunct|spanishligs>  \bbl@activate{!}\bbl@activate{?
  \bbl@activate{"
\addto\noextrasrussian
%<frenchpunct>  \bbl@deactivate{:}\bbl@deactivate{;
%<frenchpunct|spanishligs>  \bbl@deactivate{!}\bbl@deactivate{?
  \bbl@deactivate{"
%    \end{macrocod

%   The \texttt{X2} and \texttt{T2*} encodings do not conta
%   |spanish_shriek| and |spanish_query| symbols; as a consequence, t
%   ligatures `|?`|' and `|!`|' do not work with them (these characters a
%   useless for Cyrillic texts anyway). But we define the shorthands
%   emulate these ligatures (optionally

%   We do not use |\latinencoding| here (but instead explicitly u
%   \texttt{OT1}) because the user may choose \texttt{T2A} to be the prima
%   encoding, but it does not contain these character

%    \begin{macrocod
%<*spanishlig
\declare@shorthand{russian}{?`}{\UseTextSymbol{OT1}\textquestiondow
\declare@shorthand{russian}{!`}{\UseTextSymbol{OT1}\textexclamdow
%</spanishlig
%    \end{macrocod

% \begin{macro}{\russian@sh@;
% \begin{macro}{\russian@sh@:
% \begin{macro}{\russian@sh@!
% \begin{macro}{\russian@sh@?

%    We have to reduce the amount of white space before \texttt{;
%    \texttt{:} and \texttt{!}. This should only happen in horizontal mod
%    hence the test with |\ifhmode

% \changes{russianb-1.1a}{1995/07/04}{Use new \cs{DefineActiveNoArg
% \changes{russianb-1.1a}{1995/07/04}{Use the more general mechanism
%    \cs{declare@shorthand
% \changes{russianb-1.1b}{1996/02/08}{Updated to reflect the late
%    french definition

%    \begin{macrocod
%<*frenchpunc
\declare@shorthand{russian}{;}
  \ifhmo
%    \end{macrocod

% \changes{russianb-1.1f}{1998/06/26}
%    \thinspace changed to kern.1em (space bit thinner
% \changes{russianb-1.1f}{1998/06/26}
%    Added a hook to insert spa
%    or not before `double punctuation' (from frenchb)

%    In horizontal mode we check for the presence of a `space', `unskip'
%    it exists and place a |0.1em| kernin

%    \begin{macrocod
    \ifdim\lastskip>\
      \unskip\nobreak\kern.1
    \el
%    \end{macrocod
%    If no space has been typed, we add |\FDP@thinspac
%    which will
%    defined, up to the user's wishes, as an automatic add
%    thinspace, or as |\@empty

%    \begin{macrocod
        \FDP@thinspa
    \
  \
%    \end{macrocod

%    Now we can insert a `|;|' characte

%    \begin{macrocod
  \string
%    \end{macrocod

%    The other definitions are very simila

%    \begin{macrocod
\declare@shorthand{russian}{:}
  \ifhmo
    \ifdim\lastskip>\
      \unskip\nobreak\kern.1
    \el
        \FDP@thinspa
    \
  \
  \string
%    \end{macrocod

%    \begin{macrocod
\declare@shorthand{russian}{!}
  \ifhmo
    \ifdim\lastskip>\
      \unskip\nobreak\kern.1
    \el
        \FDP@thinspa
    \
  \
  \string
%    \end{macrocod

%    \begin{macrocod
\declare@shorthand{russian}{?}
  \ifhmo
    \ifdim\lastskip>\
      \unskip\nobreak\kern.1
    \el
        \FDP@thinspa
    \
  \
  \string
%    \end{macrocod

% \end{macr
% \end{macr
% \end{macr
% \end{macr


% \changes{russianb-1.1f}{1998/06/26}
%    Added a hook to insert spa
%    or not before `double punctuation' (from frenchb)
%  \begin{macro}{\AutoSpaceBeforeFD
%  \begin{macro}{\NoAutoSpaceBeforeFD
%  \begin{macro}{\FDP@thinspac
%    |\FDP@thinspace| is defined as unbreakab
%    spaces if |\AutoSpaceBeforeFDP| is activated or as |\@empty|
%    |\NoAutoSpaceBeforeFDP| is in us
%    The default is |\AutoSpaceBeforeFDP
%    \begin{macrocod
\def\AutoSpaceBeforeFDP
      \def\FDP@thinspace{\nobreak\kern.1em
\def\NoAutoSpaceBeforeFDP{\let\FDP@thinspace\@empt
\AutoSpaceBeforeF
%    \end{macrocod
%  \end{macr
%  \end{macr
%  \end{macr

%  \begin{macro}{\FDPo
%  \begin{macro}{\FDPof
% \changes{russianb-1.1f}{1998/06/26}{One more chance to avo
%       spaces before double punctuatio

%     The next macros allow to switch on/off activeness of doub
%     punctuation sign

%    \begin{macrocod
\def\FDPon{\bbl@activate{:
        \bbl@activate{;
        \bbl@activate{?
        \bbl@activate{!
\def\FDPoff{\bbl@deactivate{:
        \bbl@deactivate{;
        \bbl@deactivate{?
        \bbl@deactivate{!
%    \end{macrocod
%  \end{macr
%  \end{macr

%  \begin{macro}{\system@sh@:
%  \begin{macro}{\system@sh@!
%  \begin{macro}{\system@sh@?
%  \begin{macro}{\system@sh@;

% \changes{russianb-1.1a}{1995/07/04}{Added system level shorthand

%    When the active characters appear in an environment where the
%    Russian behaviour is not wanted they should give an `expecte
%    result. Therefore we define shorthands at system level as wel

%    \begin{macrocod
\declare@shorthand{system}{:}{\string
\declare@shorthand{system}{;}{\string
%</frenchpunc
%<*frenchpunct&!spanishlig
\declare@shorthand{system}{!}{\string
\declare@shorthand{system}{?}{\string
%</frenchpunct&!spanishlig
%    \end{macrocod

%  \end{macr
%  \end{macr
%  \end{macr
%  \end{macr

%    To be able to define the function of `|"|', we first define a couple
%    `support' macro

%  \begin{macro}{\d

%    We save the original double quote character in |\dq| to keep
%    available, the math accent |\"| can now be typed as `|"|

%    \begin{macrocod
\begingroup \catcode`\"
\def\reserved@a{\endgro
  \def\@SS{\mathchar"7019
  \def\dq{"
\reserved
%    \end{macrocod

%  \end{macr

% \changes{russianb-1.1a}{1995/07/04}{Use \cs{ddot} instead
%    \cs{@MATHUMLAUT

%    Now we can define the doublequote macros: german and french quote
%    We use definitions of these quotes made in babel.st
%    The french quotes are contained in the \texttt{T2*} encoding

%    \begin{macrocod
\declare@shorthand{russian}{"`}{\glq
\declare@shorthand{russian}{"'}{\grq
\declare@shorthand{russian}{"<}{\flq
\declare@shorthand{russian}{">}{\frq
%    \end{macrocod

%    Some additional command

%    \begin{macrocod
\declare@shorthand{russian}{""}{\hskip\z@ski
\declare@shorthand{russian}{"~}{\textormath{\leavevmode\hbox{-}}{-
\declare@shorthand{russian}{"=}{\nobreak-\hskip\z@ski
\declare@shorthand{russian}{"|}
  \textormath{\nobreak\discretionary{-}{}{\kern.03em
              \allowhyphens}{
%    \end{macrocod

%    The next two macros for |"-| and |"---| are somewhat differen
%    We must check whether the second token is a hyphen characte

%    \begin{macrocod
\declare@shorthand{russian}{"-}
%    \end{macrocod

%    If the next token is `|-|', we typeset an emdash, otherwise a hyph
%    sig

%    \begin{macrocod
  \def\russian@sh@tmp
    \if\russian@sh@next-\expandafter\russian@sh@emda
    \else\expandafter\russian@sh@hyphen\

%    \end{macrocod

%    \TeX\ looks for the next token after the first `|-|': the meaning
%    this token is written to |\russian@sh@next| and |\russian@sh@tmp|
%    calle

%    \begin{macrocod
  \futurelet\russian@sh@next\russian@sh@tm
%    \end{macrocod

%    Here are the definitions of hyphen and emdash. First the hyphe

%    \begin{macrocod
\def\russian@sh@hyphen
  \nobreak\-\bbl@allowhyphen
%    \end{macrocod

% \changes{russianb-1.1f}{1998/06/26}
%    Rearranging of cyrillic emdash stuf

%    For the emdash definition, there are the two parameters: we must `ea
%    two last hyphen signs of our emdash\dots
%    \begin{macrocod
\def\russian@sh@emdash#1#2{\cdash-#1#
%    \end{macrocod
%  \begin{macro}{\cdas
%    \dots\ these two parameters are useful for another macr
%    |\cdash
%    \begin{macrocod
%\ifx\cdash\undefined % should be defined earli
\def\cdash#1#2#3{\def\tempx@{#3
\def\tempa@{-}\def\tempb@{~}\def\tempc@{*
 \ifx\tempx@\tempa@\@Acdash\el
  \ifx\tempx@\tempb@\@Bcdash\el
   \ifx\tempx@\tempc@\@Ccdash\el
    \errmessage{Wrong usage of cdash}\fi\fi\f
%    \end{macrocod
%   second parameter (or third for |\cdash|) shows what kind of emda
%   to create in next st
%      \begin{cente
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{
%       |"---| & ordinary (plain) Cyrillic emdash inside tex
%       an unbreakable thinspace will be inserted before only in case
%       a \textit{space} before the dash (it is necessary for dashes aft
%       display maths formulae: there could be lists, enumerations etc
%       started with ``--- where $a$ is ...'' i.e., the dash starts a line
%       (Firstly there were planned rather soft rules for user: he may p
%       a space before the dash or not.  But it is difficult to place th
%       thinspace automatically, i.e., by checking modes because aft
%       display formulae \TeX{} uses horizontal mode.  Maybe there is
%       misunderstanding?  Maybe there is another way?)  After a da
%       a breakable thinspace is always placed;
%   \end{tabula
%   \end{cente
%    \begin{macrocod
% What is more grammatically: .2em or .2\fontdimen6\font
\def\@Acdash{\ifdim\lastskip>\z@\unskip\nobreak\hskip.2em\
  \cyrdash\hskip.2em\ignorespaces
%    \end{macrocod
%      \begin{cente
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{
%       |"--~| & emdash in compound names or surnam
%       (like Mendeleev--Klapeiron); this dash has no space characte
%       around; after the dash some space is add
%       |\exhyphenalty|
%   \end{tabula
%   \end{cente
%    \begin{macrocod
\def\@Bcdash{\leavevmode\ifdim\lastskip>\z@\unskip\
 \nobreak\cyrdash\penalty\exhyphenpenalty\hskip\z@skip\ignorespaces
%    \end{macrocod
%      \begin{cente
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{
%       |"--*| & for denoting direct speech (a space like |\enski
%       must follow the emdash);
%   \end{tabula
%   \end{cente
%    \begin{macrocod
\def\@Ccdash{\leavevmo
 \nobreak\cyrdash\nobreak\hskip.35em\ignorespaces
%\
%    \end{macrocod
%  \end{macr

%  \begin{macro}{\cyrdas
%   Finally the macro for ``body'' of the Cyrillic emdas
%   The |\cyrdash| macro will be defined in case this macro hasn't be
%   defined in a fontenc file.  For T2* fonts, cyrdash will be placed
%   the code of the English emdash thus it uses ligature |---
%    \begin{macrocod
% Is there an IF necessar
\ifx\cyrdash\undefin
  \def\cyrdash{\hbox to.8em{--\hss--
\
%    \end{macrocod
%  \end{macr

% \changes{russianb-1.1f}{1998/06/26}
%    Add macro for thinspace between initial

%    Here a really new macro---to place thinspace between initial
%    This macro used instead of |\,| allows hyphenation in the followi
%    surnam

% \changes{russianb-1.1r}{2004/11/21}{Removed the commanet charact
%    before the next code line, see R366
%    \begin{macrocod
\declare@shorthand{russian}{",}{\nobreak\hskip.2em\ignorespace
%    \end{macrocod

% \changes{russianb-1.1f}{1998/06/26}
%    Add commands for switch on/o
%    doublequote activeness.  Borrowed from german

%  \begin{macro}{\mdqo
%  \begin{macro}{\mdqof
%    All that's left to do now is to  define a couple of comman
%    for |"
%    \begin{macrocod
\def\mdqon{\bbl@activate{"
\def\mdqoff{\bbl@deactivate{"
%    \end{macrocod
%  \end{macr
%  \end{macr

%    The Russian hyphenation patterns can be used with |\lefthyphenmi
%    and |\righthyphenmin| set to~

% \changes{russianb-1.1a}{1995/07/04}{use \cs{russianhyphenmins}
%    store the correct value
% \changes{russianb-1.1m}{2000/09/22}{Now use \cs{providehyphenmins}
%    provide a default valu
%    \begin{macrocod
\providehyphenmins{\CurrentOption}{\tw@\tw
% temporary hac
\ifx\englishhyphenmins\undefin
  \def\englishhyphenmins{\tw@\thr@
\
%    \end{macrocod

%    Now the action |\extrasrussian| has to execute is to make sure that t
%    command |\frenchspacing| is in effect. If this is not the case t
%    execution of |\noextrasrussian| will switch it off agai

%    \begin{macrocod
\addto\extrasrussian{\bbl@frenchspacin
\addto\noextrasrussian{\bbl@nonfrenchspacin
%    \end{macrocod

% \end{macr

%    Next we add a new enumeration style for Russian manuscripts wi
%    Cyrillic letters, and later on we define some math operator names
%    accordance with Russian typesetting tradition

%  \begin{macro}{\Asbu

%    We begin by defining |\Asbuk| which works like |\Alph|, but produc
%    (uppercase) Cyrillic letters intead of Latin ones. The letters Y
%    ISHRT, HRDSN, ERY, and SFTSN are skipped, as usual for su
%    enumeratio

%    \begin{macrocod
\def\Asbuk#1{\expandafter\@Asbuk\csname c@#1\endcsnam
\def\@Asbuk#1{\ifcase#1\
  \CYRA\or\CYRB\or\CYRV\or\CYRG\or\CYRD\or\CYRE\or\CYRZH\
  \CYRZ\or\CYRI\or\CYRK\or\CYRL\or\CYRM\or\CYRN\or\CYRO\
  \CYRP\or\CYRR\or\CYRS\or\CYRT\or\CYRU\or\CYRF\or\CYRH\
  \CYRC\or\CYRCH\or\CYRSH\or\CYRSHCH\or\CYREREV\or\CYRYU\
  \CYRYA\else\@ctrerr\f
%    \end{macrocod

%  \end{macr

%  \begin{macro}{\asbu

%    The macro |\asbuk| is similar to |\alph|; it produces lowerca
%    Russian letter

%    \begin{macrocod
\def\asbuk#1{\expandafter\@asbuk\csname c@#1\endcsnam
\def\@asbuk#1{\ifcase#1\
  \cyra\or\cyrb\or\cyrv\or\cyrg\or\cyrd\or\cyre\or\cyrzh\
  \cyrz\or\cyri\or\cyrk\or\cyrl\or\cyrm\or\cyrn\or\cyro\
  \cyrp\or\cyrr\or\cyrs\or\cyrt\or\cyru\or\cyrf\or\cyrh\
  \cyrc\or\cyrch\or\cyrsh\or\cyrshch\or\cyrerev\or\cyryu\
  \cyrya\else\@ctrerr\f
%    \end{macrocod

%  \end{macr

% Set up default Cyrillic math alphabets. To use Cyrillic letters
% math mode user should load the |textmath| package \emph{befor
% loading fontenc package (or \babel).  Note, that by default Cyrill
% letters are taken from upright font in math mode (unlike Lat
% letters
%    \begin{macrocod
%\RequirePackage{textmat
\@ifundefined{sym\cyrillicencoding letters}{}
\SetSymbolFont{\cyrillicencoding letters}{bold}\cyrillicencodi
  \rmdefault\bfdefault\updefau
\DeclareSymbolFontAlphabet\cyrmathrm{\cyrillicencoding letter
%    \end{macrocod
%    And we need a few commands to be able to switch to different variant
%    \begin{macrocod
\DeclareMathAlphabet\cyrmathbf\cyrillicencodi
  \rmdefault\bfdefault\updefau
\DeclareMathAlphabet\cyrmathsf\cyrillicencodi
  \sfdefault\mddefault\updefau
\DeclareMathAlphabet\cyrmathit\cyrillicencodi
  \rmdefault\mddefault\itdefau
\DeclareMathAlphabet\cyrmathtt\cyrillicencodi
  \ttdefault\mddefault\updefau

\SetMathAlphabet\cyrmathsf{bold}\cyrillicencodi
  \sfdefault\bfdefault\updefau
\SetMathAlphabet\cyrmathit{bold}\cyrillicencodi
  \rmdefault\bfdefault\itdefau

%    \end{macrocod

%    Some math functions in Russian math books have other names: e.g
%    \texttt{sinh} in Russian is written as \texttt{sh} etc. So we define
%    number of new math operator

%    |\sinh
%    \begin{macrocod
\def\sh{\mathop{\operator@font sh}\nolimit
%    \end{macrocod
%    |\cosh
%    \begin{macrocod
\def\ch{\mathop{\operator@font ch}\nolimit
%    \end{macrocod
%    |\tan
%    \begin{macrocod
\def\tg{\mathop{\operator@font tg}\nolimit
%    \end{macrocod
%    |\arctan
%    \begin{macrocod
\def\arctg{\mathop{\operator@font arctg}\nolimit
%    \end{macrocod
%    arcct
%    \begin{macrocod
\def\arcctg{\mathop{\operator@font arcctg}\nolimit
%    \end{macrocod
%    The following macro conflicts with |\th| defined in Latin~1 encodin

%    |\tanh
% \changes{russianb-1.1q}{2004/05/21}{Change definition of \cs{t
%    only for this languag
%    \begin{macrocod
\addto\extrasrussian
  \babel@save{\th
  \let\ltx@th\
  \def\th{\textormath{\ltx@th
                     {\mathop{\operator@font th}\nolimits}

%    \end{macrocod
%    |\cot
%    \begin{macrocod
\def\ctg{\mathop{\operator@font ctg}\nolimit
%    \end{macrocod
%    |\coth
%    \begin{macrocod
\def\cth{\mathop{\operator@font cth}\nolimit
%    \end{macrocod
%    |\csc
%    \begin{macrocod
\def\cosec{\mathop{\operator@font cosec}\nolimit
%    \end{macrocod

%    And finally some other Russian mathematical symbol
%    \begin{macrocod
\def\Prob{\mathop{\kern\z@\mathsf{P}}\nolimit
\def\Variance{\mathop{\kern\z@\mathsf{D}}\nolimit
\def\nod{\mathop{\cyrmathrm{\cyrn.\cyro.\cyrd.}}\nolimit
\def\nok{\mathop{\cyrmathrm{\cyrn.\cyro.\cyrk.}}\nolimit
\def\NOD{\mathop{\cyrmathrm{\CYRN\CYRO\CYRD}}\nolimit
\def\NOK{\mathop{\cyrmathrm{\CYRN\CYRO\CYRK}}\nolimit
\def\Proj{\mathop{\cyrmathrm{\CYRP\cyrr}}\nolimit
%    \end{macrocod

% This is for compatibility with older Russian package
%    \begin{macrocod
\DeclareRobustCommand{\No}
   \ifmmode{\nfss@text{\textnumero}}\else\textnumero\f
%    \end{macrocod

%    The macro |\ldf@finish| takes care of looking for a configuration fil
%    setting the main language to be switched on at |\begin{document}| a
%    resetting the category code of \texttt{@} to its original valu

% \changes{russianb-1.1d}{1996/11/03}{Now use \cs{ldf@finish} to wr
%    u

%    \begin{macrocod
\ldf@finish{russia
%</cod
%    \end{macrocod

% \Fina

%% \CharacterTab
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y
%%   Digits        \0\1\2\3\4\5\6\7\8
%%   Exclamation   \!     Double quote  \"     Hash (number)
%%   Dollar        \$     Percent       \%     Ampersand
%%   Acute accent  \'     Left paren    \(     Right paren
%%   Asterisk      \*     Plus          \+     Comma
%%   Minus         \-     Point         \.     Solidus
%%   Colon         \:     Semicolon     \;     Less than
%%   Equals        \=     Greater than  \>     Question mark
%%   Commercial at \@     Left bracket  \[     Backslash
%%   Right bracket \]     Circumflex    \^     Underscore
%%   Grave accent  \`     Left brace    \{     Vertical bar
%%   Right brace   \}     Tilde         \

\endinp
