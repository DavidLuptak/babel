% \iffalse meta-comme

% Copyright 1989-2005 Johannes L. Braams and any individual autho
% listed elsewhere in this file.  All rights reserve

% This file is part of the Babel syste
% ------------------------------------

% It may be distributed and/or modified under t
% conditions of the LaTeX Project Public License, either version 1
% of this license or (at your option) any later versio
% The latest version of this license is
%   http://www.latex-project.org/lppl.t
% and version 1.3 or later is part of all distributions of LaT
% version 2003/12/01 or late

% This work has the LPPL maintenance status "maintained

% The Current Maintainer of this work is Johannes Braam

% The list of all files belonging to the Babel system
% given in the file `manifest.bbl. See also `legal.bbl' for addition
% informatio

% The list of derived (unpacked) files belonging to the distributi
% and covered by LPPL is defined by the unpacking scripts (wi
% extension .ins) which are part of the distributio
% \
% \CheckSum{153
% \iffal
%    Tell the \LaTeX\ system who we are and write an entry on t
%    transcrip
%<*dt
\ProvidesFile{magyar.dt
%</dt
%<code>\ProvidesLanguage{magya
%\
%\ProvidesFile{magyar.dt
        [2005/03/30 v1.4j Magyar support from the babel syste
%\iffal
%% File `magyar.dt
%% Babel package for LaTeX version
%% Copyright (C) 1989 - 20
%%           by Johannes Braams, TeXni

%% Magyar Language Definition Fi
%% Copyright (C) 1989 - 20
%%           by Johannes Braams, TeXni
%%              \'Arp\'ad B\'IR\
%%              J\'ozsef B\'ERC

% Please report errors to: J.L. Braams babel braams.cistron.

%    This file is part of the babel system, it provides the sour
%    code for the Hungarian language definition file.  A contributi
%    was made by Attila Koppanyi (attila@cernvm.cern.ch
%<*filedrive
\documentclass{ltxdo
\newcommand*\TeXhax{\TeX ha
\newcommand*\babel{\textsf{babel
\newcommand*\langvar{$\langle \it lang \rangle
\newcommand*\note[1]
\newcommand*\Lopt[1]{\textsf{#1
\newcommand*\file[1]{\texttt{#1
\begin{documen
 \DocInput{magyar.dt
\end{documen
%</filedrive
%\
% \GetFileInfo{magyar.dt

% \changes{magyar-1.0a}{1991/07/15}{Renamed \file{babel.sty}
%    \file{babel.com
% \changes{magyar-1.1}{1992/02/16}{Brought up-to-date with babel 3.2
% \changes{magyar-1.1d}{1994/02/08}{Further spelling correction
% \changes{magyar-1.1e}{1994/02/09}{Still more spelling correction
% \changes{magyar-1.2}{1994/02/27}{Update for \LaTeX
% \changes{magyar-1.3c}{1994/06/26}{Removed the use of \cs{filedat
%    and moved identification after the loading of \file{babel.def
% \changes{magyar-1.3g}{1996/07/12}{Replaced \cs{undefined} wi
%    \cs{@undefined} and \cs{empty} with \cs{@empty} for consisten
%    with \LaTe
% \changes{magyar-1.4a}{1998/06/04}{order inverting
%    headings/titles/captions; definite article handling; active ch
%    for special hyphenatio
% \changes{magyar-1.4d}{2001/11/15}{Corrected checksu
% \changes{magyar-1.4j}{2004/11/17}{Added missing comment characte
%    in the redefinitions of \cs{ps@headings} to prevent spurio
%    spaces

%  \section{The Hungarian languag

%    The file option \file{\filename} defines all t
%    language definition macros for the Hungarian languag

%    The \babel{} support for the Hungarian language until fi
%    version 1.3i was essentially changing the English docume
%    elements to Hungarian ones, but because of the differenc
%    between these too languages this was actually unusable (`Part
%    was transferred to `R\'esz I' which is not usable instead of `I
%    r\'esz'). To enhance the typesetting facilities for Hungari
%    the following should be considere
%    \begin{itemiz
%      \item In Hungarian documents there is a period aft
%            the part, section, subsection \mbox{etc.} number

%      \item In the part, chapter, appendix name the numb
%            (or letter) goes before the name, so `Part I' translates
%            `I.\ r\'esz

%       \item The same is true with captio
%             (`Table 2.1' goes to `2.1.\ t\'abl\'azat'

%       \item There is a period after the caption name instead of a colo
%             (`Table 2.1:' goes to `2.1.\ t\'abl\'azat.

%       \item There is a period at the end of the title in a run-in he
%             (when |afterskip<0| in |\@startsection|

%       \item Special hyphenation rules must be appli
%             for the so-called long double consonants (ccs, ssz,\dots

%       \item The opening quotation mark is like the German o
%             (the closing is the same as in English

%       \item In Hungarian figure, table, \mbox{etc
%             referencing a definite article is also incorporate
%             The Hungarian definite articles behave like the Engli
%             indefinite ones (`a/an'). `a' is used for words beginni
%             with a consonant and `az' goes for a vowe
%             Since some numbers begin with a vowel some othe
%             with a consonant some commands should be provided f
%             automatic definite article generatio
%    \end{itemiz

%    Until file version 1.3i\footnote{That file w
%    last revised on 1996/12/23 with a contribution by the ne
%    authors: Attila Kopp\'anyi (\texttt{attila@cernvm.cern.ch}
%    \'Arp\'ad B\'{\i}r\'o (\texttt{JZP1104@HUSZEG11.bitnet}
%    Istv\'an Hamecz (\texttt{hami@ursus.bke.hu)} a
%    Dezs\H{o} Horv\'ath (\texttt{horvath@pisa.infn.it}).
%    the special typesetting rules of the Hungarian langua
%    mentioned above were not taken into consideratio
%    This version (\fileversion)\footnote{It was written by J\'ozs
%    B\'erces (\texttt{jozsi@docs4.mht.bme.hu}) with some help fr
%    Ferenc Wettl (\texttt{wettl@math.bme.hu}) and an idea from Dav
%    Carlisle (\texttt{david@dcarlisle.demon.co.uk}).
%    enables \babel{} to typeset `good-looking' Hungarian text

% \DescribeMacro\ontod
%    The |\ontoday| command works like |\today| b
%    produces a slightly different date format used in expressions su
%    as `on February 10th

% \DescribeMacro\
%    The commands |\Az#1| and |\az#1| write the corre
%    definite article for the argument and the argument itse
%    (separated with a |~|). The star-forms (|\Az*| and |\az*
%    produce the article onl

% \DescribeMacro\A
%    |\Azr#1| and |\azr#1| treat the argument as a label so expa
%    it then write the definite article for |\r@#1|, a non-breakab
%    space then the label expansion. The star-forms do not pri
%    the label expansion. |\Azr(#1| and |\azr(#1| are used f
%    equation referencing with the syntax |\azr(|\textit{label}|)

% \DescribeMacro\Ar
%    There are two aliases |\Aref| and |\aref| for |\Azr| and |\azr
%    respectively. During the preparation of a document it is n
%    known in general, if the code `|a~\ref{|\textit{label}|}|' or the co
%    `|az~\ref{|\textit{label}|}|' is the grammatically correct one. Writi
%    `|\aref{|\textit{label}|}|' instead of the previous ones solves th
%    proble

% \DescribeMacro\A
%    |\Azp#1| and |\azp#1| also treat the argument as a label b
%    use the label's page for definite article determinatio
%    There are star-forms giving only the definite article witho
%    the page number

% \DescribeMacro\Apager
%    There are aliases |\Apageref| and |\apageref| for |\Azp| a
%    |\azp|, respectively. The code |\apageref{|\textit{label}|}
%    is equivalent either to |a~\pageref{|\textit{label}|}| o
%    to |az~\pageref{|\textit{label}|}

% \DescribeMacro\A
%    |\Azc| and |\azc| work like the |\cite| command b
%    (of course) they insert the definite article. There can
%    several comma separated cite labels and in that case t
%    definite article is given for the first on
%    They accept |\cite|'s optional argumen
%    There are star-forms giving the definite article onl

% \DescribeMacro\Aci
%    There are aliases |\Acite| and |\acite| f
%    |\Azc| and |\azc|, respectively

%    For this language the character |`| is made activ
%    Table~\ref{tab:hun-actives} shows the shortcut
%    The main reason for the activation of the |`| charact
%    is to handle the special hyphenation of the long doub
%    consonant
%    \begin{tabl
%      \begin{cente
%        \begin{tabular}{lp{45mm}p{47mm
%          shortcut & explanation & example
%          \hli
%          |``|        &  same as |\glqq| in \babel{},
%                         |\quotedblbase| in T
%                         (opening quotation mark, like ,,
%                        & |``id\'ezet''|$\longrightarrow$,,id\'ezet'{}'
%          |`c|, |`C|  &  ccs is hyphenated as cs-
%                        & |lo`ccsan|$\longrightarrow$locs-csan
%          |`d|, |`D|  &  ddz is hyphenated as dz-
%                        & |e`ddz\"unk|$\longrightarrow$edz-dz\"unk
%          |`g|, |`G|  &  ggy is hyphenated as gy-
%                        & |po`ggy\'asz|$\longrightarrow$pogy-gy\'asz
%          |`l|, |`L|  &  lly is hyphenated as ly-
%                        & |Kod\'a`llyal|$\longrightarrow$Kod\'aly-lyal
%          |`n|, |`N|  &  nny is hyphenated as ny-
%                        & |me`nnyei|$\longrightarrow$meny-nyei
%          |`s|, |`S|  &  ssz is hyphenated as sz-
%                        & |vi`ssza|$\longrightarrow$visz-sza
%          |`t|, |`T|  &  tty is hyphenated as ty-
%                        & |po`ttyan|$\longrightarrow$poty-tyan
%          |`z|, |`Z|  &  zzs is hyphenated as zs-
%                        & |ri`zzsel|$\longrightarrow$rizs-zsel
%        \end{tabula
%        \caption{The shortcuts defined in \file{magyar.ldf
%        \label{tab:hun-active
%      \end{cente
%    \end{tabl


% \StopEventually

%    The macro |\LdfInit| takes care of preventing that this file
%    loaded more than once, checking the category code of t
%    \texttt{@} sign, et
% \changes{magyar-1.3h}{1996/11/03}{Now use \cs{LdfInit} to perfo
%    initial check
%    \begin{macrocod
%<*cod
\LdfInit{magyar}{caption\CurrentOptio
%    \end{macrocod

%    When this file is read as an option, i.e. by the |\usepackag
%    command, \texttt{magyar} will be an `unknown' language in whi
%    case we have to make it known.  So we check for the existence
%    |\l@magyar| or |\l@hungarian| to see whether we have to
%    something her

% \changes{magyar-1.0b}{1991/10/29}{Removed use of \cs{@ifundefined
% \changes{magyar-1.1}{1992/02/16}{Added a warning when no hyphenati
%    patterns were loaded
% \changes{magyar-1.3c}{1994/06/26}{Now use \cs{@nopatterns}
%    produce the warnin
% \changes{magyar-1.4d}{2003/09/18}{The \cs{else} clause got outsi
%    of the \cs{if} statement, breaking the Hungarian suppor
% \changes{magyar-1.4g}{2003/10/07}{Further change to make it wo
%    when neither \cs{l@magyar} nor \cs{l@hugarian} are define
%    \begin{macrocod
\ifx\l@magyar\@undefin
  \ifx\l@hungarian\@undefin
    \@nopatterns{Magya
    \adddialect\l@magya
  \el
    \let\l@magyar\l@hungari
  \
\
%    \end{macrocod
%    The statement above makes sure that |\l@magyar| is alwa
%    defined; if |\l@hungarian| is still undefined we make it equal
%    |\l@magyar|
%    \begin{macrocod
\ifx\l@hungarian\@undefin
  \let\l@hungarian\l@magy
\
%    \end{macrocod

%    The next step consists of defining commands to switch to (a
%    from) the Hungarian languag

% \begin{macro}{\captionsmagya
%    The macro |\captionsmagyar| defines all strings used in the fo
%    standard document classes provided with \LaTe
% \changes{magyar-1.1}{1992/02/16}{Added \cs{seename}, \cs{alsonam
%    and \cs{prefacename
% \changes{magyar-1.1}{1993/07/15}{\cs{headpagename} should
%    \cs{pagename
% \changes{magyar-1.1c}{1994/01/05}{Added translations, fixed typo
% \changes{magyar-1.3e}{1995/07/04}{Added \cs{proofname} f
%    AMS-\LaTe
% \changes{magyar-1.3f}{1996/04/18}{translated Proof and replaced so
%    translation
% \changes{magyar-1.4a}{1998/06/04}{the initial letter of fejeze
%    t\'abl\'azat, r\'esz, l\'asd changed to lowercas
%    \begin{macrocod
\@namedef{captions\CurrentOption}
  \def\prefacename{El\H osz\'o
%    \end{macrocod
%    For the list of references at the end of an article we have
%    choice between two words, `Referenci\'ak' (a Hungarian version
%    the English word) and `Hivatkoz\'asok'. The latter seems
%    be in more widespread us
%    \begin{macrocod
  \def\refname{Hivatkoz\'asok
%    \end{macrocod
%    If you have a document with a summary instead of an abstract y
%    might want to replace the word `Kivonat' wi
%    `\"Osszefoglal\'o
%    \begin{macrocod
  \def\abstractname{Kivonat
%    \end{macrocod
%    The Hungarian version of `Bibliography' is `Bibliogr\'afia', b
%    a more natural word to use is `Irodalomjegyz\'ek
%    \begin{macrocod
  \def\bibname{Irodalomjegyz\'ek
  \def\chaptername{fejezet
  \def\appendixname{F\"uggel\'ek
  \def\contentsname{Tartalomjegyz\'ek
  \def\listfigurename{\'Abr\'ak jegyz\'eke
  \def\listtablename{T\'abl\'azatok jegyz\'eke
  \def\indexname{T\'argymutat\'o
  \def\figurename{\'abra
  \def\tablename{t\'abl\'azat
  \def\partname{r\'esz
  \def\enclname{Mell\'eklet
  \def\ccname{K\"orlev\'el--c\'\i mzettek
  \def\headtoname{C\'\i mzett
  \def\pagename{oldal
  \def\seename{l\'asd
  \def\alsoname{l\'asd m\'eg
%    \end{macrocod
%    Besides the Hungarian word for Proof, `Bizony\'\i t\'as' we c
%    also name Corollary (K\"ovetkezm\'eny), Theorem (T\'etel) a
%    Lemma (Lemma
% \changes{magyar-1.4b}{2000/09/20}{Added \cs{glossaryname
% \changes{magyar-1.4h}{2003/11/20}{Inserted translation for Glossary
%    \begin{macrocod
  \def\proofname{Bizony\'\i t\'as
  \def\glossaryname{Sz\'ojegyz\'ek

%    \end{macrocod
% \end{macr

% \begin{macro}{\datemagya
%    The macro |\datemagyar| redefines the command |\today| to produ
%    Hungarian date
% \changes{magyar-1.1d}{1994/02/08}{Rewritten to produce the corre
%    date forma
% \changes{magyar-1.4a}{1998/06/10}{Use \cs{number}\cs{day} instead
%    \cs{ifcase} construc
%    \begin{macrocod
\@namedef{date\CurrentOption}
  \def\today
    \number\year.\nobreakspace\ifcase\month\
    janu\'ar\or febru\'ar\or m\'arcius\
    \'aprilis\or m\'ajus\or j\'unius\
    j\'ulius\or augusztus\or szeptember\
    okt\'ober\or november\or december\
    \space\number\day.
%    \end{macrocod
% \end{macr

% \begin{macro}{\ondatemagya
%    The macro |\ondatemagyar| produces Hungarian dates which have t
%    meaning `\emph{on this day}'.  It does not redefine the comma
%    |\today
% \changes{magyar-1.1c}{1994/01/05}{The date number should not
%    followed by a dot
% \changes{magyar-1.1d}{1994/02/08}{Renamed from \cs{datemagyar
%    nolonger redefines \cs{today}
%    \begin{macrocod
\@namedef{ondate\CurrentOption}
  \number\year.\nobreakspace\ifcase\month\
  janu\'ar\or febru\'ar\or m\'arcius\
  \'aprilis\or m\'ajus\or j\'unius\
  j\'ulius\or augusztus\or szeptember\
  okt\'ober\or november\or december\
    \space\ifcase\day\
    1-j\'en\or  2-\'an\or  3-\'an\or  4-\'en\or  5-\'en\
    6-\'an\or  7-\'en\or  8-\'an\or  9-\'en\or 10-\'en\
   11-\'en\or 12-\'en\or 13-\'an\or 14-\'en\or 15-\'en\
   16-\'an\or 17-\'en\or 18-\'an\or 19-\'en\or 20-\'an\
   21-\'en\or 22-\'en\or 23-\'an\or 24-\'en\or 25-\'en\
   26-\'an\or 27-\'en\or 28-\'an\or 29-\'en\or 30-\'an\
   31-\'en\f
%    \end{macrocod
% \end{macr

% \begin{macro}{\extrasmagya
% \begin{macro}{\noextrasmagya
%    The macro |\extrasmagyar| will perform all the extra definitio
%    needed for the Hungarian language. The macro |\noextrasmagyar|
%    used to cancel the actions of |\extrasmagyar

%    \begin{macrocod
 \@namedef{extras\CurrentOption}
   \expandafter\let\expandafter\ontod
     \csname ondate\CurrentOption\endcsnam
\@namedef{noextras\CurrentOption}{\let\ontoday\@undefine
%    \end{macrocod
% \end{macr
% \end{macr

%    Now we redefine some commands included into \file{latex.ltx
%    The original form of a command is always saved wi
%    |\babel@save| and the changes are added to |\extrasmagyar
%    This ensures that the Hungarian version of a macro is ali
%    \emph{only} if the Hungarian language is activ

% \begin{macro}{\fnum@figur
% \begin{macro}{\fnum@tabl
%    In figure and table captions the order of the figure/tab
%    number and |\figurename|\hspace{0pt}/|\tablename| must be change
%    To achieve this |\fnum@figure| and |\fnum@table| a
%    redefined and added to |\extrasmagyar
% \changes{magyar-1.4i}{2004/02/20}{Use \cs{nobreakspace} instead
%    tild
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\fnum@figu
  \def\fnum@figure{\thefigure.\nobreakspace\figurename
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\fnum@tab
  \def\fnum@table{\thetable.\nobreakspace\tablename
%    \end{macrocod
% \end{macr
% \end{macr

% \begin{macro}{\@makecaptio
%    The colon in a figure/table caption must be replaced by a d
%    by redefining |\@makecaption
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@makecapti
  \def\@makecaption#1#2
    \vskip\abovecaptionsk
    \sbox\@tempboxa{#1. #2
    \ifdim \wd\@tempboxa >\hsi
      {#1. #2\csname par\endcsnam
    \el
      \global \@minipagefal
      \hb@xt@\hsize{\hfil\box\@tempboxa\hfil
    \
    \vskip\belowcaptionskip
%    \end{macrocod
% \end{macr

% \begin{macro}{\@captio
%    There should be a dot after the figure/table number in lof/lo
%    so |\@caption| is redefine
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@capti
  \long\def\@caption#1[#2]#3
    \csname par\endcsna
    \addcontentsline{\csname ext@#1\endcsname}{#1
      {\protect\numberline{\csname the#1\endcsname.}{\ignorespaces #2}
    \begingro
      \@parboxresto
      \if@minipa
        \@setminipa
      \
      \normalsi
      \@makecaption{\csname fnum@#1\endcsname
          {\ignorespaces #3}\csname par\endcsna
    \endgroup
%    \end{macrocod
% \end{macr

% \begin{macro}{\@seccntforma
%    In order to have a dot after the section numb
%    |\@seccntformat| is redefine
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@seccntform
  \def\@seccntformat#1{\csname the#1\endcsname.\quad
%    \end{macrocod
% \end{macr

% \begin{macro}{\@sec
%    Alas, |\@sect| must also be redefined to have that dot in toc to
%    On the other hand, we include a dot after a run-in hea
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@se
  \def\@sect#1#2#3#4#5#6[#7]#8
    \ifnum #2>\c@secnumdep
      \let\@svsec\@emp
    \el
      \refstepcounter{#1
      \protected@edef\@svsec{\@seccntformat{#1}\relax
    \
    \@tempskipa #5\rel
    \ifdim \@tempskipa>\
      \begingro
        #6
          \@hangfrom{\hskip #3\relax\@svsec
            \interlinepenalty \@M #8\@@par
      \endgro
      \csname #1mark\endcsname{#7
      \addcontentsline{toc}{#1}
        \ifnum #2>\c@secnumdepth \el
          \protect\numberline{\csname the#1\endcsname.
        \
        #7
    \el
      \def\@svsechd
        #6{\hskip #3\rel
        \@svsec #8.
        \csname #1mark\endcsname{#7
        \addcontentsline{toc}{#1}
          \ifnum #2>\c@secnumdepth \el
            \protect\numberline{\csname the#1\endcsname.
          \
          #7}
    \
    \@xsect{#5}
%    \end{macrocod
% \end{macr

% \begin{macro}{\@ssec
%    In order to have that dot after a run-in head when the star form of t
%    sectioning commands is used, we have to redefine |\@ssect
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@sse
  \def\@ssect#1#2#3#4#5
    \@tempskipa #3\rel
    \ifdim \@tempskipa>\
      \begingro
        #4
          \@hangfrom{\hskip #1
            \interlinepenalty \@M #5\@@par
      \endgro
    \el
      \def\@svsechd{#4{\hskip #1\relax #5.}
    \
    \@xsect{#3}
%    \end{macrocod
% \end{macr

% \begin{macro}{\@begintheore
% \begin{macro}{\@opargbegintheore
%    Order changing and dot insertion in theorem by redefini
%    |\@begintheorem| and |\@opargbegintheorem
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\@begintheor
  \def\@begintheorem#1#2{\trivli
    \item[\hskip \labelsep{\bfseries #2.\ #1.}]\itshape
  \babel@save\@opargbegintheor
  \def\@opargbegintheorem#1#2#3{\trivli
    \item[\hskip \labelsep{\bfseries #2.\ #1\ (#3).}]\itshape
%    \end{macrocod
% \end{macr
% \end{macr

%    The next step is to redefine some macros included into t
%    class files. It is determined which class file is load
%    then the original form of the macro is saved and the chang
%    are added to |\extrasmagyar

%    First we check if the \file{book.cls} is loade
%    \begin{macrocod
\@ifclassloaded{book}
%    \end{macrocod
% \begin{macro}{\ps@heading
%    The look of the headings is changed: we have to insert some do
%    and change the order of chapter number and |\chaptername
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\ps@heading
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \if@twosi
      \def\ps@headings
          \let\@oddfoot\@empty\let\@evenfoot\@emp
          \def\@evenhead{\thepage\hfil\slshape\leftmark
          \def\@oddhead{{\slshape\rightmark}\hfil\thepage
          \let\@mkboth\markbo
        \def\chaptermark##1
          \markboth {\MakeUppercase
            \ifnum \c@secnumdepth >\m@
              \if@mainmatt
                \thechapter. \@chapapp. \
              \
            \
            ##1}}{}
        \def\sectionmark##1
          \markright {\MakeUppercase
            \ifnum \c@secnumdepth >\
              \thesection. \
            \
            ##1}}}
    \el
      \def\ps@headings
        \let\@oddfoot\@emp
        \def\@oddhead{{\slshape\rightmark}\hfil\thepage
        \let\@mkboth\markbo
        \def\chaptermark##1
          \markright {\MakeUppercase
            \ifnum \c@secnumdepth >\m@
              \if@mainmatt
                \thechapter. \@chapapp. \
              \
            \
            ##1}}}
    \f
%    \end{macrocod
% \end{macr
% \begin{macro}{\@par
%    At the beginning of a part we need \mbox{eg.} `I.\ r\'es
%    instead of `Part I' (in toc too
%    To achieve this |\@part| is redefine
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\@pa
    \def\@part[#1]#2
        \ifnum \c@secnumdepth >-2\rel
          \refstepcounter{part
          \addcontentsline{toc}{part}{\thepart.\hspace{1em}#1
        \el
          \addcontentsline{toc}{part}{#1
        \
        \markboth{}{
        {\centeri
         \interlinepenalty \
         \normalfo
         \ifnum \c@secnumdepth >-2\rel
           \huge\bfseries \thepart.\nobreakspace\partna
           \csname par\endcsna
           \vskip 20\
         \
         \Huge \bfseries #2\csname par\endcsname
        \@endpart
%    \end{macrocod
% \end{macr
% \begin{macro}{\@chapte
%    The same changes are made to chapte
%    First the screen typeout and the toc are changed
%    redefining |\@chapter
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\@chapt
    \def\@chapter[#1]#2{\ifnum \c@secnumdepth >\m@
                           \if@mainmatt
                             \refstepcounter{chapter
                             \typeout{\thechapter.\space\@chapapp.
                             \addcontentsline{toc}{chapter
                                       {\protect\numberline{\thechapter.}#1
                           \el
                             \addcontentsline{toc}{chapter}{#1
                           \
                        \el
                          \addcontentsline{toc}{chapter}{#1
                        \
                        \chaptermark{#1
                        \addtocontents{lof}{\protect\addvspace{10\p@}
                        \addtocontents{lot}{\protect\addvspace{10\p@}
                        \if@twocolu
                          \@topnewpage[\@makechapterhead{#2}
                        \el
                          \@makechapterhead{#2
                          \@afterheadi
                        \fi
%    \end{macrocod
% \end{macr
% \begin{macro}{\@makechapterhea
%    Then the look of the chapter-start is modified by redefini
%    |\@makechapterhead
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\@makechapterhe
    \def\@makechapterhead#1
      \vspace*{50\p@
      {\parindent \z@ \raggedright \normalfo
        \ifnum \c@secnumdepth >\m@
          \if@mainmatt
            \huge\bfseries \thechapter.\nobreakspace\@chapapp
            \csname par\endcsname\nobre
            \vskip 20\
          \
        \
        \interlinepenalty\
        \Huge \bfseries #1\csname par\endcsname\nobre
        \vskip 40\
      }}
%    \end{macrocod
% \end{macr
%    This the end of the book class modificatio
%    \begin{macrocod
}
%    \end{macrocod

%    Now we check if \file{report.cls} is loade
%    \begin{macrocod
\@ifclassloaded{report}
%    \end{macrocod
% \begin{macro}{\ps@heading
%    First the headings are modified just in case of the book clas
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\ps@heading
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \if@twosi
      \def\ps@headings
          \let\@oddfoot\@empty\let\@evenfoot\@emp
          \def\@evenhead{\thepage\hfil\slshape\leftmark
          \def\@oddhead{{\slshape\rightmark}\hfil\thepage
          \let\@mkboth\markbo
        \def\chaptermark##1
          \markboth {\MakeUppercase
            \ifnum \c@secnumdepth >\m@
                \thechapter. \@chapapp. \
            \
            ##1}}{}
        \def\sectionmark##1
          \markright {\MakeUppercase
            \ifnum \c@secnumdepth >\
              \thesection. \
            \
            ##1}}}
    \el
      \def\ps@headings
        \let\@oddfoot\@emp
        \def\@oddhead{{\slshape\rightmark}\hfil\thepage
        \let\@mkboth\markbo
        \def\chaptermark##1
          \markright {\MakeUppercase
            \ifnum \c@secnumdepth >\m@
                \thechapter. \@chapapp. \
            \
            ##1}}}
    \f
%    \end{macrocod
% \end{macr
% \begin{macro}{\@chapte
%    Chapter-start modification with |\@chapte
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\@chapt
    \def\@chapter[#1]#2{\ifnum \c@secnumdepth >\m@
                             \refstepcounter{chapter
                             \typeout{\thechapter.\space\@chapapp.
                             \addcontentsline{toc}{chapter
                                       {\protect\numberline{\thechapter.}#1
                        \el
                          \addcontentsline{toc}{chapter}{#1
                        \
                        \chaptermark{#1
                        \addtocontents{lof}{\protect\addvspace{10\p@}
                        \addtocontents{lot}{\protect\addvspace{10\p@}
                        \if@twocolu
                          \@topnewpage[\@makechapterhead{#2}
                        \el
                          \@makechapterhead{#2
                          \@afterheadi
                        \fi
%    \end{macrocod
% \end{macr
% \begin{macro}{\@makechapterhea
%    and |\@makechapterhead
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\@makechapterhe
    \def\@makechapterhead#1
      \vspace*{50\p@
      {\parindent \z@ \raggedright \normalfo
        \ifnum \c@secnumdepth >\m@
            \huge\bfseries \thechapter.\nobreakspace\@chapapp
            \csname par\endcsname\nobre
            \vskip 20\
        \
        \interlinepenalty\
        \Huge \bfseries #1\csname par\endcsname\nobre
        \vskip 40\
      }}
%    \end{macrocod
% \end{macr
%    End of report class modificatio
%    \begin{macrocod
}
%    \end{macrocod

%    Checking if \file{article.cls} is loade
%    \begin{macrocod
\@ifclassloaded{article}
%    \end{macrocod
% \begin{macro}{\ps@heading
%    Changing headings by redefining |\ps@headings
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\ps@heading
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \if@twosi
      \def\ps@headings
          \let\@oddfoot\@empty\let\@evenfoot\@emp
          \def\@evenhead{\thepage\hfil\slshape\leftmark
          \def\@oddhead{{\slshape\rightmark}\hfil\thepage
          \let\@mkboth\markbo
        \def\sectionmark##1
          \markboth {\MakeUppercase
            \ifnum \c@secnumdepth >\
              \thesection.\qu
            \
            ##1}}{}
        \def\subsectionmark##1
          \markright
            \ifnum \c@secnumdepth >\@
              \thesubsection.\qu
            \
            ##1}}
    \el
      \def\ps@headings
        \let\@oddfoot\@emp
        \def\@oddhead{{\slshape\rightmark}\hfil\thepage
        \let\@mkboth\markbo
        \def\sectionmark##1
          \markright {\MakeUppercase
            \ifnum \c@secnumdepth >\m@
              \thesection.\qu
            \
            ##1}}}
    \fi
%    \end{macrocod
% \end{macr
%    No more necessary changes specific to the article clas
%    \begin{macrocod
}
%    \end{macrocod

%    And now this is the turn of \file{letter.cls
%    \begin{macrocod
\@ifclassloaded{letter}
%    \end{macrocod
% \begin{macro}{\ps@heading
%    In the headings the page number must be followed by a d
%    and then |\pagename
%    \begin{macrocod
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \babel@save\ps@heading
  \expandafter\addto\csname extras\CurrentOption\endcsname
    \if@twosi
      \def\ps@headings
          \let\@oddfoot\@empty\let\@evenfoot\@emp
          \def\@oddhead{\slshape\headtoname{:} \ignorespaces\tona
                        \hfil \@da
                        \hfil \thepage.\nobreakspace\pagename
          \let\@evenhead\@oddhea
    \el
      \def\ps@headings
          \let\@oddfoot\@emp
          \def\@oddhead{\slshape\headtoname{:} \ignorespaces\tona
                        \hfil \@da
                        \hfil \thepage.\nobreakspace\pagename
    \fi
%    \end{macrocod
% \end{macr
%    End of letter clas
%    \begin{macrocod
}
%    \end{macrocod

%    After making the changes to the \LaTeX
%    macros we define some new ones to handle the probl
%    with definite article
% \begin{macro}{\a
%    |\az| is a user-level command which decides if the ne
%    character is a star. |\@az| is called for |\az*| a
%    |\az@| for |\az
%    \begin{macrocod
\def\az{a\@ifstar{\@az}{\az@
%    \end{macrocod
% \end{macr
% \begin{macro}{\A
%    |\Az| is used at the beginning of a sentence. Otherwise it behav
%    the same as |\az
%    \begin{macrocod
\def\Az{A\@ifstar{\@az}{\az@
%    \end{macrocod
% \end{macr
% \begin{macro}{\az
%    |\az@| is called if there is no star after |\az| or |\Az
%    It calls |\@az| and writes |#1| separating with a non-breakab
%    spac
%    \begin{macrocod
\def\az@#1{\@az{#1}\nobreakspace#
%    \end{macrocod
% \end{macr
% \begin{macro}{\@a
%    This macro calls |\hun@tempadef| to remove the accents fr
%    the argument then calls |\@@az| that determines if a `
%    should be written after a/A (written by |\az|/|\Az|
%    \begin{macrocod
\def\@az#1
  \hun@tempadef{relax}{relax}{#1
  \edef\@tempb{\noexpand\@@az\@tempa\hbox!
  \@temp
%    \end{macrocod
% \end{macr

% \begin{macro}{\hun@tempade
%    The macro |\hun@tempadef| has three task
%    \begin{itemiz
%      \item Accent removal. Accented letters confu
%            |\@@az|, the main definite article determinat
%            macro, so they must be changed to their non-accent
%            counterparts. Special letters must also be change
%            \mbox{eg.} \oe$\,\rightarrow\,$
%      \item Labels must be expande
%      \item To handle Roman numerals correctly, commands starti
%            with |\hun@| are defined for labels containing Rom
%            numbers with the Roman numera
%            replaced by their Arabic representatio
%            This macro can check if there is a |\hun@| comman
%    \end{itemiz
%    There are three argument
%    \begin{enumerat
%      \item The primary command that should be expanded if it exist
%            This is usually the |\hun@| command for a labe
%      \item The secondary command which is used if the first o
%            is |\relax|. This is usually the original \LaTeX
%            command for a labe
%      \item This is used if the first two is |\relax|. For this o
%            no expansion is carried out but the accents are sti
%            removed and special letters are change
%    \end{enumerat
% \changes{magyar-1.4f}{2003/09/29}{Add
%    \cs{def}\cs{safe@activesfalse{}} as a fix for PR3426
%    \begin{macrocod
\def\hun@tempadef#1#2#3
  \begingro
    \def\@safe@activesfalse{
    \def\setbox ##1{}% to get rid of accents and special lette
    \def\hbox ##1{
    \def\accent ##1 ##2{##2
    \def\add@accent ##1##2{##2
    \def\@text@composite@x ##1##2{##2
    \def\i{i}\def\j{j
    \def\ae{a}\def\AE{A}\def\oe{o}\def\OE{O
    \def\ss{s}\def\L{L
    \def\d{}\def\b{}\def\c{}\def\t{
    \expandafter\ifx\csname #1\endcsname\rel
      \expandafter\ifx\csname #2\endcsname\rel
        \xdef\@tempa{#3
      \el
        \xdef\@tempa{\csname #2\endcsname
      \
    \el
      \xdef\@tempa{\csname #1\endcsname
    \
  \endgrou
%    \end{macrocod
% \end{macr

%    The following macros are used to determine the defini
%    article for a label's expansio
% \begin{macro}{\are
%    |\aref| is an alias for |\azr
%    \begin{macrocod
\def\aref{\az
%    \end{macrocod
% \end{macr
% \begin{macro}{\Are
%    |\Aref| is an alias for |\Azr
%    \begin{macrocod
\def\Aref{\Az
%    \end{macrocod
% \end{macr
% \begin{macro}{\az
%    |\azr| calls |\@azr| if the next character is a sta
%    otherwise it calls |\azr@
%    \begin{macrocod
\def\azr{a\@ifstar{\@azr}{\azr@
%    \end{macrocod
% \end{macr
% \begin{macro}{\Az
%    |\Azr| is the same as |\azr| except that it writes `
%    instead of `a
%    \begin{macrocod
\def\Azr{A\@ifstar{\@azr}{\azr@
%    \end{macrocod
% \end{macr
% \begin{macro}{\azr
%    |\azr@| decides if the next character is |(| a
%    in that case it calls |\azr@@@| which writes an extra |
%    for equation referencing. Otherwise |\azr@@| is calle
%    \begin{macrocod
\def\azr@{\@ifnextchar ({\azr@@@}{\azr@@
%    \end{macrocod
% \end{macr
% \begin{macro}{\azr@
%    Calls |\@azr| then writes the label's expansion preceded
%    a non-breakable spac
%    \begin{macrocod
\def\azr@@#1{\@azr{#1}\nobreakspace\ref{#1
%    \end{macrocod
% \end{macr
% \begin{macro}{\azr@@
%    Same as |\azr@@| but inserts a |(| between t
%    non-breakable space and the label expansio
%    \begin{macrocod
\def\azr@@@(#1{\@azr{#1}\nobreakspace(\ref{#1
%    \end{macrocod
% \end{macr
% \begin{macro}{\@az
%    Calls |\hun@tempadef| to choose between the label
%    |\hun@| or original \LaTeX{} command and to expa
%    it with accent removal and special letter substitutio
%    Then calls |\@@az|, the core macro of definite article handlin
%    \begin{macrocod
\def\@azr#1
  \hun@tempadef{hun@r@#1}{r@#1}{
  \ifx\@tempa\emp
  \el
    \edef\@tempb{\noexpand\@@az\expandafter\@firstoftwo\@tempa\hbox!
    \@tem
  \

%    \end{macrocod
% \end{macr

%    The following commands are used to generate the definite artic
%    for the page number of a labe
% \begin{macro}{\apagere
%    |\apageref| is an alias for |\azp
%    \begin{macrocod
\def\apageref{\az
%    \end{macrocod
% \end{macr
% \begin{macro}{\Apagere
%    |\Apageref| is an alias for |\Azp
%    \begin{macrocod
\def\Apageref{\Az
%    \end{macrocod
% \end{macr
% \begin{macro}{\az
%    Checks if the next character is |*| and cal
%    |\@azp| or |\azp@
%    \begin{macrocod
\def\azp{a\@ifstar{\@azp}{\azp@
%    \end{macrocod
% \end{macr
% \begin{macro}{\Az
%    Same as |\azp| except that it writes `A' instead of `a
%    \begin{macrocod
\def\Azp{A\@ifstar{\@azp}{\azp@
%    \end{macrocod
% \end{macr
% \begin{macro}{\azp
%    Calls |\@azp| then writes the label's page preceded
%    a non-breakable spac
%    \begin{macrocod
\def\azp@#1{\@azp{#1}\nobreakspace\pageref{#1
%    \end{macrocod
% \end{macr
% \begin{macro}{\@az
%    Calls |\hun@tempadef| then takes the label's page and pass
%    it to |\@@az
%    \begin{macrocod
\def\@azp#1
  \hun@tempadef{hun@r@#1}{r@#1}{
  \ifx\@tempa\emp
  \el
    \edef\@tempb{\noexpand\@@az\expandafter\@secondoftwo\@tempa\hbox!
    \@tem
  \

%    \end{macrocod
% \end{macr

%    The following macros are used to give the definite article
%    citation
% \begin{macro}{\acit
%    This is an alias for |\azc
%    \begin{macrocod
\def\acite{\az
%    \end{macrocod
% \end{macr
% \begin{macro}{\Acit
%    This is an alias for |\Azc
%    \begin{macrocod
\def\Acite{\Az
%    \end{macrocod
% \end{macr
% \begin{macro}{\az
%    Checks if the next character is a star a
%    calls |\@azc| or |\azc@
%    \begin{macrocod
\def\azc{a\@ifstar{\@azc}{\azc@
%    \end{macrocod
% \end{macr
% \begin{macro}{\Az
%    Same as |\azc| but used at the beginning of sentence
%    \begin{macrocod
\def\Azc{A\@ifstar{\@azc}{\azc@
%    \end{macrocod
% \end{macr
% \begin{macro}{\azc
%    If there is no star we accept an optional argumen
%    just like the |\cite| comman
%    \begin{macrocod
\def\azc@{\@ifnextchar [{\azc@@}{\azc@@[]
%    \end{macrocod
% \end{macr
% \begin{macro}{\azc@
%    First calls |\@azc| then |\cite
%    \begin{macrocod
\def\azc@@[#1]#2
  \@azc{#2}\nobreakspace\def\@tempa{#1
    \ifx\@tempa\@empty\cite{#2}\else\cite[#1]{#2}\f
%    \end{macrocod
% \end{macr
% \begin{macro}{\@az
%    This is an auxiliary macro to get the first cite lab
%    from a comma-separated lis
%    \begin{macrocod
\def\@azc#1{\@@azc#1,\hbox
%    \end{macrocod
% \end{macr
% \begin{macro}{\@@az
%    This one uses only the first argument, that is the fir
%    element of the comma-separated list of cite label
%    Calls |\hun@tempadef| to expand the cite label with acce
%    removal and special letter replacemen
%    Then |\@@az|, the core macro, is calle
%    \begin{macrocod
\def\@@azc#1,#2\hbox#3!
  \hun@tempadef{hun@b@#1}{b@#1}{
  \ifx\@tempa\emp
  \el
    \edef\@tempb{\noexpand\@@az\@tempa\hbox!
    \@tem
  \f
%    \end{macrocod
% \end{macr

% \begin{macro}{\hun@number@lehgt
%    This macro is used to count the number of digits in i
%    argument until a non-digit character is found
%    the end of the argument is reache
%    It must be called
%    |\hun@number@lehgth|\textit{arg}|\hbox\hbox!| a
%    |\count@| must be zeroe
%    It is called by |\@@az
%    \begin{macrocod
\def\hun@number@lehgth#1#2\hbox#3!
  \ifcat\noexpand#1
    \ifnum\expandafter`\csname#1\endcsname>
      \ifnum\expandafter`\csname#1\endcsname<
        \advance\count@ by \@
        \hun@number@lehgth#2\hbox\hbox!\fi\fi\f
%    \end{macrocod
% \end{macr

% \begin{macro}{\hun@alph@lehgt
%    This is used to count the number of letters until
%    non-letter is found or the end of the argument is reache
%    It must be called
%    |\hun@alph@lehgth|\textit{arg}|\hbox\hbox!| a
%    |\count@| must be set to zer
%    It is called by |\@@az@string
%    \begin{macrocod
\def\hun@alph@lehgth#1#2\hbox#3!
  \ifcat\noexpand#1
    \advance\count@ by \@
    \hun@alph@lehgth#2\hbox\hbox!\f
%    \end{macrocod
% \end{macr

% \begin{macro}{\@@az@strin
%    This macro is called by |\@@az| if the argument begi
%    with a lette
%    The task of |\@@az@string| is to determine if the argume
%    starts with a vowel and in that case |\let\@tempa\@tempb
%    After checking if the first letter is A, E, I, O, or
%    |\hun@alph@lehgth| is call
%    to determine the length of the argument. If it gives
%    (that is the argument is a single-letter one or the seco
%    character is not letter) then the letters L, M, N, R, S, X, and
%    are also considered as a vowel since their Hungarian pronounc
%    name starts with a vowe
%    \begin{macrocod
\def\@@az@string#1#2
  \ifx#1
    \let\@tempa\@tem
  \else\ifx#1
    \let\@tempa\@tem
  \else\ifx#1
    \let\@tempa\@tem
  \else\ifx#1
    \let\@tempa\@tem
  \else\ifx#1
    \let\@tempa\@tem
  \fi\fi\fi\fi\
  \ifx\@tempa\@tem
  \el
    \count@\
    \hun@alph@lehgth#1#2\hbox\hbox
    \ifnum\count@=\@
      \ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \else\ifx#1
        \let\@tempa\@tem
      \fi\fi\fi\fi\fi\fi\fi\
    \
  \f
%    \end{macrocod
% \end{macr

% \begin{macro}{\@@a
%    This macro is the core of definite article handlin
%    It determines if the argument needs `az' or `a' defini
%    article by setting |\@tempa| to `z' or |\@empty
%    It sets |\@tempa| to `z'
%    \begin{itemiz
%      \item the first character of the argument is 5;
%      \item the first character of the argument is 1 a
%            the $\mathit{length\ of\ the\ number} \pmod 3 =
%            (one--egy, thousand--ezer, million--egymilli\'o,\dots);
%      \item the first character of the argument
%            a, A, e, E, i, I, o, O, u, or U;
%      \item the first character of the argument
%            l, L, m, M, n, N, r, R, s, S, x, X, y, or
%            and the length of the argument is 1 or the seco
%            character is a non-lette
%    \end{itemiz
%    At the end it calls |\@tempa|, that is, it either typesets a `
%    or nothin
%    \begin{macrocod
\def\@@az#1#2\hbox#3!
  \let\@tempa\@emp
  \def\@tempb{z
  \uppercase
    \ifx5#
      \let\@tempa\@tem
    \else\ifx1#
      \count@\@
      \hun@number@lehgth#2\hbox\hbox
      \lo
      \ifnum\count@>\thr
        \advance\count@-\thr
      \repe
      \ifnum\count@=\@
        \let\@tempa\@tem
      \
    \el
      \@@az@string{#1}{#2
    \fi\

  \@temp
%    \end{macrocod
% \end{macr

% \begin{macro}{\refstepcounte
%    |\refstepcounter| must be redefined in order to ke
%    |\@currentlabel| unexpanded. This is necessary to enab
%    the |\label| command to write a |\hunnewlabel| comma
%    to the aux file with the Roman numerals substituted
%    their Arabic representation
%    Of course, the original definition of |\refstepcounter|
%    saved and restored if the Hungarian language is switched of
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \babel@save\refstepcount
  \def\refstepcounter#1{\stepcounter{#1
    \def\@currentlabel{\csname p@#1\endcsname\csname the#1\endcsname}

%    \end{macrocod
% \end{macr

% \begin{macro}{\labe
%    |\label| is redefined to write another line into the a
%    file: |\hunnewlabel{ }{ }| where the Roman numera
%    are replaced their Arabic representation
%    The original definition of |\label| is saved in
%    |\old@label| and it is also called by |\label
%    On leaving the Hungarian typesetting mode |\label|
%    original is restored since it is added to |\noextrasmagyar
%    \begin{macrocod
\expandafter\addto\csname extras\CurrentOption\endcsname
  \let\old@label\lab
  \def\label#1{\@bspha
    \old@label{#1
    \begingro
      \let\romannumeral\numb
      \def\@roman##1{\number ##1
      \def\@Roman##1{\number ##1
      {\toks0={\noexpand\noexpand\noexpand\number
        \def\number##1{\the\toks0 ##1}\xdef\tempb@{\thepage}
      \edef\@tempa##1{\noexpand\protected@write\@auxout{
           {\noexpand\string\noexpand\hunnewlab
           {##1}{{\@currentlabel}{\tempb@}}}
      \@tempa{#1
    \endgro
  \@esphack

\expandafter\addto\csname noextras\CurrentOption\endcsname
  \let\label\old@lab

%    \end{macrocod
% \end{macr

% \begin{macro}{\hunnewlabe
%    Finally, |\hunnewlabel| is define
%    It checks if the label's expansion (|#2|) differs from th
%    one given in the |\newlabel| command. If y
%    (that is, the label contains some Roman numerals
%    it defines the macro |\hun@r@|\textit{label
%    otherwise it does nothin
%    \begin{macrocod
\def\hunnewlabel#1#2
  \def\@tempa{#2
  \expandafter\ifx\csname r@#1\endcsname\@tem
    \relax% \message{No need for def: #1
  \el
    \global\expandafter\let\csname hun@r@#1\endcsname\@temp
  \

%    \end{macrocod
% \end{macr

%    For Hungarian the |`| character is made activ
% \changes{magyar-1.4c}{2001/03/05}{Make sure that the grave acce
%    has catcode 12 \emph{before} it is made \cs{active
%    \begin{macrocod
\AtBeginDocument
  \if@filesw\immediate\write\@auxout{\catcode096=12}\f
\initiate@active@char{
\expandafter\addto\csname extras\CurrentOption\endcsname
  \languageshorthands{magyar
  \bbl@activate{`
\expandafter\addto\csname noextras\CurrentOption\endcsname
  \bbl@deactivate{`
%    \end{macrocod

%    The character sequence |``| is declared as a shortha
%    in order to produ
%    the opening quotation sign appropriate for Hungaria
%    \begin{macrocod
\declare@shorthand{magyar}{``}{\glq
%    \end{macrocod

% In Hungarian there are some long double consonants whi
% must be hyphenated speciall
% For all these long double consonants (except dzzs, that
% extremely very-very rare) a shortcut is define
%    \begin{macrocod
\declare@shorthand{magyar}{`c}{\textormath{\bbl@disc{c}{cs}}{c
\declare@shorthand{magyar}{`C}{\textormath{\bbl@disc{C}{CS}}{C
\declare@shorthand{magyar}{`d}{\textormath{\bbl@disc{d}{dz}}{d
\declare@shorthand{magyar}{`D}{\textormath{\bbl@disc{D}{DZ}}{D
\declare@shorthand{magyar}{`g}{\textormath{\bbl@disc{g}{gy}}{g
\declare@shorthand{magyar}{`G}{\textormath{\bbl@disc{G}{GY}}{G
\declare@shorthand{magyar}{`l}{\textormath{\bbl@disc{l}{ly}}{l
\declare@shorthand{magyar}{`L}{\textormath{\bbl@disc{L}{LY}}{L
\declare@shorthand{magyar}{`n}{\textormath{\bbl@disc{n}{ny}}{n
\declare@shorthand{magyar}{`N}{\textormath{\bbl@disc{N}{NY}}{N
\declare@shorthand{magyar}{`s}{\textormath{\bbl@disc{s}{sz}}{s
\declare@shorthand{magyar}{`S}{\textormath{\bbl@disc{S}{SZ}}{S
\declare@shorthand{magyar}{`t}{\textormath{\bbl@disc{t}{ty}}{t
\declare@shorthand{magyar}{`T}{\textormath{\bbl@disc{T}{TY}}{T
\declare@shorthand{magyar}{`z}{\textormath{\bbl@disc{z}{zs}}{z
\declare@shorthand{magyar}{`Z}{\textormath{\bbl@disc{Z}{ZS}}{Z
%    \end{macrocod

%    The macro |\ldf@finish| takes care of looking for
%    configuration file, setting the main language to be switched
%    at |\begin{document}| and resetting the category code
%    \texttt{@} to its original valu
% \changes{magyar-1.3h}{1996/10/30}{Now use \cs{ldf@finish} to wrap u
%    \begin{macrocod
\ldf@finish\CurrentOpti
%</cod
%    \end{macrocod

% \Fina

%% \CharacterTab
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y
%%   Digits        \0\1\2\3\4\5\6\7\8
%%   Exclamation   \!     Double quote  \"     Hash (number)
%%   Dollar        \$     Percent       \%     Ampersand
%%   Acute accent  \'     Left paren    \(     Right paren
%%   Asterisk      \*     Plus          \+     Comma
%%   Minus         \-     Point         \.     Solidus
%%   Colon         \:     Semicolon     \;     Less than
%%   Equals        \=     Greater than  \>     Question mark
%%   Commercial at \@     Left bracket  \[     Backslash
%%   Right bracket \]     Circumflex    \^     Underscore
%%   Grave accent  \`     Left brace    \{     Vertical bar
%%   Right brace   \}     Tilde         \

\endinp
