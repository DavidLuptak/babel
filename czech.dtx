% \iffalse meta-com

% Copyright 1989-2008 Johannes L. Braams and any individual aut
% listed elsewhere in this file.  All rights reser

% This file is part of the Babel sys
% ----------------------------------

% It may be distributed and/or modified under
% conditions of the LaTeX Project Public License, either version
% of this license or (at your option) any later vers
% The latest version of this license i
%   http://www.latex-project.org/lppl
% and version 1.3 or later is part of all distributions of L
% version 2003/12/01 or la

% This work has the LPPL maintenance status "maintain

% The Current Maintainer of this work is Johannes Bra

% The list of all files belonging to the Babel syste
% given in the file `manifest.bbl. See also `legal.bbl' for additi
% informat

% The list of derived (unpacked) files belonging to the distribu
% and covered by LPPL is defined by the unpacking scripts (
% extension .ins) which are part of the distribut
%
% \CheckSum{1

% \iff
%    Tell the \LaTeX\ system who we are and write an entry on
%    transcr
%<*
\ProvidesFile{czech.
%</
%<+code>\ProvidesLanguage{cz

%\ProvidesFile{czech.
        [2008/07/06 v3.1a Czech support from the babel sys
%\iff
%% File `czech.
%% Babel package for LaTeX versio
%% Copyright (C) 1989 -
%%           by Johannes Braams, TeX

%% Copyright (C) 2005,
%%           by Petr Tesa\v r\'ik (babel at tesarici

%% Czech Language Definition
% This file is also based on CSL
%                       by Ji\v r\'i Zlatu\v ska, Zden\v ek Wag
%                          Jaroslav \v Snajdr and Petr Ol\v s\

%% Please report errors to: Petr Tesa\v r
%%                          babel at tesaric

%    This file is part of the babel system, it provides the so
%    code for the Czech language definition f
%<*filedri
\documentclass{ltx
\newcommand*\TeXhax{\TeX
\newcommand*\babel{\textsf{bab
\newcommand*\langvar{$\langle \it lang \rang
\newcommand*\note[
\newcommand*\Lopt[1]{\textsf{
\newcommand*\file[1]{\texttt{
\begin{docum
 \DocInput{czech.
\end{docum
%</filedri


% \def\CS{$\cal C\kern-.16
%   \lower.5ex\hbox{$\cal S$}\kern-.075

% \GetFileInfo{czech.

% \changes{czech-1.0a}{1991/07/15}{Renamed babel.sty in babel.
% \changes{czech-1.1}{1992/02/15}{Brought up-to-date with babel 3
% \changes{czech-1.2}{1993/07/11}{Included some features from Kas
%    czech.
% \changes{czech-1.3}{1994/02/27}{Update for \LaT
% \changes{czech-1.3d}{1994/06/26}{Removed the use of \cs{filed
%    and moved identification after the loading of \file{babel.d
% \changes{czech-1.3h}{1996/10/10}{Replaced \cs{undefined}
%    \cs{@undefined} and \cs{empty} with \cs{@empty} for consist
%    with \LaTeX, moved the definition of \cs{atcatcode} right to
%    beginni
% \changes{czech-3.0}{2005/09/10}{Implemented the functionalit
%    \CS\LaTeX's czech.sty.  The version number was bumped to
%    to minimize confusion by being higher than the last ver
%    of \CS\LaT

%  \section{The Czech Langu

%    The file \file{\filename}\footnote{The file described in
%    section has version number \fileversion\ and was last revise
%    \filedate.  It was rewritten by Petr Tesa\v r
%    (\texttt{babel@tesarici.cz}).} defines all the language defini
%    macros for the Czech language.  It is meant as a replacemen
%    \CS\LaTeX, the most-widely used standard for typesetting C
%    documents in \La

%  \subsection{Us
%    For this language |\frenchspacing| is

%    Additionally, two macros are defined  |\q| and |\w| for
%    access to two accents are defi

%    The command |\q| is used with the letters (\texttt
%    \texttt{d}, \texttt{l}, and \texttt{L}) and adds a \texttt{'
%    them to simulate a `hook' that should be there.  The result l
%    like t\kern-2pt\char'47. The command |\w| is used to put
%    ring-accent which appears in \aa ngstr\o m over the let
%    \texttt{u} and \texttt

%  \subsection{Compatibil

%    Great care has been taken to ensure backward compatibility
%    \CS\LaTeX.  In particular, documents which load this file
%    |\usepackage{czech}| should produce identical output wit
%    modifications to the source.  Additionally, all the \CS\LaT
%    options are recogni

%    \label{tab:czech-opti
%    \begin{lis
%     {\def\makelabel#1{\sbox0{\Lopt{#
%        \ifdim\wd0>\labelw
%          \setbox0\vbox{\box0\hbox{}} \wd0=0pt
%        \box0\h
%      \setlength{\labelwidth}{2\parind
%      \setlength{\leftmargin}{2\parind
%      \setlength{\rightmargin}{\parinde
%     \item[IL2, T1,
%       These options set the default font encoding.  Please
%       that their use is deprecated. You should use the |font
%       package to select font encod

%     \item[split, nosp
%       These options control whether hyphenated words
%       automatically split according to Czech typesetting ru
%       With the \Lopt{split} option ``je-li'' is hyphenate
%       ``je-/-li''. The \Lopt{nosplit} option disables this behav

%       The use of this option is strongly discouraged, as it br
%       too many common things---hyphens cannot be used in lab
%       negative arguments to \TeX{} primitives will not wor
%       horizontal mode (use \cs{minus} as a workaround), and there
%       a few other peculiarities with using this m

%     \item[nocapti

%       This option was used in \CS\LaTeX{} to set up Czech/Sl
%       typesetting rules, but leave the original captions and da
%       The recommended way to achieve this is to use English as the
%       language of the document and use the environment |otherlangua
%       for Czech t

%     \item[ol
%       There are two version of \cs{uv}.  The older one allows the
%       of \cs{verb} inside the quotes but breaks any respective ker
%       with the quotes (like that in \CS{} fonts).  The newer one ho
%       the kerning in the font but does not allow \cs{verb} inside
%       quo

%       The new version is used by default in \LaTeXe{} and the old ver
%       is used with plain \TeX.  You may use \Lopt{olduv} to override
%       default in \LaT
%
%     \item[cs
%       This option was used to include the commands \cs{csprimeson}
%       \cs{csprimesoff}.  Since these commands are always included
%       it has been removed and the empty definition lasts for compatibil
%    \end{l

% \StopEventual

%  \subsection{Implementat

%    The macro |\LdfInit| takes care of preventing that this fil
%    loaded more than once, checking the category code of
%    \texttt{@} sign,
% \changes{czech-1.3h}{1996/11/02}{Now use \cs{LdfInit} to per
%    initial chec
%    \begin{macroc
%<*c
\LdfInit\CurrentOption{date\CurrentOpt
%    \end{macroc

%    When this file is read as an option, i.e. by the |\usepack
%    command, \texttt{czech} might be an `unknown' language in w
%    case we have to make it known. So we check for the existenc
%    |\l@czech| to see whether we have to do something h

% \changes{czech-1.0b}{1991/10/27}{Removed use of \cs{@ifundefin
% \changes{czech-1.1}{1992/02/15}{Added a warning when no hyphena
%    patterns were load
% \changes{czech-1.3d}{1994/06/26}{Now use \cs{@nopatterns} to pro
%    the warn
%    \begin{macroc
\ifx\l@czech\@undef
    \@nopatterns{Cz
    \adddialect\l@czech
%    \end{macroc

%    We need to define these macros early in the proc

%    \begin{macroc
\def\cs@iltw@{
\newif\ifcs@splithyp
\cs@splithyphensf
%    \end{macroc

%    If Babel is not loaded, we provide compatibility with \CS\La
%    However, if macro \cs{@ifpackageloaded} is not defined, we as
%    to be loaded from plain and provide compatibility with cspl
%    Of course, this does not work well with \LaTeX$\:$2.09, b
%    doubt anyone will ever want to use this file with \LaTeX$\:$2

%    \begin{macroc
\ifx\@ifpackageloaded\@undef
  \let\cs@compat@plain\r
  \message{csplain compatibility m
\
  \@ifpackageloaded{babel}
    \let\cs@compat@latex\r
    \message{cslatex compatibility mo

\ifx\cs@compat@latex\r
  \ProvidesPackage{czech}[2008/07/06 v3.1a CSTeX Czech st
%    \end{macroc

%    Declare \CS\LaTeX{} options (see also the descriptions on
%    \pageref{tab:czech-option

%    \begin{macroc
  \DeclareOption{IL2}{\def\encodingdefault{I
  \DeclareOption {T1}{\def\encodingdefault {
  \DeclareOption{OT1}{\def\encodingdefault{O
  \DeclareOption{nosplit}{\cs@splithyphensfa
  \DeclareOption{split}{\cs@splithyphenst
  \DeclareOption{nocaptions}{\let\cs@nocaptions=\re
  \DeclareOption{olduv}{\let\cs@olduv=\re
  \DeclareOption{cstex}{\re
%    \end{macroc

%    Make |IL2| encoding the default.  This can be overriden
%    the other font encoding opti
%    \begin{macroc
  \ExecuteOptions{\cs@il
%    \end{macroc

%    Now, process the user-supplied opti
%    \begin{macroc
  \ProcessOpt
%    \end{macroc

%    Standard \LaTeXe{} does not include the IL2 encoding in the for
%    The encoding can be loaded later using the fontenc package,
%    \CS\LaTeX{} included IL2 by default.  This means existing docum
%    for \CS\LaTeX{} do not load that package, so load the enco
%    ourselves in compatibility m

%    \begin{macroc
  \ifx\encodingdefault\cs@i
    \input il2enc

%    \end{macroc

%    Restore the definition of \cs{CurrentOption}, clobbered by proces
%    the opti

%    \begin{macroc
  \def\CurrentOption{cz

%    \end{macroc

%    The next step consists of defining commands to switch to
%    from) the Czech langu

%  \begin{macro}{\captionscz
%    The macro \cs{captionsczech} defines all strings used in the
%    standard documentclasses provided with \La

% \changes{czech-1.1}{1992/02/15}{Added \cs{seename}, \cs{alson
%    and \cs{prefacena
% \changes{czech-1.3f}{1995/07/04}{Added \cs{proofname} for AMS-\La
% \changes{czech-1.3g}{1996/02/12}{Fixed two errors and prov
%    translation for `proo
% \changes{czech-1.3j}{2000/09/19}{Added \cs{glossaryna
% \changes{czech-1.3k}{2004/02/18}{Added translation for Gloss
% \changes{czech-3.0}{2005/11/25}{Updated some translations.  Fo
%    translations were: `Dodatek' for \cs{appendixname} and `In
%    for \cs{indexname}. Also removed spurious colon at the en
%    \cs{ccnam

%    \begin{macroc
\@namedef{captions\CurrentOptio
  \def\prefacename{P\v{r}edmlu
  \def\refname{Referen
  \def\abstractname{Abstra
  \def\bibname{Literatu
  \def\chaptername{Kapito
  \def\appendixname{P\v{r}\'{\i}lo
  \def\contentsname{Obs
  \def\listfigurename{Seznam obr\'azk\r{
  \def\listtablename{Seznam tabul
  \def\indexname{Rejst\v{r}\'{\i
  \def\figurename{Obr\'az
  \def\tablename{Tabul
  \def\partname{\v{C}\'a
  \def\enclname{P\v{r}\'{\i}lo
  \def\ccname{Na v\v{e}dom\'{\
  \def\headtoname{Ko
  \def\pagename{Stra
  \def\seename{v
  \def\alsoname{viz tak\
  \def\proofname{D\r{u}k
  \def\glossaryname{Slovn\'{\i

%    \end{macroc
%  \end{ma

%  \begin{macro}{\datecz
%    The macro \cs{dateczech} redefines the command \cs{to
%    to produce Czech da

%    \CS\LaTeX{} allows line break between the day and the mo
%    However, this behavior has been agreed upon to be a bad thin
%    the csTeX mailing list in December 2005 and has not been adop
%
% \changes{czech-1.3i}{1997/10/01}{Use \cs{edef} to define \cs{to
%    to save mem
% \changes{czech-1.3i}{1998/03/28}{Use \cs{def} instead of \cs{ed
%    \begin{macroc
\@namedef{date\CurrentOptio
  \def\today{\number\day.~\ifcase\month\or ledna\or \'unor
    b\v{r}ezna\or dubna\or kv\v{e}tna\or \v{c}ervna\or \v{c}ervenc
    srpna\or z\'a\v{r}\'\i\or \v{r}\'{\i}jna\or listopad
    prosince\fi \space\number\ye
%    \end{macroc
%  \end{ma

%  \begin{macro}{\extrascz
%  \begin{macro}{\noextrascz
%    The macro |\extrasczech| will perform all the extra definit
%    needed for the Czech language. The macro |\noextrasczech| is
%    to cancel the actions of |\extrasczech|.  This means saving
%    meaning of two one-letter control sequences before defining t

%    For Czech texts \cs{frenchspacing} should be in effect.  Lang
%    group for shorthands is also set h
% \changes{czech-1.3e}{1995/03/14}{now use \cs{bbl@frenchspacing}
%    \cs{bbl@nonfrenchspaci
% \changes{czech-3.1}{2006/10/07}{move \cs{languageshorthands} h
%    so that the language group is always initialized correc
%    \begin{macroc
\expandafter\addto\csname extras\CurrentOption\endcsna
  \bbl@frenchspa
  \languageshorthands{cze
\expandafter\addto\csname noextras\CurrentOption\endcsna
  \bbl@nonfrenchspac
%    \end{macroc

% \changes{czech-1.1a}{1992/07/07}{Removed typo, \cs{q} was rest
%    twice, once too ma
% \changes{czech-1.3e}{1995/03/15}{Use \LaTeX's \cs{v} and \c
%    accent comma
%    \begin{macroc
\expandafter\addto\csname extras\CurrentOption\endcsna
  \babel@save\q\let
  \babel@save\w\let\
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{
%  \begin{macro}{
%    We save the original single and double quote character
%    \cs{sq} and \cs{dq} to make them available la
%    \begin{macroc
\begingroup\catcode`\"=12\catcode`\
\def\x{\endg
  \def\s
  \def\dq

%    \end{macroc
%  \end{ma
%  \end{ma

% \changes{czech-3.0}{2005/12/10}{Added default for setting hyphe
%   parameters.  Values taken from \CS\LaT
%    This macro is used to store the correct values of the hyphena
%    parameters |\lefthyphenmin| and |\righthyphenm
%    \begin{macroc
\providehyphenmins{\CurrentOption}{\tw@\th
%    \end{macroc

%  \begin{macro}
%    \LaTeX's normal |\v| accent places a caron over the letter
%    follows it (\v{o}). This is not what we want for the letter
%    t, l and L; for those the accent should change shape. Thi
%    acheived by the follow
%    \begin{macroc
\AtBeginDocume
  \DeclareTextCompositeCommand{\v}{OT1}{
    t\kern-.23em\raise.24ex\hbox
  \DeclareTextCompositeCommand{\v}{OT1}{
    d\kern-.13em\raise.24ex\hbox
  \DeclareTextCompositeCommand{\v}{OT1}{l}{\lcaro
  \DeclareTextCompositeCommand{\v}{OT1}{L}{\Lcaron
%    \end{macroc

%  \begin{macro}{\lca
%  \begin{macro}{\Lca
%    For the letters \texttt{l} and \texttt{L} we want to dising
%    between normal fonts and monospaced fo
%    \begin{macroc
\def\lcar
  \setbox0\hbox{M}\setbox\tw@\hbox
  \ifdim\wd0>\wd\tw@\r
    l\kern-.13em\raise.24ex\hbox{'}\kern-.1
  \
    l\raise.45ex\hbox to\z@{\kern-.35em '\h

\def\Lcar
  \setbox0\hbox{M}\setbox\tw@\hbox
  \ifdim\wd0>\wd\tw@\r
    L\raise.24ex\hbox to\z@{\kern-.28em'\h
  \
    L\raise.45ex\hbox to\z@{\kern-.40em '\h

%    \end{macroc
%  \end{ma
%  \end{ma
%  \end{ma

%    Initialize active quotes.  \CS\LaTeX{} provides a wa
%    converting English-style quotes into Czech-style ones.
%    single and double quotes are affected, i.e. |``text''
%    converted to something like |,,text``| and |`text'| is conve
%    to |,text`|.  This conversion can be switched on and off
%    \cs{csprimeson} and \cs{csprimesoff}.\footnote{By the way,
%    names of these macros are misleading, because the handlin
%    primes in math mode is rather marginal, the most important t
%    being the handling of quotes\ld

%    These quotes present various troubles, e.g. the kerning is bro
%    apostrophes are converted to closing single quote, some primit
%    are broken (most notably the |\catcode`\|\meta{char} syntax
%    not work any more), and writing them to \file{.aux} files ca
%    be handled correctly.  For these reasons, these commands are
%    available in \CS\LaTeX{} compatibility m

%    \begin{macroc
\ifx\cs@compat@latex\r
  \let\cs@ltxprim@s\pr
  \def\csprimes
    \catcode`\`\active \catcode`\'\active \let\prim@s\bbl@pri
  \def\csprimeso
    \catcode`\`12 \catcode`\'12 \let\prim@s\cs@ltxpri
  \begingroup\catcode`\`\ac
  \def\x{\endg
    \def`{\futurelet\cs@next\cs@openqu
    \def\cs@openquo
      \ifx`\cs@next \expandafter\cs@op
      \else \expandafter
      \

  \begingroup\catcode`\'\ac
  \def\x{\endg
    \def'{\textormath{\futurelet\cs@next\cs@closequ
                     {^\bgroup\prim
    \def\cs@closequo
      \ifx'\cs@next \expandafter\cs@clo
      \else \expandafter
      \

  \def\cs@opendq{\clqq\let\cs@nex
  \def\cs@closedq{\crqq\let\cs@nex
%    \end{macroc

%    The way I recommend for typesetting quotes in Czech docum
%    is to use shorthands similar to those used in Ger
%
%    \begin{macroc
\
  \initiate@active@cha
  \expandafter\addto\csname extras\CurrentOption\endcsna
    \bbl@activate
  \expandafter\addto\csname noextras\CurrentOption\endcsna
    \bbl@deactivate
  \declare@shorthand{czech}{"`}{\c
  \declare@shorthand{czech}{"'}{\c
  \declare@shorthand{czech}{"<}{\f
  \declare@shorthand{czech}{">}{\f
  \declare@shorthand{czech}{"=}{\cs@splithyp

%    \end{macroc

%  \begin{macro}{\c
%    This is the CS opening quote, which is similar to the Ge
%    quote (\cs{glqq}) but the kerning is differ

%    For the OT1 encoding, the quote is constructed from the r
%    double quote (i.e. the ``Opening quotes'' character) by mo
%    it down to the baseline and shifting it to the right, or to
%    left if italic correction is posit

%    For T1, the ``German Opening quotes'' is used.  It is move
%    the right and the total width is enlarged.  This is done i
%    attempt to minimize the difference between the OT1 an
%    versi

% \changes{3.0}{2006/04/20}{Added \cs{leavevmode} to allow an ope
%   quote at the beginning of a paragr
%    \begin{macroc
\ProvideTextCommand{\clqq}{OT
  \set@low@box{\textquotedblrig
  \setbox\@ne=\hbox{l\/}\dimen\@ne=\wd
  \setbox\@ne=\hbox{l}\advance\dimen\@ne-\wd
  \leavev
  \ifdim\dimen\@ne>\z@\kern-.1em\box\z@\kern
    \else\kern.1em\box\z@\kern-.1em\fi\allowhyph
\ProvideTextCommand{\clqq}
  {\kern.1em\quotedblbase\kern-.0158em\re
\ProvideTextCommandDefault{\clqq}{\UseTextSymbol{OT1}\c
%    \end{macroc
%  \end{ma

%  \begin{macro}{\c
%    For OT1, the CS closing quote is basically the sam
%    \cs{grqq}, only the \cs{textormath} macro is not used, bec
%    as far as I know, \cs{grqq} does not work in math mode any

%    For T1, the character is slightly wider and shifted to
%    right to match its OT1 counterp

%    \begin{macroc
\ProvideTextCommand{\crqq}{
  {\save@sf@q{\nobreak\kern-.07em\textquotedblleft\kern.07
\ProvideTextCommand{\crqq}
  {\save@sf@q{\nobreak\kern.06em\textquotedblleft\kern.024
\ProvideTextCommandDefault{\crqq}{\UseTextSymbol{OT1}\c
%    \end{macroc
%  \end{ma

%  \begin{macro}{\
%  \begin{macro}{\

%    Single CS quotes are similar to double quotes (see
%    discussion abo

%    \begin{macroc
\ProvideTextCommand{\clq}{
  {\set@low@box{\textquoteright}\box\z@\kern.04em\allowhyph
\ProvideTextCommand{\clq}
  {\quotesinglbase\kern-.0428em\re
\ProvideTextCommandDefault{\clq}{\UseTextSymbol{OT1}\
\ProvideTextCommand{\crq}{
  {\save@sf@q{\nobreak\textquoteleft\kern.17
\ProvideTextCommand{\crq}
  {\save@sf@q{\nobreak\textquoteleft\kern.17
\ProvideTextCommandDefault{\crq}{\UseTextSymbol{OT1}\
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{
%    There are two versions of \cs{uv}.  The older one opens a g
%    and uses \cs{aftergroup} to typeset the closing quotes.
%    version allows using \cs{verb} inside the quotes, because
%    enclosed text is not passed as an argument, but unfortuna
%    it breaks any kerning with the quotes.  Although the ker
%    with the opening quote could be fixed, the kerning with
%    closing quote can

%    The newer version is defined as a command with one parame
%    It preserves kerning but since the quoted text is passed a
%    argument, it cannot contain \cs{ve

%    Decide which version of \cs{uv} should be used.  For
%    of compatibility, we use the older version with plain \T
%    and the newer version with \LaT
%    \begin{macroc
\ifx\cs@compat@plain\@undefined\else\let\cs@olduv=\rela
\ifx\cs@olduv\@undef
  \DeclareRobustCommand\uv[1]{{\leavevmode\clqq#1\cr
\
  \DeclareRobustCommand\uv{\bgroup\aftergroup\closequ
    \leavevmode\clqq\let\cs@ne
  \def\closequotes{\unskip\crqq\re

%    \end{macroc
%  \end{ma


%  \begin{macro}{\cs@word
%    Declare a counter to hold the length of the word after
%    hyp

%    \begin{macroc
\newcount\cs@wor
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@hyp
%  \begin{macro}{\cs@end
%  \begin{macro}{\cs@emd
%    Store the original hyphen in a macro. Ditto for the ligatu

% \changes{czech-3.1}{2006/10/07}{ensure correct catcode for
%    saved hyp
%    \begin{macroc
\begingroup\catcode`
\def\x{\endg
  \def\cs@hyphe
  \def\cs@endash
  \def\cs@emdash{
%    \end{macroc
%  \end{ma
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@boxhyp
%    Provide a non-breakable hyphen to be used when a compound
%    is too short to be split, i.e. the second part is shorter
%    \cs{righthyphenm

%    \begin{macroc
  \def\cs@boxhyphen{\hbox
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@splithyp
%    The macro \cs{cs@splithyphen} inserts a split hyphen, w
%    allowing both parts of the compound word to be hyphenate
%    other places

%    \begin{macroc
  \def\cs@splithyphen{\ker
    \discretionary{-}{\char\hyphenchar\the\font}{-}\nobreak\hskip

%    \end{macroc
%  \end{ma

%  \begin{macro
%    To minimize the effects of activating the hyphen charac
%    the active definition expands to the non-active chara
%    in all cases where hyphenation cannot occur, i.e. if
%    typesetting (check \cs{protect}), not in horizontal m
%    or in inner horizontal m

%    \begin{macroc
\initiate@active@cha
\declare@shorthand{czech}{
  \ifx\protect\@typeset@pro
    \ifh
      \ifi
        \bbl@afterelse\bbl@afterelse\bbl@afterelse\cs@hy
      \
        \bbl@afterfi\bbl@afterelse\bbl@afterelse\cs@firsthy

    \
      \bbl@afterfi\bbl@afterelse\cs@hy

  \
    \bbl@afterfi\cs@hy

%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@firsthyp
%  \begin{macro}{\cs@firsthyp
%  \begin{macro}{\cs@secondhyp
%  \begin{macro}{\cs@secondhyp
%    If we encounter a hyphen, check whether it is foll
%    by a second or a third hyphen and if so, insert
%    corresponding ligat

%    If we don't find a hyphen, the token found will be pl
%    in \cs{cs@token} for further analysis, and it will also
%    in the in

%    \begin{macroc
\begingroup\catcode`\-\ac
\def\x{\endg
  \def\cs@firsthyphen{\futurelet\cs@token\cs@firsthyp
  \def\cs@firsthyph
    \ifx -\cs@t
      \bbl@afterelse\cs@secondhy
    \
      \bbl@afterfi\cs@checkhy

  \def\cs@secondhyphen #
    \futurelet\cs@token\cs@secondhyp
  \def\cs@secondhyph
    \ifx -\cs@t
      \bbl@afterelse\cs@emdash\@go
    \
      \bbl@afterfi\cs@en


%    \end{macroc
%  \end{ma
%  \end{ma
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@checkhyp
%    Check that hyphenation is enabled, and if so, start analy
%    the rest of the word, i.e. initialize \cs{cs@word} and \cs{cs@word
%    and start processing input with \cs{cs@scanwo

%    \begin{macroc
\def\cs@checkhyph
  \ifnum\expandafter\hyphenchar\the\font
    \def\cs@word{}\cs@wordle
    \bbl@afterelse\cs@scan
  \
    \cs@hy

%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@scanw
%  \begin{macro}{\cs@continues
%  \begin{macro}{\cs@getto
%  \begin{macro}{\cs@gett@
%    Each token is first analyzed with \cs{cs@scanword}, which exp
%    the token and passes the first token of the resul
%    \cs{cs@gett@ken}. If the expanded token is not identical to
%    unexpanded one, presume that it might be expanded further
%    pass it back to \cs{cs@scanword} until you get an unexpand
%    token. Then analyze it in \cs{cs@examinetok

%    The \cs{cs@continuescan} macro does the same thin
%    \cs{cs@scanword}, but it does not require the first token t
%    in \cs{cs@token} alre

%    \begin{macroc
\def\cs@scanword{\let\cs@lasttoken= \cs@token\expandafter\cs@getto
\def\cs@continuescan{\let\cs@lasttoken\@undefined\expandafter\cs@getto
\def\cs@gettoken{\futurelet\cs@token\cs@gett@
\def\cs@gett@k
  \ifx\cs@token\cs@lasttoken \def\cs@next{\cs@examinetok
  \else \def\cs@next{\cs@scanwo
  \fi \cs@n
%    \end{macroc
%  \end{ma
%  \end{ma
%  \end{ma
%  \end{ma

%  \begin{macro}{cs@examineto
%    Examine the token in \cs{cs@tok

%    \begin{item
%    \
%      If it is a letter (catcode 11) or other (catcode 12), ad
%      to \cs{cs@word} with \cs{cs@addpar

%    \
%      If it is the \cs{char} primitive, add it with \cs{cs@expandch

%    \
%      If the token starts or ends a group, ignore it
%      \cs{cs@ignoretok

%    \
%      Otherwise analyze the meaning of the token
%      \cs{cs@checkchardef} to detect primitives defined
%      \cs{chard

%    \end{item

%    \begin{macroc
\def\cs@examinetok
  \ifcat A\cs@t
    \def\cs@next{\cs@addpar
  \else\ifcat 0\cs@t
    \def\cs@next{\cs@addpar
  \else\ifx\char\cs@t
    \def\cs@next{\afterassignment\cs@expandchar\let\cs@token
  \else\ifx\bgroup\cs@t
    \def\cs@next{\cs@ignoretoken\bgro
  \else\ifx\egroup\cs@t
    \def\cs@next{\cs@ignoretoken\egro
  \else\ifx\begingroup\cs@t
    \def\cs@next{\cs@ignoretoken\begingro
  \else\ifx\endgroup\cs@t
    \def\cs@next{\cs@ignoretoken\endgro
  \
    \def\cs@next{\expandafter\expandafter\expandafter\cs@checkcha
      \expandafter\meaning\expandafter\cs@token\string\char\e
  \fi\fi\fi\fi\fi\fi\fi\cs@n
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@checkchar
%    Check the meaning of a token and if it is a primitive def
%    with \cs{chardef}, pass it to \cs{\cs@examinechar} as if it
%    a \cs{char} sequence. Otherwise, there are no more word charact
%    so do the final actions in \cs{cs@nospl

%    \begin{macroc
\expandafter\def\expandafter\cs@checkcha
  \expandafter#\expandafter1\string\char#2\e
    \def\cs@token{
    \ifx\cs@token\@e
      \def\cs@next{\afterassignment\cs@examinechar\let\cs@token
    \
      \def\cs@next{\cs@nospl
    \fi \cs@n
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@ignoreto
%    Add a token to \cs{cs@word} but do not update the \cs{cs@word
%    counter. This is mainly useful for group starting and en
%    primitives, which need to be preserved, but do not affect the
%    bound

%    \begin{macroc
\def\cs@ignoretoken
  \edef\cs@word{\cs@word
  \afterassignment\cs@continuescan\let\cs@toke
%    \end{macroc
%  \end{ma

%  \begin{macro}{cs@addpa
%    Add a token to \cs{cs@word} and check its lccode. Note
%    this macro can only be used for tokens which can be passe
%    a parame

%    \begin{macroc
\def\cs@addparam
  \edef\cs@word{\cs@word
  \cs@checkcode{\lccode`
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@expandc
%  \begin{macro}{\cs@examinec
%    Add a \cs{char} sequence to \cs{cs@word} and check its lcc
%    The charcode is first parsed in \cs{cs@expandchar} and then
%    resulting \cs{chardef}-defined sequence is analyze
%    \cs{cs@examinech

%    \begin{macroc
\def\cs@expandchar{\afterassignment\cs@examinechar\chardef\cs@tok
\def\cs@examinech
  \edef\cs@word{\cs@word\char\the\cs@token\spa
  \cs@checkcode{\lccode\cs@tok
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@checkc
%    Check the lccode of a character. If it is zero, it does not c
%    to the current word, so finish it with \cs{cs@nosplit}. Other
%    update the \cs{cs@wordlen} counter and go on scanning the
%    with \cs{cs@continuescan}. When enough characters are gathere
%    \cs{cs@word} to allow word break, insert the split hyphen
%    fin

%    \begin{macroc
\def\cs@checkcode
  \ifnum
    \def\cs@next{\cs@nospl
  \
    \advance\cs@wordlen
    \ifnum\righthyphenmin>\the\cs@wor
      \def\cs@next{\cs@continuesc
    \
      \cs@splithy
      \def\cs@next{\cs@wo

  \fi \cs@n
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@nosp
%    Insert a non-breakable hyphen followed by the saved w

%    \begin{macroc
\def\cs@nosplit{\cs@boxhyphen\cs@w
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@hyp
%    The \cs{minus} sequence can be used where the active hy
%    does not work, e.g. in arguments to \TeX{} primitives in o
%    horizontal m

%    \begin{macroc
\let\minus\cs@hy
%    \end{macroc
%  \end{ma

%  \begin{macro}{\standardhyph
%  \begin{macro}{\splithyph
%    These macros control whether split hyphens are allowed in C
%    and/or Slovak texts. You may use them in any language, but
%    split hyphen is only activated for Czech and Slo

% \changes{czech-3.1}{2006/10/07}{activate with split hyphens
%    deactivate with standard hyphens, not vice ve
%    \begin{macroc
\def\standardhyphens{\cs@splithyphensfalse\cs@deactivatehyph
\def\splithyphens{\cs@splithyphenstrue\cs@activatehyph
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@splita
%    Now we declare the |split| language attribute.  Thi
%    similar to the |split| package option of cslatex, bu
%    only affects Czech, not Slo

% \changes{czech-3.1}{2006/10/07}{attribute ad
%    \begin{macroc
\def\cs@splitattr{\babel@save\ifcs@splithyphens\splithyph
\bbl@declare@ttribute{czech}{spli
  \addto\extrasczech{\cs@splitat
%    \end{macroc
%  \end{ma

%  \begin{macro}{\cs@activatehyph
%  \begin{macro}{\cs@deactivatehyph
%    These macros are defined as \cs{relax} by default to pre
%    activating/deactivating the hyphen character. They are redef
%    when the language is switched to Czech/Slovak. At that mo
%    the hyphen is also activated if split hyphens were requested
%    \cs{splithyphe

%    When the language is de-activated, de-activate the hyphen
%    restore the bogus definitions of these mac

%    \begin{macroc
\let\cs@activatehyphens\r
\let\cs@deactivatehyphens\r
\expandafter\addto\csname extras\CurrentOption\endcsna
  \def\cs@activatehyphens{\bbl@activate{
  \def\cs@deactivatehyphens{\bbl@deactivate{
  \ifcs@splithyphens\cs@activatehyphens
\expandafter\addto\csname noextras\CurrentOption\endcsna
  \cs@deactivatehyp
  \let\cs@activatehyphens\r
  \let\cs@deactivatehyphens\re
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@loosen
%  \begin{macro}{\loosen
%    One of the most common situations where an active hyphen will
%    work properly is the \cs{looseness} primitive. Change its defini
%    so that it deactivates the hyphen if nee

%    \begin{macroc
\let\cs@looseness\loose
\def\loosene
  \ifcs@splithyp
    \cs@deactivatehyphens\afterassignment\cs@activatehyphens
  \cs@loosen
%    \end{macroc
%  \end{ma
%  \end{ma

%  \begin{macro}{\cs@selectlangu
%  \begin{macro}{\cs@main@langu
%    Specifying the |nocaptions| option means that captions and d
%    are not redefined by default, but they can be switched on l
%    with \cs{captionsczech} and/or \cs{dateczec

%    We mimic this behavior by redefining \cs{selectlanguage}.
%    macro is called once at the beginning of the document to set
%    main language of the document.  If this is \cs{cs@main@langua
%    it disables the macros for setting captions and date.  In
%    case, it restores the original definition of \cs{selectlangu
%    and expands

%    The definition of \cs{selectlanguage} can be shared between C
%    and Slovak; the actual language is stored in \cs{cs@main@langua

%    \begin{macroc
\ifx\cs@nocaptions\@undefined\
  \edef\cs@main@language{\CurrentOpt
  \ifx\cs@origselect\@undef
    \let\cs@origselect=\selectlang
    \def\selectlangua
      \let\selectlanguage\cs@origse
      \ifx\bbl@main@language\cs@main@lang
        \expandafter\cs@selectlang
      \
        \expandafter\selectlang

    \def\cs@selectlangua
      \cs@tempdisable{captio
      \cs@tempdisable{da
      \selectlangu
%    \end{macroc

%  \begin{macro}{\cs@tempdisa
%    \cs{cs@tempdisable} disables a language setup macro temporar
%    i.e. the macro with the name of \meta{\#1}|\bbl@main@langu
%    just restores the original definition and purges the saved m
%    from mem

%    \begin{macroc
    \def\cs@tempdisable
      \def\@tempa{cs@
      \def\@tempb{#1\bbl@main@langua
      \expandafter\expandafter\expandafter
        \expandafter \csname\expandafter \@tempa \expandafter\endcs
        \csname \@tempb \endcs
      \expandafter\edef\csname \@tempb \endcsna
        \let \expandafter\noexpand \csname \@tempb \endcs
          \expandafter\noexpand \csname \@tempa \endcs
        \let \expandafter\noexpand\csname \@tempa \endcs
          \noexpand\@undefin
%    \end{macroc
%  \end{ma

%    These macros are not needed, once the initialization is o

%    \begin{macroc
    \@onlypreamble\cs@main@lang
    \@onlypreamble\cs@origse
    \@onlypreamble\cs@selectlang
    \@onlypreamble\cs@tempdis


%    \end{macroc
%  \end{ma
%  \end{ma

%    The encoding of mathematical fonts should be changed to IL2.
%    allows to use accented letter in some font families.  Besi
%    documents do not use CM fonts if there are equivalents in CS-fo
%    so there is no need to have both bitmaps of CM-font and CS-f

%    \cs{@font@warning} and \cs{@font@info} are temporarily redef
%    to avoid annoying font warni

%    \begin{macroc
\ifx\cs@compat@plain\@undef
\ifx\cs@check@enc\@undefined\
  \def\cs@check@
    \ifx\encodingdefault\cs@i
      \let\cs@warn\@font@warning \let\@font@warning\@go
      \let\cs@info\@font@info    \let\@font@info\@go
      \SetSymbolFont{operators}{normal}{\cs@iltw@}{cmr}{m
      \SetSymbolFont{operators}{bold}{\cs@iltw@}{cmr}{bx
      \SetMathAlphabet\mathbf{normal}{\cs@iltw@}{cmr}{bx
      \SetMathAlphabet\mathit{normal}{\cs@iltw@}{cmr}{m}
      \SetMathAlphabet\mathrm{normal}{\cs@iltw@}{cmr}{m
      \SetMathAlphabet\mathsf{normal}{\cs@iltw@}{cmss}{m
      \SetMathAlphabet\mathtt{normal}{\cs@iltw@}{cmtt}{m
      \SetMathAlphabet\mathbf{bold}{\cs@iltw@}{cmr}{bx
      \SetMathAlphabet\mathit{bold}{\cs@iltw@}{cmr}{bx}
      \SetMathAlphabet\mathrm{bold}{\cs@iltw@}{cmr}{bx
      \SetMathAlphabet\mathsf{bold}{\cs@iltw@}{cmss}{bx
      \SetMathAlphabet\mathtt{bold}{\cs@iltw@}{cmtt}{m
      \let\@font@warning\cs@warn \let\cs@warn\@undef
      \let\@font@info\cs@info    \let\cs@info\@undef

    \let\cs@check@enc\@undefi
  \AtBeginDocument{\cs@check@


%    \end{macroc

%  \begin{macro}{cs@undoil

%    The thing is that \LaTeXe{} core only supports the T1 enco
%    and does not bother changing the uc/lc/sfcodes when enco
%    is switched. :( However, the IL2 encoding \emph{does} ch
%    these codes, so if encoding is switched back from IL2, we
%    also undo the effect of this change to be compatible
%    \LaTeXe.  OK, this is not the right\textsuperscript{TM} solu
%    but it works.  Cheers to Petr Ol\v s\

%    \begin{macroc
\def\cs@undoilt
  \uccode158=208 \lccode158=158 \sfcode158=
  \sfcode159=
  \uccode165=133 \lccode165=165 \sfcode165=
  \uccode169=137 \lccode169=169 \sfcode169=
  \uccode171=139 \lccode171=171 \sfcode171=
  \uccode174=142 \lccode174=174 \sfcode174=
  \uccode181
  \uccode185
  \uccode187
  \uccode190=0   \lccode1
  \uccode254=222 \lccode254=254 \sfcode254=
  \uccode255=223 \lccode255=255 \sfcode255=1
%    \end{macroc
%  \end{ma

%  \begin{macro}{@@enc@upd

%    Redefine the \LaTeXe{} internal function \cs{@@enc@update
%    change the encodings correc

%    \begin{macroc
\ifx\cs@enc@update\@undef
\ifx\@@enc@update\@undefined\
  \let\cs@enc@update\@@enc@up
  \def\@@enc@update{\ifx\cf@encoding\cs@iltw@\cs@undoiltw
    \cs@enc@up
    \expandafter\ifnum\csname l@\languagename\endcsname=\the\lang
      \expandafter
      \csname l@\languagename:\f@encoding\endcsname\r
      \
        \expandafter\expandafter\expandafter
          \expandafter\cs
          \expandafter l\expandafter @\expandafter\language
          \expandafter\endcsname\csname l@\languagename:\f@encoding\endcs

      \language=\csname l@\languagename\endcsname\r

\f
%    \end{macroc
%  \end{ma

%    The macro |\ldf@finish| takes care of looking f
%    configuration file, setting the main language to be switche
%    at |\begin{document}| and resetting the category cod
%    \texttt{@} to its original va
% \changes{czech-1.3h}{1996/11/02}{Now use \cs{ldf@finish} to wrap
%    \begin{macroc
\ldf@finish\CurrentOp
%</c
%    \end{macroc

% \Fi

%% \CharacterT
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x
%%   Digits        \0\1\2\3\4\5\6\7
%%   Exclamation   \!     Double quote  \"     Hash (number
%%   Dollar        \$     Percent       \%     Ampersand
%%   Acute accent  \'     Left paren    \(     Right paren
%%   Asterisk      \*     Plus          \+     Comma
%%   Minus         \-     Point         \.     Solidus
%%   Colon         \:     Semicolon     \;     Less than
%%   Equals        \=     Greater than  \>     Question mar
%%   Commercial at \@     Left bracket  \[     Backslash
%%   Right bracket \]     Circumflex    \^     Underscore
%%   Grave accent  \`     Left brace    \{     Vertical bar
%%   Right brace   \}     Tilde

\endi
