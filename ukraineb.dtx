% \iffalse meta-commen

% Copyright 1989-2008 Johannes L. Braams and any individual author
% listed elsewhere in this file.  All rights reserved
%
% This file is part of the Babel system
% -------------------------------------
%
% It may be distributed and/or modified under th
% conditions of the LaTeX Project Public License, either version 1.
% of this license or (at your option) any later version
% The latest version of this license is i
%   http://www.latex-project.org/lppl.tx
% and version 1.3 or later is part of all distributions of LaTe
% version 2003/12/01 or later
%
% This work has the LPPL maintenance status "maintained"
%
% The Current Maintainer of this work is Johannes Braams
%
% The list of all files belonging to the Babel system i
% given in the file `manifest.bbl. See also `legal.bbl' for additiona
% information
%
% The list of derived (unpacked) files belonging to the distributio
% and covered by LPPL is defined by the unpacking scripts (wit
% extension .ins) which are part of the distribution
% \f
% \CheckSum{1472

% \iffals
%    Tell the \LaTeX\ system who we are and write an entry on th
%    transcript
%<*dtx
\ProvidesFile{ukraineb.dtx
%</dtx
%<code>\ProvidesLanguage{ukraineb
        [2008/03/21 v1.1l Ukrainian support from the babel system

%% File `ukraineb.dtx
%% Babel package for LaTeX version 2
%% Copyright (C) 1989 - 200
%%           by Johannes Braams, TeXnie

%% ukraineb Language Definition Fil
%% Copyright (C) 1997 - 200
%%           by Andrij Shvaika ashv at icmp.lviv.u

%% derived from the Russianb Language Definition Fil
%% Copyright (C) 1995 - 200
%%           by Olga Lapko cyrtug at mir.msk.s
%%              Johannes Braams, TeXnie
% adapted to the new T2 and X2 Cyrillic encoding
%           by Vladimir Volovich TeX at vvv.vsu.r
%              Werner Lemberg wl at gnu.or

%% Please report errors to: J.L. Braam
%%                          babel at braams.xs4all.n

%<*filedriver
\documentclass{ltxdoc
\newcommand\TeXhax{\TeX hax
\newcommand\babel{\textsf{babel}
\newcommand\langvar{$\langle \it lang \rangle$
\newcommand\note[1]{
\newcommand\Lopt[1]{\textsf{#1}
\newcommand\file[1]{\texttt{#1}
\newcommand\pkg[1]{\texttt{#1}
\begin{document
 \DocInput{ukraineb.dtx
\end{document
%</filedriver
%\f
% \GetFileInfo{ukraineb.dtx

% \changes{ukraineb-1.1e}{1999/08/19}{replaced all \cs{penalty}\cs{@M
%    with \cs{nobreak}

%  \section{The Ukrainian language

%    The file \file{\filename}\footnote{The file described in thi
%    section has version number \fileversion
%    This file was derived from the \file{russianb.dtx} version 1.1g.
%    defines all the language-specific macros for the Ukrainia
%    language. It needs the file \file{cyrcod} for success documentatio
%    with Ukrainian encodings (see below)

%    For this language the character |"| is made active. I
%    table~\ref{tab:ukrainian-quote} an overview is given of it
%    purpose.

%    \begin{table}[htb
%      \begin{center
%      \begin{tabular}{lp{8cm}
%       \verb="|= & disable ligature at this position.               \
%       |"-| & an explicit hyphen sign, allowing hyphenatio
%                   in the rest of the word.                         \
%       |"---| & Cyrillic emdash in plain text.                      \
%       |"--~| & Cyrillic emdash in compound names (surnames).       \
%       |"--*| & Cyrillic emdash for denoting direct speech.         \
%       |""| & like |"-|, but producing no hyphen sig
%                   (for compund words with hyphen, e.g.\ |x-""y
%                   or some other signs  as ``disable/enable'').     \
%       |"~| & for a compound word mark without a breakpoint.        \
%       |"=| & for a compound word mark with a breakpoint, allowin
%              hyphenation in the composing words.                   \
%       |",| & thinspace for initials with a breakpoin
%               in following surname.                                \
%       |"`| & for German left double quote
%                   (looks like ,\kern-0.08em,).                     \
%       |"'| & for German right double quotes (looks like ``).       \\%^^A'
%       |"<| & for French left double quotes (looks like $<\!\!<$).  \
%       |">| & for French right double quotes (looks like $>\!\!>$). \
%      \end{tabular
%      \caption{The extra definitions mad
%               by \file{ukraineb}}\label{tab:ukrainian-quote
%      \end{center
%    \end{table

%    The quotes in table~\ref{tab:ukrainian-quote} (see, als
%    table~\ref{tab:russian-quote}) can also be typeset by using the command
%    in table~\ref{tab:umore-quote} (see, also table~\ref{tab:rmore-quote})

%    \begin{table}[htb
%      \begin{center
%      \begin{tabular}{lp{8cm}
%       |\cdash---| & Cyrillic emdash in plain text.                    \
%       |\cdash--~| & Cyrillic emdash in compound names (surnames).     \
%       |\cdash--*| & Cyrillic emdash for denoting direct speech.       \
%       |\glqq| & for German left double quote
%                    (looks like ,\kern-0.08em,).                       \
%       |\grqq| & for German right double quotes (looks like ``).       \\%^^A'
%       |\flqq| & for French left double quotes (looks like $<\!\!<$).  \
%       |\frqq| & for French right double quotes (looks like $>\!\!>$). \
%       |\dq|   & the original quotes character (|"|).                  \
%      \end{tabular
%      \caption{More commands which produce quotes, define
%               by \babel}\label{tab:umore-quote
%      \end{center
%    \end{table

%    The French quotes are also available as ligatures `|<<|' and `|>>|' i
%    8-bit Cyrillic font encodings (\texttt{LCY}, \texttt{X2}, \texttt{T2*}
%    and as `|<|' and `|>|' characters in 7-bit Cyrillic font encoding
%    (\texttt{OT2} and \texttt{LWN})

%    The quotation marks traditionally used in Ukrainian and Russia
%    languages were borrowed from other languages (e.g. French and German
%    so they keep their original names

% \StopEventually{

%    The macro |\LdfInit| takes care of preventing that this file is loade
%    more than once, checking the category code of the \texttt{@} sign, etc

%    \begin{macrocode
%<*code
\LdfInit{ukrainian}{captionsukrainian
%    \end{macrocode

%    When this file is read as an option, i.e., by the |\usepackage
%    command, \texttt{ukraineb} will be an `unknown' language, in which cas
%    we have to make it known. So we check for the existence of |\l@ukrainian
%    to see whether we have to do something here

%    \begin{macrocode
\ifx\l@ukrainian\@undefine
  \@nopatterns{Ukrainian
  \adddialect\l@ukrainian
\f
%    \end{macrocode

%  \begin{macro}{\latinencoding

%    We need to know the encoding for text that is supposed to be which i
%    active at the end of the \babel\ package. If the \pkg{fontenc} packag
%    is loaded later, then\ldots too bad

%    \begin{macrocode
\let\latinencoding\cf@encodin
%    \end{macrocode

%  \end{macro

%    The user may choose between different available Cyrilli
%    encodings---e.g., \texttt{X2}, \texttt{LCY}, or \texttt{LWN}.\
%    Hopefully, \texttt{X2} will eventually replace the two latter encoding
%    (\texttt{LCY} and \texttt{LWN}).\@ If the user wants to use anothe
%    font encoding than the default (\texttt{T2A}), he has to load th
%    corresponding file \emph{before} \file{ukraineb.sty}. This may be don
%    in the following way

%    \begin{verbatim
%      % override the default X2 encoding used in Babe
%      \usepackage[LCY,OT1]{fontenc
%      \usepackage[english,ukrainian]{babel
%    \end{verbatim
%    \unski

%    Note: for the Ukrainian language, the \texttt{T2A} encoding is better tha
%    \texttt{X2}, because \texttt{X2} does not contain Latin letters, an
%    users should be very careful to switch the language every time the
%    want to typeset a Latin word inside a Ukrainian phrase or vice versa

%    We parse the |\cdp@list| containing the encodings known to \LaTeX\ i
%    the order they were loaded. We set the |\cyrillicencoding| to th
%    \emph{last} loaded encoding in the list of supported Cyrilli
%    encodings: \texttt{OT2}, \texttt{LWN}, \texttt{LCY}, \texttt{X2}
%    \texttt{T2C}, \texttt{T2B}, \texttt{T2A}, if any

%    \begin{macrocode
\def\reserved@a#1#2{
   \edef\reserved@b{#1}
   \edef\reserved@c{#2}
   \ifx\reserved@b\reserved@
     \let\cyrillicencoding\reserved@
   \fi
\def\cdp@elt#1#2#3#4{
   \reserved@a{#1}{OT2}
   \reserved@a{#1}{LWN}
   \reserved@a{#1}{LCY}
   \reserved@a{#1}{X2}
   \reserved@a{#1}{T2C}
   \reserved@a{#1}{T2B}
   \reserved@a{#1}{T2A}
\cdp@lis
%    \end{macrocode

%    Now, if |\cyrillicencoding| is undefined, then the user did not loa
%    any of supported encodings. So, we have to set |\cyrillicencoding| t
%    some default value. We test the presence of the encoding definitio
%    files in the order from less preferable to more preferable encodings
%    We use the lowercase names (i.e., \file{lcyenc.def} instead o
%    \file{LCYenc.def})

%    \begin{macrocode
\ifx\cyrillicencoding\undefine
  \IfFileExists{ot2enc.def}{\def\cyrillicencoding{OT2}}\rela
  \IfFileExists{lwnenc.def}{\def\cyrillicencoding{LWN}}\rela
  \IfFileExists{lcyenc.def}{\def\cyrillicencoding{LCY}}\rela
  \IfFileExists{x2enc.def}{\def\cyrillicencoding{X2}}\rela
  \IfFileExists{t2cenc.def}{\def\cyrillicencoding{T2C}}\rela
  \IfFileExists{t2benc.def}{\def\cyrillicencoding{T2B}}\rela
  \IfFileExists{t2aenc.def}{\def\cyrillicencoding{T2A}}\rela
%    \end{macrocode

%    If |\cyrillicencoding| is still undefined, then the user seems not t
%    have a properly installed distribution. A fatal error

%    \begin{macrocode
  \ifx\cyrillicencoding\undefine
    \PackageError{babel}
      {No Cyrillic encoding definition files were found}
      {Your installation is incomplete.\MessageBrea
       You need at least one of the following files:\MessageBrea
       \space\spac
       x2enc.def, t2aenc.def, t2benc.def, t2cenc.def,\MessageBrea
       \space\spac
       lcyenc.def, lwnenc.def, ot2enc.def.}
  \els
%    \end{macrocode

%    We avoid |\usepackage[\cyrillicencoding]{fontenc}| because we don'
%    want to force the switch of |\encodingdefault|

%    \begin{macrocode
    \lowercas
      \expandafter{\expandafter\input\cyrillicencoding enc.def\relax}
  \f
\f
%    \end{macrocode

%    \begin{verbatim
%      \PackageInfo{babel
%        {Using `\cyrillicencoding' as a default Cyrillic encoding}
%    \end{verbatim
%    \unski

%    \begin{macrocode
\DeclareRobustCommand{\Ukrainian}{
  \fontencoding\cyrillicencoding\selectfon
  \let\encodingdefault\cyrillicencodin
  \expandafter\set@hyphenmins\ukrainianhyphenmin
  \language\l@ukrainian}
\DeclareRobustCommand{\English}{
  \fontencoding\latinencoding\selectfon
  \let\encodingdefault\latinencodin
  \expandafter\set@hyphenmins\englishhyphenmin
  \language\l@english}
\let\Ukr\Ukrainia
\let\Eng\Englis
\let\cyrillictext\Ukrainia
\let\cyr\Ukrainia
%    \end{macrocode

%    Since the \texttt{X2} encoding does not contain Latin letters, w
%    should make some redefinitions of \LaTeX\ macros which implicitl
%    produce Latin letters

%    \begin{macrocode
\expandafter\ifx\csname T@X2\endcsname\relax\els
%    \end{macrocode

%    We put |\latinencoding| in braces to avoid problems wit
%    |\@alph| inside minipages (e.g., footnotes inside minipages) wher
%    |\@alph| is expanded and we get for example `|\fontencoding OT1|
%    (|\fontencoding| is robust)

%    \begin{macrocode
  \def\@alph#1{{\fontencoding{\latinencoding}\selectfon
    \ifcase#1\o
      a\or b\or c\or d\or e\or f\or g\or h\o
      i\or j\or k\or l\or m\or n\or o\or p\o
      q\or r\or s\or t\or u\or v\or w\or x\o
      y\or z\else\@ctrerr\fi}}
  \def\@Alph#1{{\fontencoding{\latinencoding}\selectfon
    \ifcase#1\o
      A\or B\or C\or D\or E\or F\or G\or H\o
      I\or J\or K\or L\or M\or N\or O\or P\o
      Q\or R\or S\or T\or U\or V\or W\or X\o
      Y\or Z\else\@ctrerr\fi}}
%    \end{macrocode

%    Unfortunately, the commands |\AA| and |\aa| are not encoding dependen
%    in \LaTeX\ (unlike e.g., |\oe| or |\DH|). They are defined as |\r{A}| an
%    |\r{a}|. This leads to unpredictable results when the font encodin
%    does not contain the Latin letters `A' and `a' (like \texttt{X2})

%    \begin{macrocode
  \DeclareTextSymbolDefault{\AA}{OT1
  \DeclareTextSymbolDefault{\aa}{OT1
  \DeclareTextCommand{\aa}{OT1}{\r a
  \DeclareTextCommand{\AA}{OT1}{\r A
\f
%    \end{macrocode

%    The following block redefines the character class of uppercase Gree
%    letters and some accents, if it is equal to 7 (variable family), t
%    avoid incorrect results if the font encoding in some math family doe
%    not contain these characters in places of OT1 encoding. The code wa
%    taken from |amsmath.dtx|. See comments and further explanation there

% \changes{ukraineb-1.1i}{2001/02/21}{As this code generates
%    textfont 7 error it is commented out for now.
%    \begin{macrocode
% \begingroup\catcode`\"=1
% % uppercase greek letters
% \def\@tempa#1{\expandafter\@tempb\meaning#1\relax\relax\relax\rela
%   "0000\@nil#1
% \def\@tempb#1"#2#3#4#5#6\@nil#7{
%   \ifnum"#2=7 \count@"1#3#4#5\rela
%     \ifnum\count@<"1000 \else \global\mathchardef#7="0#3#4#5\relax \f
%   \fi
% \@tempa\Gamma\@tempa\Delta\@tempa\Theta\@tempa\Lambda\@tempa\X
% \@tempa\Pi\@tempa\Sigma\@tempa\Upsilon\@tempa\Phi\@tempa\Ps
% \@tempa\Omeg
% % some accents
% \def\@tempa#1#2\@nil{\def\@tempc{#1}}\def\@tempb{\mathaccent
% \expandafter\@tempa\hat\relax\relax\@ni
% \ifx\@tempb\@temp
%   \def\@tempa#1\@nil{#1}
%   \def\@tempb#1{\afterassignment\@tempa\mathchardef\@tempc=}
%   \def\do#1"#2{
%   \def\@tempd#1{\expandafter\@tempb#1\@ni
%     \ifnum\@tempc>"FF
%       \xdef#1{\mathaccent"\expandafter\do\meaning\@tempc\space}
%     \fi
%   \@tempd\hat\@tempd\check\@tempd\tilde\@tempd\acute\@tempd\grav
%   \@tempd\dot\@tempd\ddot\@tempd\breve\@tempd\ba
% \f
% \endgrou
%    \end{macrocode

%    The user must use the \pkg{inputenc} package when any 8-bit Cyrilli
%    font encoding is used, selecting one of the Cyrillic input encodings
%    We do not assume any default input encoding, so the user shoul
%    explicitly call the \pkg{inputenc} package by |\usepackage{inputenc}|
%    We also removed |\AtBeginDocument|, so \pkg{inputenc} should be use
%    before \babel

% \changes{ukraineb-1.1f}{1999/08/27}{Made not using inputenc
%    warning instead of an error
%    \begin{macrocode
\@ifpackageloaded{inputenc}{}{
  \def\reserved@a{LWN}
  \ifx\reserved@a\cyrillicencoding\els
    \def\reserved@a{OT2}
    \ifx\reserved@a\cyrillicencoding\els
      \PackageWarning{babel}
        {No input encoding specified for Ukrainian language
  \fi\fi
%    \end{macrocode

%    Now we define two commands that offer the possibility to switch betwee
%    Cyrillic and Roman encodings

%  \begin{macro}{\cyrillictext
%  \begin{macro}{\latintext

%    The command |\cyrillictext| will switch from Latin font encoding to th
%    Cyrillic font encoding, the command |\latintext| switches back. Thi
%    assumes that the `normal' font encoding is a Latin one. These command
%    are \emph{declarations}, for shorter peaces of text the command
%    |\textlatin| and |\textcyrillic| can be used

% \changes{ukraineb-1.1j}{2003/10/12}{\cs{latintext} is alread
%    defined by the core of \babel
%    \begin{macrocode
%\DeclareRobustCommand{\latintext}{
%  \fontencoding{\latinencoding}\selectfon
%  \def\encodingdefault{\latinencoding}
\let\lat\latintex
%    \end{macrocode

%  \end{macro
%  \end{macro

%  \begin{macro}{\textcyrillic
%  \begin{macro}{\textlatin

%    These commands take an argument which is then typeset using th
%    requested font encoding
% \changes{ukraineb-1.1j}{2003/10/12}{\cs{latintext} is alread
%    defined by the core of \babel
%    \begin{macrocode
\DeclareTextFontCommand{\textcyrillic}{\cyrillictext
%\DeclareTextFontCommand{\textlatin}{\latintext
%    \end{macrocode

%  \end{macro
%  \end{macro

%    We make the \Te
%    \begin{macrocode
%\ifx\ltxTeX\undefined\let\ltxTeX\TeX\f
%\ProvideTextCommandDefault{\TeX}{\textlatin{\ltxTeX}
%    \end{macrocode
%    and \LaTeX\ logos encoding independent
%    \begin{macrocode
%\ifx\ltxLaTeX\undefined\let\ltxLaTeX\LaTeX\f
%\ProvideTextCommandDefault{\LaTeX}{\textlatin{\ltxLaTeX}
%    \end{macrocode

%    The next step consists of defining commands to switch to (an
%    from) the Ukrainian language

% \begin{macro}{\captionsukrainian

%    The macro |\captionsukrainian| defines all strings used in the fou
%    standard document classes provided with \LaTeX. The two commands |\cyr
%    and |\lat| activate Cyrillic resp.\ Latin encoding
% \changes{ukraineb-1.1d}{1999/04/03}{replace \cs{CYRUKRI} wit
%    \cs{CYRII} in \cs{authorname}
% \changes{ukraineb-1.1g}{2000/09/20}{Added \cs{glossaryname}
% \changes{ukraineb-1.1h}{2001/02/13}{Added translation fo
%    `Glossary'
%    \begin{macrocode
\addto\captionsukrainian{
  \def\prefacename{{\cyr\CYRV\cyrs\cyrt\cyru\cyrp}}
% \def\prefacename{{\cyr\CYRP\cyre\cyrr\cyre\cyrd\cyrm\cyro\cyrv\cyra}}
  \def\refname{
    {\cyr\CYRL\cyrii\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyra}}
%  \def\refname{
%    {\cyr\CYRP\cyre\cyrr\cyre\cyrl\cyrii\cyr
%         \ \cyrp\cyro\cyrs\cyri\cyrl\cyra\cyrn\cyrsftsn}}
  \def\abstractname{
    {\cyr\CYRA\cyrn\cyro\cyrt\cyra\cyrc\cyrii\cyrya}}
%  \def\abstractname{{\cyr\CYRR\cyre\cyrf\cyre\cyrr\cyra\cyrt}}
  \def\bibname{
    {\cyr\CYRB\cyrii\cyrb\cyrl\cyrii\cyro\cyrgup\cyrr\cyra\cyrf\cyrii\cyrya}}
% \def\bibname{{\cyr\CYRL\cyrii\cyrt\cyre\cyrr\cyra\cyrt\cyru\cyrr\cyra}}
  \def\chaptername{{\cyr\CYRR\cyro\cyrz\cyrd\cyrii\cyrl}}
%  \def\chaptername{{\cyr\CYRG\cyrl\cyra\cyrv\cyra}}
  \def\appendixname{{\cyr\CYRD\cyro\cyrd\cyra\cyrt\cyro\cyrk}}
  \def\contentsname{{\cyr\CYRZ\cyrm\cyrii\cyrs\cyrt}}
  \def\listfigurename{{\cyr\CYRP\cyre\cyrr\cyre\cyrl\cyrii\cyr
         \ \cyrii\cyrl\cyryu\cyrs\cyrt\cyrr\cyra\cyrc\cyrii\cyrishrt}}
  \def\listtablename{{\cyr\CYRP\cyre\cyrr\cyre\cyrl\cyrii\cyr
         \ \cyrt\cyra\cyrb\cyrl\cyri\cyrc\cyrsftsn}}
  \def\indexname{{\cyr\CYRP\cyro\cyrk\cyra\cyrzh\cyrch\cyri\cyrk}}
  \def\authorname{{\cyr\CYRII\cyrm\cyre\cyrn\cyrn\cyri\cyrishr
         \ \cyrp\cyro\cyrk\cyra\cyrzh\cyrch\cyri\cyrk}}
  \def\figurename{{\cyr\CYRR\cyri\cyrs.}}
%  \def\figurename{\cyr\CYRR\cyri\cyrs\cyru\cyrn\cyro\cyrk}}
  \def\tablename{{\cyr\CYRT\cyra\cyrb\cyrl.}}
%  \def\tablename{\cyr\CYRT\cyra\cyrb\cyrl\cyri\cyrc\cyrya}}
  \def\partname{{\cyr\CYRCH\cyra\cyrs\cyrt\cyri\cyrn\cyra}}
  \def\enclname{{\cyr\cyrv\cyrk\cyrl\cyra\cyrd\cyrk\cyra}}
  \def\ccname{{\cyr\cyrk\cyro\cyrp\cyrii\cyrya}}
  \def\headtoname{{\cyr\CYRD\cyro}}
  \def\pagename{{\cyr\cyrs.}}
%  \def\pagename{{\cyr\cyrs\cyrt\cyro\cyrr\cyrii\cyrn\cyrk\cyra}}
  \def\seename{{\cyr\cyrd\cyri\cyrv.}}
  \def\alsoname{{\cyr\cyrd\cyri\cyrv.\ \cyrt\cyra\cyrk\cyro\cyrzh}
  \def\proofname{{\cyr\CYRD\cyro\cyrv\cyre\cyrd\cyre\cyrn\cyrn\cyrya}}
  \def\glossaryname{{\cyr\CYRS\cyrl\cyro\cyrv\cyrn\cyri\cyrk\
                   \cyrt\cyre\cyrr\cyrm\cyrii\cyrn\cyrii\cyrv}}

%    \end{macrocode

% \end{macro

% \begin{macro}{\dateukrainian

%    The macro |\dateukrainian| redefines the command |\today| to produc
%    Ukrainian dates

%    \begin{macrocode
\def\dateukrainian{
  \def\today{\number\day~\ifcase\month\o
    \cyrs\cyrii\cyrch\cyrn\cyrya\o
    \cyrl\cyryu\cyrt\cyro\cyrg\cyro\o
    \cyrb\cyre\cyrr\cyre\cyrz\cyrn\cyrya\o
    \cyrk\cyrv\cyrii\cyrt\cyrn\cyrya\o
    \cyrt\cyrr\cyra\cyrv\cyrn\cyrya\o
    \cyrch\cyre\cyrr\cyrv\cyrn\cyrya\o
    \cyrl\cyri\cyrp\cyrn\cyrya\o
    \cyrs\cyre\cyrr\cyrp\cyrn\cyrya\o
    \cyrv\cyre\cyrr\cyre\cyrs\cyrn\cyrya\o
    \cyrzh\cyro\cyrv\cyrt\cyrn\cyrya\o
    \cyrl\cyri\cyrs\cyrt\cyro\cyrp\cyra\cyrd\cyra\o
    \cyrg\cyrr\cyru\cyrd\cyrn\cyrya\f
    \space\number\year~\cyrr.}
%    \end{macrocode

% \end{macro

% \begin{macro}{\extrasukrainian

%    The macro |\extrasukrainian| will perform all the extra definition
%    needed for the Ukrainian language. The macro |\noextrasukrainian
%    is used to cancel the actions of |\extrasukrainian|

%    The first action we define is to switch on the selected Cyrilli
%    encoding whenever we enter `ukrainian'

%    \begin{macrocode
\addto\extrasukrainian{\cyrillictext
%    \end{macrocode

%    When the encoding definition file was processed by \LaTeX\ the curren
%    font encoding is stored in |\latinencoding|, assuming that \LaTeX\ use
%    \texttt{T1} or \texttt{OT1} as default. Therefore we switch back t
%    |\latinencoding| whenever the Ukrainian language is no longer `active'

%    \begin{macrocode
\addto\noextrasukrainian{\latintext
%    \end{macrocode

%    Next we must allow hyphenation in the Ukrainian words with apostroph
%    whenever we enter `ukrainian'. This solution was proposed b
%    Vladimir Volovich <vvv@vvv.vsu.ru

%    \begin{macrocode
\addto\extrasukrainian{\lccode`\'=`\'
\addto\noextrasukrainian{\lccode`\'=0
%    \end{macrocode

%  \begin{macro}{\verbatim@font

%    In order to get both Latin and Cyrillic letters in verbatim text w
%    need to change the definition of an internal \LaTeX\ command somewhat

%    \begin{macrocode
%\def\verbatim@font{
%  \let\encodingdefault\latinencodin
%  \normalfont\ttfamil
%  \expandafter\def\csname\cyrillicencoding-cmd\endcsname##1##2{
%    \ifx\protect\@typeset@protec
%      \begingroup\UseTextSymbol\cyrillicencoding##1\endgrou
%    \else\noexpand##1\fi}
%    \end{macrocode

%  \end{macro

%    The category code of the characters `\texttt{:}', `\texttt{;}'
%    `\texttt{!}', and `\texttt{?}' is made |\active| to insert a littl
%    white space

%    For Ukrainian (as well as for Russian and German) the \texttt{"
%    character also is made active

%    Note: It is \emph{very} questionable whether the Russian typesettin
%    tradition requires additional spacing before those punctuation signs
%    Therefore, we make the corresponding code optional. If you need it
%    then define the \texttt{frenchpunct} docstrip option i
%    \file{babel.ins}

%    Borrowed from french
%    Some users dislike automatic insertion of a space befor
%    `double punctuation', and prefer to decide themselves whether
%    space should be added or not; so a hook |\NoAutoSpaceBeforeFDP
%    is provided: if this command is added (in file |ukraineb.cfg|, o
%    anywhere in a document) |ukraineb| will respect your typing, an
%    introduce a suitable space before `double punctuation' \emph{i
%    and only if} a space is typed in the source file before thos
%    signs

%    The command |\AutoSpaceBeforeFDP| switches back to th
%    default behavior of |ukraineb|

%    \begin{macrocode
%<*frenchpunct
\initiate@active@char{:
\initiate@active@char{;
%</frenchpunct
%<*frenchpunct|spanishligs
\initiate@active@char{!
\initiate@active@char{?
%</frenchpunct|spanishligs
\initiate@active@char{"
%    \end{macrocode

%    The code above is necessary because we need extra active characters
%    The character |"| is used as indicated i
%    table~\ref{tab:ukrainian-quote}

%    We specify that the Ukrainian group of shorthands should be used

%    \begin{macrocode
\addto\extrasukrainian{\languageshorthands{ukrainian}
%    \end{macrocode

%    These characters are `turned on' once, later their definition ma
%    vary

%    \begin{macrocode
\addto\extrasukrainian{
%<frenchpunct>  \bbl@activate{:}\bbl@activate{;}
%<frenchpunct|spanishligs>  \bbl@activate{!}\bbl@activate{?}
  \bbl@activate{"}
\addto\noextrasukrainian{
%<frenchpunct>  \bbl@deactivate{:}\bbl@deactivate{;}
%<frenchpunct|spanishligs>  \bbl@deactivate{!}\bbl@deactivate{?}
  \bbl@deactivate{"}
%    \end{macrocode

%   The \texttt{X2} and \texttt{T2*} encodings do not contai
%   |spanish_shriek| and |spanish_query| symbols; as a consequence, th
%   ligatures `|?`|' and `|!`|' do not work with them (these characters ar
%   useless for Cyrillic texts anyway). But we define the shorthands t
%   emulate these ligatures (optionally)

%   We do not use |\latinencoding| here (but instead explicitly us
%   \texttt{OT1}) because the user may choose \texttt{T2A} to be the primar
%   encoding, but it does not contain these characters

%    \begin{macrocode
%<*spanishligs
\declare@shorthand{ukrainian}{?`}{\UseTextSymbol{OT1}\textquestiondown
\declare@shorthand{ukrainian}{!`}{\UseTextSymbol{OT1}\textexclamdown
%</spanishligs
%    \end{macrocode

% \begin{macro}{\ukrainian@sh@;@
% \begin{macro}{\ukrainian@sh@:@
% \begin{macro}{\ukrainian@sh@!@
% \begin{macro}{\ukrainian@sh@?@

%    We have to reduce the amount of white space before \texttt{;}
%    \texttt{:} and \texttt{!}. This should only happen in horizontal mode
%    hence the test with |\ifhmode|

%    \begin{macrocode
%<*frenchpunct
\declare@shorthand{ukrainian}{;}{
  \ifhmod
%    \end{macrocode

%    In horizontal mode we check for the presence of a `space', `unskip' i
%    it exists and place a |0.1em| kerning

%    \begin{macrocode
    \ifdim\lastskip>\z
      \unskip\nobreak\kern.1e
    \els
%    \end{macrocode
%    If no space has been typed, we add |\FDP@thinspace
%    which will b
%    defined, up to the user's wishes, as an automatic adde
%    thinspace, or as |\@empty|

%    \begin{macrocode
        \FDP@thinspac
    \f
  \f
%    \end{macrocode

%    Now we can insert a `|;|' character

%    \begin{macrocode
  \string;
%    \end{macrocode

%    The other definitions are very similar

%    \begin{macrocode
\declare@shorthand{ukrainian}{:}{
  \ifhmod
    \ifdim\lastskip>\z
      \unskip\nobreak\kern.1e
    \els
        \FDP@thinspac
    \f
  \f
  \string:
%    \end{macrocode

%    \begin{macrocode
\declare@shorthand{ukrainian}{!}{
  \ifhmod
    \ifdim\lastskip>\z
      \unskip\nobreak\kern.1e
    \els
        \FDP@thinspac
    \f
  \f
  \string!
%    \end{macrocode

%    \begin{macrocode
\declare@shorthand{ukrainian}{?}{
  \ifhmod
    \ifdim\lastskip>\z
      \unskip\nobreak\kern.1e
    \els
        \FDP@thinspac
    \f
  \f
  \string?
%    \end{macrocode

% \end{macro
% \end{macro
% \end{macro
% \end{macro


%  \begin{macro}{\AutoSpaceBeforeFDP
%  \begin{macro}{\NoAutoSpaceBeforeFDP
%  \begin{macro}{\FDP@thinspace
%    |\FDP@thinspace| is defined as unbreakabl
%    spaces if |\AutoSpaceBeforeFDP| is activated or as |\@empty| i
%    |\NoAutoSpaceBeforeFDP| is in use
%    The default is |\AutoSpaceBeforeFDP|
%    \begin{macrocode
\def\AutoSpaceBeforeFDP{
      \def\FDP@thinspace{\nobreak\kern.1em}
\def\NoAutoSpaceBeforeFDP{\let\FDP@thinspace\@empty
\AutoSpaceBeforeFD
%    \end{macrocode
%  \end{macro
%  \end{macro
%  \end{macro

%  \begin{macro}{\FDPon
%  \begin{macro}{\FDPoff

%     The next macros allow to switch on/off activeness of doubl
%     punctuation signs

%    \begin{macrocode
\def\FDPon{\bbl@activate{:}
        \bbl@activate{;}
        \bbl@activate{?}
        \bbl@activate{!}
\def\FDPoff{\bbl@deactivate{:}
        \bbl@deactivate{;}
        \bbl@deactivate{?}
        \bbl@deactivate{!}
%    \end{macrocode
%  \end{macro
%  \end{macro

%  \begin{macro}{\system@sh@:@
%  \begin{macro}{\system@sh@!@
%  \begin{macro}{\system@sh@?@
%  \begin{macro}{\system@sh@;@

%    When the active characters appear in an environment where thei
%    Ukrainian behaviour is not wanted they should give an `expected
%    result. Therefore we define shorthands at system level as well

%    \begin{macrocode
\declare@shorthand{system}{:}{\string:
\declare@shorthand{system}{;}{\string;
%</frenchpunct
%<*frenchpunct&!spanishligs
\declare@shorthand{system}{!}{\string!
\declare@shorthand{system}{?}{\string?
%</frenchpunct&!spanishligs
%    \end{macrocode

%  \end{macro
%  \end{macro
%  \end{macro
%  \end{macro

%    To be able to define the function of `|"|', we first define a couple o
%    `support' macros

%  \begin{macro}{\dq

%    We save the original double quote character in |\dq| to keep i
%    available, the math accent |\"| can now be typed as `|"|'

%    \begin{macrocode
\begingroup \catcode`\"1
\def\reserved@a{\endgrou
  \def\@SS{\mathchar"7019
  \def\dq{"}
\reserved@
%    \end{macrocode

%  \end{macro

%    Now we can define the doublequote macros: german and french quotes
%    We use definitions of these quotes made in babel.sty
%    The french quotes are contained in the \texttt{T2*} encodings

%    \begin{macrocode
\declare@shorthand{ukrainian}{"`}{\glqq
\declare@shorthand{ukrainian}{"'}{\grqq
\declare@shorthand{ukrainian}{"<}{\flqq
\declare@shorthand{ukrainian}{">}{\frqq
%    \end{macrocode

%    Some additional commands

%    \begin{macrocode
\declare@shorthand{ukrainian}{""}{\hskip\z@skip
\declare@shorthand{ukrainian}{"~}{\textormath{\leavevmode\hbox{-}}{-}
\declare@shorthand{ukrainian}{"=}{\nobreak-\hskip\z@skip
\declare@shorthand{ukrainian}{"|}{
  \textormath{\nobreak\discretionary{-}{}{\kern.03em}
              \allowhyphens}{}
%    \end{macrocode

%    The next two macros for |"-| and |"---| are somewhat different
%    We must check whether the second token is a hyphen character

%    \begin{macrocode
\declare@shorthand{ukrainian}{"-}{
%    \end{macrocode

%    If the next token is `|-|', we typeset an emdash, otherwise a hyphe
%    sign

%    \begin{macrocode
  \def\ukrainian@sh@tmp{
    \if\ukrainian@sh@next-\expandafter\ukrainian@sh@emdas
    \else\expandafter\ukrainian@sh@hyphen\f
  }
%    \end{macrocode

%    \TeX\ looks for the next token after the first `|-|': the meaning o
%    this token is written to |\ukrainian@sh@next| and |\ukrainian@sh@tmp| i
%    called

%    \begin{macrocode
  \futurelet\ukrainian@sh@next\ukrainian@sh@tmp
%    \end{macrocode

%    Here are the definitions of hyphen and emdash. First the hyphen

%    \begin{macrocode
\def\ukrainian@sh@hyphen{
  \nobreak\-\bbl@allowhyphens
%    \end{macrocode

%    For the emdash definition, there are the two parameters: we must `eat
%    two last hyphen signs of our emdash\dots
%    \begin{macrocode
\def\ukrainian@sh@emdash#1#2{\cdash-#1#2
%    \end{macrocode
%  \begin{macro}{\cdash
%    \dots\ these two parameters are useful for another macro
%    |\cdash|
%    \begin{macrocode
%\ifx\cdash\undefined % should be defined earlie
\def\cdash#1#2#3{\def\tempx@{#3}
\def\tempa@{-}\def\tempb@{~}\def\tempc@{*}
 \ifx\tempx@\tempa@\@Acdash\els
  \ifx\tempx@\tempb@\@Bcdash\els
   \ifx\tempx@\tempc@\@Ccdash\els
    \errmessage{Wrong usage of cdash}\fi\fi\fi
%    \end{macrocode
%   second parameter (or third for |\cdash|) shows what kind of emdas
%   to create in next ste
%      \begin{center
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{}
%       |"---| & ordinary (plain) Cyrillic emdash inside text
%       an unbreakable thinspace will be inserted before only in case o
%       a \textit{space} before the dash (it is necessary for dashes afte
%       display maths formulae: there could be lists, enumerations etc.
%       started with ``--- where $a$ is ...'' i.e., the dash starts a line)
%       (Firstly there were planned rather soft rules for user: he may pu
%       a space before the dash or not.  But it is difficult to place thi
%       thinspace automatically, i.e., by checking modes because afte
%       display formulae \TeX{} uses horizontal mode.  Maybe there is
%       misunderstanding?  Maybe there is another way?)  After a das
%       a breakable thinspace is always placed; \
%   \end{tabular
%   \end{center
%    \begin{macrocode
% What is more grammatically: .2em or .2\fontdimen6\font
\def\@Acdash{\ifdim\lastskip>\z@\unskip\nobreak\hskip.2em\f
  \cyrdash\hskip.2em\ignorespaces}
%    \end{macrocode
%      \begin{center
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{}
%       |"--~| & emdash in compound names or surname
%       (like Mendeleev--Klapeiron); this dash has no space character
%       around; after the dash some space is adde
%       |\exhyphenalty| \
%   \end{tabular
%   \end{center
%    \begin{macrocode
\def\@Bcdash{\leavevmode\ifdim\lastskip>\z@\unskip\f
 \nobreak\cyrdash\penalty\exhyphenpenalty\hskip\z@skip\ignorespaces}
%    \end{macrocode
%      \begin{center
%      \begin{tabular}{@{}p{.1\hsize}@{}p{.9\hsize}@{}
%       |"--*| & for denoting direct speech (a space like |\enskip
%       must follow the emdash); \
%   \end{tabular
%   \end{center
%    \begin{macrocode
\def\@Ccdash{\leavevmod
 \nobreak\cyrdash\nobreak\hskip.35em\ignorespaces}
%\f
%    \end{macrocode
%  \end{macro

%  \begin{macro}{\cyrdash
%   Finally the macro for ``body'' of the Cyrillic emdash
%   The |\cyrdash| macro will be defined in case this macro hasn't bee
%   defined in a fontenc file.  For T2* fonts, cyrdash will be placed i
%   the code of the English emdash thus it uses ligature |---|
%    \begin{macrocode
% Is there an IF necessary
\ifx\cyrdash\undefine
  \def\cyrdash{\hbox to.8em{--\hss--}
\f
%    \end{macrocode
%  \end{macro

%    Here a really new macro---to place thinspace between initials
%    This macro used instead of |\,| allows hyphenation in the followin
%    surname

%    \begin{macrocode
\declare@shorthand{ukrainian}{",}{\nobreak\hskip.2em\ignorespaces
%    \end{macrocode

%  \begin{macro}{\mdqon
%  \begin{macro}{\mdqoff
%    All that's left to do now is to  define a couple of command
%    for |"|
%    \begin{macrocode
\def\mdqon{\bbl@activate{"}
\def\mdqoff{\bbl@deactivate{"}
%    \end{macrocode
%  \end{macro
%  \end{macro

%    The Ukrainian hyphenation patterns can be used with |\lefthyphenmin
%    and |\righthyphenmin| set to~2
% \changes{ukraineb-1.1g}{2000/09/22}{Now use \cs{providehyphenmins} t
%    provide a default value
%    \begin{macrocode
\providehyphenmins{\CurrentOption}{\tw@\tw@
% temporary hack
\ifx\englishhyphenmins\undefine
  \def\englishhyphenmins{\tw@\thr@@
\f
%    \end{macrocode

%    Now the action |\extrasukrainian| has to execute is to make sure that th
%    command |\frenchspacing| is in effect. If this is not the case th
%    execution of |\noextrasukrainian| will switch it off again

%    \begin{macrocode
\addto\extrasukrainian{\bbl@frenchspacing
\addto\noextrasukrainian{\bbl@nonfrenchspacing
%    \end{macrocode

% \end{macro

%    Next we add a new enumeration style for Ukrainian manuscripts wit
%    Cyrillic letters, and later on we define some math operator names i
%    accordance with Ukrainian and Russian typesetting traditions

%  \begin{macro}{\Asbuk

%    We begin by defining |\Asbuk| which works like |\Alph|, but produce
%    (uppercase) Cyrillic letters intead of Latin ones. The letters CYRGUP
%    and SFTSN are skipped, as usual for such enumeration

%    \begin{macrocode
\def\Asbuk#1{\expandafter\@Asbuk\csname c@#1\endcsname
\def\@Asbuk#1{\ifcase#1\o
  \CYRA\or\CYRB\or\CYRV\or\CYRG\or\CYRD\or\CYRE\or\CYRIE\o
  \CYRZH\or\CYRZ\or\CYRI\or\CYRII\or\CYRYI\or\CYRISHRT\o
  \CYRK\or\CYRL\or\CYRM\or\CYRN\or\CYRO\or\CYRP\or\CYRR\o
  \CYRS\or\CYRT\or\CYRU\or\CYRF\or\CYRH\or\CYRC\or\CYRCH\o
  \CYRSH\or\CYRSHCH\or\CYRYU\or\CYRYA\else\@ctrerr\fi
%    \end{macrocode

%  \end{macro

%  \begin{macro}{\asbuk

%    The macro |\asbuk| is similar to |\alph|; it produces lowercas
%    Ukrainian letters

%    \begin{macrocode
\def\asbuk#1{\expandafter\@asbuk\csname c@#1\endcsname
\def\@asbuk#1{\ifcase#1\o
  \cyra\or\cyrb\or\cyrv\or\cyrg\or\cyrd\or\cyre\or\cyrie\o
  \cyrzh\or\cyrz\or\cyri\or\cyrii\or\cyryi\or\cyrishrt\o
  \cyrk\or\cyrl\or\cyrm\or\cyrn\or\cyro\or\cyrp\or\cyrr\o
  \cyrs\or\cyrt\or\cyru\or\cyrf\or\cyrh\or\cyrc\or\cyrch\o
  \cyrsh\or\cyrshch\or\cyryu\or\cyrya\else\@ctrerr\fi
%    \end{macrocode

%  \end{macro

%    Set up default Cyrillic math alphabets. The math groups for cyrilli
%    letters are defined in the encoding definition files. First, declar
%    a new alphabet for symbols, |\cyrmathrm|, based on the symbol fon
%    for Cyrillic letters defined in the encoding definition file. Note
%    that by default Cyrillic letters are taken from upright font in mat
%    mode (unlike Latin letters)
%    \begin{macrocode
%\RequirePackage{textmath
\@ifundefined{sym\cyrillicencoding letters}{}{
\SetSymbolFont{\cyrillicencoding letters}{bold}\cyrillicencodin
  \rmdefault\bfdefault\updefaul
\DeclareSymbolFontAlphabet\cyrmathrm{\cyrillicencoding letters
%    \end{macrocode
%    And we need a few commands to be able to switch to different variants
%    \begin{macrocode
\DeclareMathAlphabet\cyrmathbf\cyrillicencodin
  \rmdefault\bfdefault\updefaul
\DeclareMathAlphabet\cyrmathsf\cyrillicencodin
  \sfdefault\mddefault\updefaul
\DeclareMathAlphabet\cyrmathit\cyrillicencodin
  \rmdefault\mddefault\itdefaul
\DeclareMathAlphabet\cyrmathtt\cyrillicencodin
  \ttdefault\mddefault\updefaul

\SetMathAlphabet\cyrmathsf{bold}\cyrillicencodin
  \sfdefault\bfdefault\updefaul
\SetMathAlphabet\cyrmathit{bold}\cyrillicencodin
  \rmdefault\bfdefault\itdefaul

%    \end{macrocode

%    Some math functions in Ukrainian and Russian math books have othe
%    names: e.g., \texttt{sinh} in Russian is written as \texttt{sh} etc
%    So we define a number of new math operators

%    |\sinh|
%    \begin{macrocode
\def\sh{\mathop{\operator@font sh}\nolimits
%    \end{macrocode
%    |\cosh|
%    \begin{macrocode
\def\ch{\mathop{\operator@font ch}\nolimits
%    \end{macrocode
%    |\tan|
%    \begin{macrocode
\def\tg{\mathop{\operator@font tg}\nolimits
%    \end{macrocode
%    |\arctan|
%    \begin{macrocode
\def\arctg{\mathop{\operator@font arctg}\nolimits
%    \end{macrocode
%    arcctg
%    \begin{macrocode
\def\arcctg{\mathop{\operator@font arcctg}\nolimits
%    \end{macrocode
%    The following macro conflicts with |\th| defined in Latin~1 encoding

%    |\tanh|
% \changes{ukraineb-1.1k}{2004/05/21}{Change definition of \cs{th
%    only for this language
%    \begin{macrocode
\addto\extrasrussian{
  \babel@save{\th}
  \let\ltx@th\t
  \def\th{\textormath{\ltx@th}
                     {\mathop{\operator@font th}\nolimits}}

%    \end{macrocode
%    |\cot|
%    \begin{macrocode
\def\ctg{\mathop{\operator@font ctg}\nolimits
%    \end{macrocode
%    |\coth|
%    \begin{macrocode
\def\cth{\mathop{\operator@font cth}\nolimits
%    \end{macrocode
%    |\csc|
%    \begin{macrocode
\def\cosec{\mathop{\operator@font cosec}\nolimits
%    \end{macrocode

%    And finally some other Ukrainian and Russian mathematical symbols
%    \begin{macrocode
\def\Prob{\mathop{\kern\z@\mathsf{P}}\nolimits
\def\Variance{\mathop{\kern\z@\mathsf{D}}\nolimits
\def\nsd{\mathop{\cyrmathrm{\cyrn.\cyrs.\cyrd.}}\nolimits
\def\nsk{\mathop{\cyrmathrm{\cyrn.\cyrs.\cyrk.}}\nolimits
\def\NSD{\mathop{\cyrmathrm{\CYRN\CYRS\CYRD}}\nolimits
\def\NSK{\mathop{\cyrmathrm{\CYRN\CYRS\CYRK}}\nolimits
  \def\nod{\mathop{\cyrmathrm{\cyrn.\cyro.\cyrd.}}\nolimits}    % ?????
  \def\nok{\mathop{\cyrmathrm{\cyrn.\cyro.\cyrk.}}\nolimits}    % ?????
  \def\NOD{\mathop{\cyrmathrm{\CYRN\CYRO\CYRD}}\nolimits}       % ?????
  \def\NOK{\mathop{\cyrmathrm{\CYRN\CYRO\CYRK}}\nolimits}       % ?????
\def\Proj{\mathop{\cyrmathrm{\CYRP\cyrr}}\nolimits
%    \end{macrocode

% This is for compatibility with older Ukrainian packages
%    \begin{macrocode
\DeclareRobustCommand{\No}{
   \ifmmode{\nfss@text{\textnumero}}\else\textnumero\fi
%    \end{macrocode

%    The macro |\ldf@finish| takes care of looking for a configuration file
%    setting the main language to be switched on at |\begin{document}| an
%    resetting the category code of \texttt{@} to its original value

%    \begin{macrocode
\ldf@finish{ukrainian
%</code
%    \end{macrocode

% \Final
%
%% \CharacterTabl
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\
%%   Digits        \0\1\2\3\4\5\6\7\8\
%%   Exclamation   \!     Double quote  \"     Hash (number) \
%%   Dollar        \$     Percent       \%     Ampersand     \
%%   Acute accent  \'     Left paren    \(     Right paren   \
%%   Asterisk      \*     Plus          \+     Comma         \
%%   Minus         \-     Point         \.     Solidus       \
%%   Colon         \:     Semicolon     \;     Less than     \
%%   Equals        \=     Greater than  \>     Question mark \
%%   Commercial at \@     Left bracket  \[     Backslash     \
%%   Right bracket \]     Circumflex    \^     Underscore    \
%%   Grave accent  \`     Left brace    \{     Vertical bar  \
%%   Right brace   \}     Tilde         \~
%
\endinpu
